{"version":3,"file":"js/decidim_meetings_admin.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnCA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1BA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AAGA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AAEA;AAAA;AACA;AAAA;AAAA;AAGA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AAEA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9OA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnCA;AACA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;;;;;;;;;;;;;;;;AC9BA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;;;AC7JA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACjKA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;AChCA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACxpwCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACNA;AACA;AACA;AACA","sources":["webpack://decidim-base/../.rbenv/versions/3.1.1/lib/ruby/gems/3.1.0/gems/decidim-admin-0.28.0/app/packs/src/decidim/admin/auto_buttons_by_position.component.js","webpack://decidim-base/../.rbenv/versions/3.1.1/lib/ruby/gems/3.1.0/gems/decidim-admin-0.28.0/app/packs/src/decidim/admin/auto_label_by_position.component.js","webpack://decidim-base/../.rbenv/versions/3.1.1/lib/ruby/gems/3.1.0/gems/decidim-admin-0.28.0/app/packs/src/decidim/admin/dynamic_fields.component.js","webpack://decidim-base/../.rbenv/versions/3.1.1/lib/ruby/gems/3.1.0/gems/decidim-admin-0.28.0/app/packs/src/decidim/admin/field_dependent_inputs.component.js","webpack://decidim-base/../.rbenv/versions/3.1.1/lib/ruby/gems/3.1.0/gems/decidim-admin-0.28.0/app/packs/src/decidim/admin/sort_list.component.js","webpack://decidim-base/../.rbenv/versions/3.1.1/lib/ruby/gems/3.1.0/gems/decidim-meetings-0.28.0/app/packs/src/decidim/meetings/admin/agendas.js","webpack://decidim-base/../.rbenv/versions/3.1.1/lib/ruby/gems/3.1.0/gems/decidim-meetings-0.28.0/app/packs/src/decidim/meetings/admin/destroy_meeting_alert.js","webpack://decidim-base/../.rbenv/versions/3.1.1/lib/ruby/gems/3.1.0/gems/decidim-meetings-0.28.0/app/packs/src/decidim/meetings/admin/meetings_form.js","webpack://decidim-base/../.rbenv/versions/3.1.1/lib/ruby/gems/3.1.0/gems/decidim-meetings-0.28.0/app/packs/src/decidim/meetings/admin/registrations_form.js","webpack://decidim-base/../.rbenv/versions/3.1.1/lib/ruby/gems/3.1.0/gems/decidim-meetings-0.28.0/app/packs/src/decidim/meetings/admin/registrations_invite_form.js","webpack://decidim-base/./gems/decidim-module-core/app/packs/src/decidim/geocoding/attach_input.js","webpack://decidim-base/./gems/decidim-module-core/app/packs/src/decidim/geocoding/coordinate_input.js","webpack://decidim-base/./node_modules/html5sortable/dist/html5sortable.es.js","webpack://decidim-base/webpack/bootstrap","webpack://decidim-base/webpack/runtime/compat get default export","webpack://decidim-base/webpack/runtime/define property getters","webpack://decidim-base/webpack/runtime/hasOwnProperty shorthand","webpack://decidim-base/webpack/runtime/make namespace object","webpack://decidim-base/../.rbenv/versions/3.1.1/lib/ruby/gems/3.1.0/gems/decidim-meetings-0.28.0/app/packs/entrypoints/decidim_meetings_admin.js"],"sourcesContent":["export default class AutoButtonsByPositionComponent {\n  constructor(options = {}) {\n    this.listSelector = options.listSelector;\n    this.hideOnFirstSelector = options.hideOnFirstSelector;\n    this.hideOnLastSelector = options.hideOnLastSelector;\n\n    this.run();\n  }\n\n  run() {\n    const $list = $(this.listSelector);\n    const hideOnFirst = this.hideOnFirstSelector;\n    const hideOnLast = this.hideOnLastSelector;\n\n    if ($list.length === 1) {\n      const $item = $list.first();\n\n      $item.find(hideOnFirst).hide();\n      $item.find(hideOnLast).hide();\n    } else {\n      $list.each((idx, el) => {\n        if (el.id === $list.first().attr(\"id\")) {\n          $(el).find(hideOnFirst).hide();\n          $(el).find(hideOnLast).show();\n        }\n        else if (el.id === $list.last().attr(\"id\")) {\n          $(el).find(hideOnLast).hide();\n          $(el).find(hideOnFirst).show();\n        }\n        else {\n          $(el).find(hideOnLast).show();\n          $(el).find(hideOnFirst).show();\n        }\n      });\n    }\n  }\n}\n","export default class AutoLabelByPositionComponent {\n  constructor(options = {}) {\n    this.listSelector = options.listSelector;\n    this.labelSelector = options.labelSelector;\n    this.onPositionComputed = options.onPositionComputed;\n\n    this.run();\n  }\n\n  run() {\n    const $list = $(this.listSelector);\n\n    $list.each((idx, el) => {\n      const $label = $(el).find(this.labelSelector);\n      const labelContent = $label.html();\n\n      if (labelContent.match(/#(\\d+)/)) {\n        $label.html(labelContent.replace(/#(\\d+)/, `#${idx + 1}`));\n      } else {\n        $label.html(`${labelContent} #${idx + 1}`);\n      }\n\n      if (this.onPositionComputed) {\n        this.onPositionComputed(el, idx);\n      }\n    });\n  }\n}\n","/* eslint-disable require-jsdoc */\nclass DynamicFieldsComponent {\n  constructor(options = {}) {\n    this.wrapperSelector = options.wrapperSelector;\n    this.containerSelector = options.containerSelector;\n    this.fieldSelector = options.fieldSelector;\n    this.addFieldButtonSelector = options.addFieldButtonSelector;\n    this.addSeparatorButtonSelector = options.addSeparatorButtonSelector;\n    this.addTitleAndDescriptionButtonSelector = options.addTitleAndDescriptionButtonSelector;\n    this.fieldTemplateSelector = options.fieldTemplateSelector;\n    this.separatorTemplateSelector = options.separatorTemplateSelector;\n    this.TitleAndDescriptionTemplateSelector = options.TitleAndDescriptionTemplateSelector;\n    this.removeFieldButtonSelector = options.removeFieldButtonSelector;\n    this.moveUpFieldButtonSelector = options.moveUpFieldButtonSelector;\n    this.moveDownFieldButtonSelector = options.moveDownFieldButtonSelector;\n    this.onAddField = options.onAddField;\n    this.onRemoveField = options.onRemoveField;\n    this.onMoveUpField = options.onMoveUpField;\n    this.onMoveDownField = options.onMoveDownField;\n    this.placeholderId = options.placeholderId;\n    this.elementCounter = 0;\n    this._enableInterpolation();\n    this._activateFields();\n    this._bindEvents();\n  }\n\n  _enableInterpolation() {\n    $.fn.replaceAttribute = function(attribute, placeholder, value) {\n      $(this).find(`[${attribute}*=${placeholder}]`).addBack(`[${attribute}*=${placeholder}]`).each((index, element) => {\n        $(element).attr(attribute, $(element).attr(attribute).replace(placeholder, value));\n      });\n\n      return this;\n    }\n\n    $.fn.template = function(placeholder, value) {\n      // See the comment below in the `_addField()` method regarding the\n      // `<template>` tag support in IE11.\n      const $subtemplate = $(this).find(\"template, .decidim-template\");\n\n      if ($subtemplate.length > 0) {\n        $subtemplate.html((index, oldHtml) => $(oldHtml).template(placeholder, value)[0].outerHTML);\n      }\n\n      // Handle those subtemplates that are mapped with the `data-template`\n      // attribute. This is also because of the IE11 support.\n      const $subtemplateParents = $(this).find(\"[data-template]\");\n\n      if ($subtemplateParents.length > 0) {\n        $subtemplateParents.each((_i, elem) => {\n          const $self = $(elem);\n          const $tpl = $($self.data(\"template\"));\n\n          // Duplicate the sub-template with a unique ID as there may be\n          // multiple parent templates referring to the same sub-template.\n          const $subtpl = $($tpl[0].outerHTML);\n          const subtemplateId = `${$tpl.attr(\"id\")}-${value}`;\n          const subtemplateSelector = `#${subtemplateId}`;\n          $subtpl.attr(\"id\", subtemplateId);\n          $self.attr(\"data-template\", subtemplateSelector).data(\"template\", subtemplateSelector);\n          $tpl.after($subtpl);\n\n          $subtpl.html((index, oldHtml) => $(oldHtml).template(placeholder, value)[0].outerHTML);\n        });\n      }\n\n      $(this).replaceAttribute(\"id\", placeholder, value);\n      $(this).replaceAttribute(\"name\", placeholder, value);\n      $(this).replaceAttribute(\"data-tabs-content\", placeholder, value);\n      $(this).replaceAttribute(\"for\", placeholder, value);\n      $(this).replaceAttribute(\"tabs_id\", placeholder, value);\n      $(this).replaceAttribute(\"href\", placeholder, value);\n      $(this).replaceAttribute(\"value\", placeholder, value);\n\n      return this;\n    }\n  }\n\n  _bindEvents() {\n    $(this.wrapperSelector).on(\"click\", this.addFieldButtonSelector, (event) =>\n      this._bindSafeEvent(event, () => this._addField(this.fieldTemplateSelector))\n    );\n\n    if (this.addSeparatorButtonSelector) {\n      $(this.wrapperSelector).on(\"click\", this.addSeparatorButtonSelector, (event) =>\n        this._bindSafeEvent(event, () => this._addField(this.separatorTemplateSelector))\n      );\n    }\n\n    if (this.addTitleAndDescriptionButtonSelector) {\n      $(this.wrapperSelector).on(\"click\", this.addTitleAndDescriptionButtonSelector, (event) =>\n        this._bindSafeEvent(event, () => this._addField(this.TitleAndDescriptionTemplateSelector))\n      );\n    }\n\n    $(this.wrapperSelector).on(\"click\", this.removeFieldButtonSelector, (event) =>\n      this._bindSafeEvent(event, (target) => this._removeField(target))\n    );\n\n    if (this.moveUpFieldButtonSelector) {\n      $(this.wrapperSelector).on(\"click\", this.moveUpFieldButtonSelector, (event) =>\n        this._bindSafeEvent(event, (target) => this._moveUpField(target))\n      );\n    }\n\n    if (this.moveDownFieldButtonSelector) {\n      $(this.wrapperSelector).on(\"click\", this.moveDownFieldButtonSelector, (event) =>\n        this._bindSafeEvent(event, (target) => this._moveDownField(target))\n      );\n    }\n  }\n\n  _bindSafeEvent(event, cb) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    try {\n      return cb(event.target);\n    } catch (error) {\n      console.error(error); // eslint-disable-line no-console\n      return error;\n    }\n  }\n\n  // Adds a field.\n  //\n  // template - A String matching the type of the template. Expected to be\n  //  either \".decidim-question-template\" or \".decidim-separator-template\".\n  _addField(templateClass = \".decidim-template\") {\n    const $wrapper = $(this.wrapperSelector);\n    const $container = $wrapper.find(this.containerSelector);\n\n    // Allow defining the template using a `data-template` attribute on the\n    // wrapper element. This is to allow child templates which would otherwise\n    // be impossible using `<script type=\"text/template\">`. See the comment\n    // below regarding the `<template>` tag and IE11.\n    const templateSelector = $wrapper.data(\"template\");\n    let $template = null;\n    if (templateSelector) {\n      $template = $(templateSelector);\n    }\n    if ($template === null || $template.length < 1) {\n      // To preserve IE11 backwards compatibility, the views are using\n      // `<script type=\"text/template\">` with a given `class` instead of\n      // `<template>`. The `<template> tags are parsed in IE11 along with the\n      // DOM which may cause the form elements inside them to break the forms\n      // as they are submitted with them.\n      $template = $wrapper.children(`template, ${templateClass}`);\n    }\n\n    const $newField = $($template.html()).template(this.placeholderId, this._getUID());\n\n    $newField.find(\"ul.tabs\").attr(\"data-tabs\", true);\n\n    const $lastQuestion = $container.find(this.fieldSelector).last()\n    if ($lastQuestion.length > 0) {\n      $lastQuestion.after($newField);\n    } else {\n      $newField.appendTo($container);\n    }\n\n    $newField.foundation();\n\n    if (this.onAddField) {\n      this.onAddField($newField);\n    }\n  }\n\n  _removeField(target) {\n    const $target = $(target);\n    const $removedField = $target.parents(this.fieldSelector);\n    const idInput = $removedField.find(\"input\").filter((idx, input) => input.name.match(/id/));\n\n    if (idInput.length > 0) {\n      const deletedInput = $removedField.find(\"input\").filter((idx, input) => input.name.match(/delete/));\n\n      if (deletedInput.length > 0) {\n        $(deletedInput[0]).val(true);\n      }\n\n      $removedField.addClass(\"hidden\");\n      $removedField.hide();\n    } else {\n      $removedField.remove();\n    }\n\n    if (this.onRemoveField) {\n      this.onRemoveField($removedField);\n    }\n  }\n\n  _moveUpField(target) {\n    const $target = $(target);\n    const $movedUpField = $target.parents(this.fieldSelector);\n\n    $movedUpField.prev().before($movedUpField);\n\n    if (this.onMoveUpField) {\n      this.onMoveUpField($movedUpField);\n    }\n  }\n\n  _moveDownField(target) {\n    const $target = $(target);\n    const $movedDownField = $target.parents(this.fieldSelector);\n\n    $movedDownField.next().after($movedDownField);\n\n    if (this.onMoveDownField) {\n      this.onMoveDownField($movedDownField);\n    }\n  }\n\n  _activateFields() {\n    // Move the `<script type=\"text/template\">` elements to the bottom of the\n    // list container so that they will not cause the question moving\n    // functionality to break since it assumes that all children elements are\n    // the dynamic field list child items.\n    const $wrapper = $(this.wrapperSelector);\n    const $container = $wrapper.find(this.containerSelector);\n    $container.append($container.find(\"script\"));\n\n    $(this.fieldSelector).each((idx, el) => {\n      $(el).template(this.placeholderId, this._getUID());\n\n      $(el).find(\"ul.tabs\").attr(\"data-tabs\", true);\n    })\n  }\n\n  _getUID() {\n    this.elementCounter += 1;\n\n    return (new Date().getTime()) + this.elementCounter;\n  }\n}\n\nexport default function createDynamicFields(options) {\n  return new DynamicFieldsComponent(options);\n}\n","/* eslint-disable require-jsdoc */\nclass FieldDependentInputsComponent {\n  constructor(options = {}) {\n    this.controllerField = options.controllerField;\n    this.wrapperSelector = options.wrapperSelector;\n    this.dependentFieldsSelector = options.dependentFieldsSelector;\n    this.dependentInputSelector = options.dependentInputSelector;\n    this.enablingCondition = options.enablingCondition;\n    this._bindEvent();\n    this._run();\n  }\n\n  _run() {\n    const $controllerField = this.controllerField;\n    const $dependentFields = $controllerField.parents(this.wrapperSelector).find(this.dependentFieldsSelector);\n    const $dependentInputs = $dependentFields.find(this.dependentInputSelector);\n\n    if (this.enablingCondition($controllerField)) {\n      $dependentInputs.prop(\"disabled\", false);\n      $dependentFields.show();\n    } else {\n      $dependentInputs.prop(\"disabled\", true);\n      $dependentFields.hide();\n    }\n  }\n\n  _bindEvent() {\n    this.controllerField.on(\"change\", () => {\n      this._run();\n    });\n  }\n}\n\nexport default function createFieldDependentInputs(options) {\n  return new FieldDependentInputsComponent(options);\n}\n\n","/* eslint-disable require-jsdoc */\nimport sortable from \"html5sortable/dist/html5sortable.es\"\n\nclass SortListComponent {\n\n  /**\n   * Creates a sortable list using hmtl5sortable function.\n   *\n   * @param {String} sortListSelector The list selector that has to be sortable.\n   * @param {Object} options An object containing the same options as html5sortable. It also includes\n   *                an extra option `onSortUpdate`, a callback which returns the children collection\n   *                whenever the list order has been changed.\n   *\n   * @returns {void} Nothing.\n   */\n  constructor(sortListSelector, options) {\n    if ($(sortListSelector).length > 0) {\n      sortable(sortListSelector, options)[0].addEventListener(\"sortupdate\", (event) => {\n        const $children = $(event.target).children();\n\n        if (options.onSortUpdate) {\n          options.onSortUpdate($children);\n        }\n      });\n    }\n  }\n}\n\nexport default function createSortList(sortListSelector, options) {\n  return new SortListComponent(sortListSelector, options);\n}\n","import AutoButtonsByPositionComponent from \"src/decidim/admin/auto_buttons_by_position.component\"\nimport AutoLabelByPositionComponent from \"src/decidim/admin/auto_label_by_position.component\"\nimport createSortList from \"src/decidim/admin/sort_list.component\"\nimport createDynamicFields from \"src/decidim/admin/dynamic_fields.component\"\n\nconst wrapperSelector = \".meeting-agenda-items\";\nconst fieldSelector = \".meeting-agenda-item\";\nconst childsWrapperSelector = \".meeting-agenda-item-childs\";\nconst childFieldSelector = \".meeting-agenda-item-child\";\n\nconst autoLabelByPosition = new AutoLabelByPositionComponent({\n  listSelector: \".meeting-agenda-item:not(.hidden)\",\n  labelSelector: \".card-title span:first\",\n  onPositionComputed: (el, idx) => {\n    $(el).find(\"input[name$=\\\\[position\\\\]]\").val(idx);\n  }\n});\n\nconst autoButtonsByPosition = new AutoButtonsByPositionComponent({\n  listSelector: \".meeting-agenda-item:not(.hidden)\",\n  hideOnFirstSelector: \".move-up-agenda-item\",\n  hideOnLastSelector: \".move-down-agenda-item\"\n});\n\nconst createSortableList = () => {\n  createSortList(\".meeting-agenda-items-list:not(.published)\", {\n    handle: \".agenda-item-divider\",\n    placeholder: '<div style=\"border-style: dashed; border-color: #000\"></div>',\n    forcePlaceholderSize: true,\n    onSortUpdate: () => { autoLabelByPosition.run() }\n  });\n};\n\nconst createSortableListChild = () => {\n  createSortList(\".meeting-agenda-item-childs-list:not(.published)\", {\n    handle: \".agenda-item-child-divider\",\n    placeholder: '<div style=\"border-style: dashed; border-color: #000\"></div>',\n    forcePlaceholderSize: true,\n    onSortUpdate: () => { autoLabelByPosition.run() }\n  });\n};\n\nconst autoLabelByPositionChild = new AutoLabelByPositionComponent({\n  listSelector: \".meeting-agenda-item-child:not(.hidden)\",\n  labelSelector: \".card-title span:first\",\n  onPositionComputed: (el, idx) => {\n    $(el).find(\"input[name$=\\\\[position\\\\]]\").val(idx);\n  }\n});\n\nconst autoButtonsByPositionChild = new AutoButtonsByPositionComponent({\n  listSelector: \".meeting-agenda-item-child:not(.hidden)\",\n  hideOnFirstSelector: \".move-up-agenda-item-child\",\n  hideOnLastSelector: \".move-down-agenda-item-child\"\n});\n\nconst createDynamicFieldsForAgendaItemChilds = (fieldId) => {\n  return createDynamicFields({\n    placeholderId: \"meeting-agenda-item-child-id\",\n    wrapperSelector: `#${fieldId} ${childsWrapperSelector}`,\n    containerSelector: \".meeting-agenda-item-childs-list\",\n    fieldSelector: childFieldSelector,\n    addFieldButtonSelector: \".add-agenda-item-child\",\n    removeFieldButtonSelector: \".remove-agenda-item-child\",\n    moveUpFieldButtonSelector: \".move-up-agenda-item-child\",\n    moveDownFieldButtonSelector: \".move-down-agenda-item-child\",\n\n    onAddField: ($field) => {\n      createSortableListChild();\n\n      $field[0].querySelectorAll(\".editor-container\").forEach((el) => {\n        window.createEditor(el);\n      });\n\n      autoLabelByPositionChild.run();\n      autoButtonsByPositionChild.run();\n    },\n    onRemoveField: () => {\n      autoLabelByPositionChild.run();\n      autoButtonsByPositionChild.run();\n    },\n    onMoveUpField: () => {\n      autoLabelByPositionChild.run();\n      autoButtonsByPositionChild.run();\n    },\n    onMoveDownField: () => {\n      autoLabelByPositionChild.run();\n      autoButtonsByPositionChild.run();\n    }\n  });\n};\n\nconst dynamicFieldsForAgendaItemChilds = {};\n\nconst setupInitialAgendaItemChildAttributes = ($target) => {\n  const fieldId = $target.attr(\"id\");\n\n  dynamicFieldsForAgendaItemChilds[fieldId] = createDynamicFieldsForAgendaItemChilds(fieldId);\n\n}\n\nconst hideDeletedAgendaItem = ($target) => {\n  const inputDeleted = $target.find(\"input[name$=\\\\[deleted\\\\]]\").val();\n\n  if (inputDeleted === \"true\") {\n    $target.addClass(\"hidden\");\n    $target.hide();\n  }\n};\n\ncreateDynamicFields({\n  placeholderId: \"meeting-agenda-item-id\",\n  wrapperSelector: wrapperSelector,\n  containerSelector: \".meeting-agenda-items-list\",\n  fieldSelector: fieldSelector,\n  addFieldButtonSelector: \".add-agenda-item\",\n  removeFieldButtonSelector: \".remove-agenda-item\",\n  moveUpFieldButtonSelector: \".move-up-agenda-item\",\n  moveDownFieldButtonSelector: \".move-down-agenda-item\",\n  onAddField: ($field) => {\n    // createDynamicFieldsForAgendaItemChilds($field);\n    setupInitialAgendaItemChildAttributes($field);\n    createSortableList();\n\n    $field.find(\".editor-container\").each((idx, el) => {\n      window.createEditor(el);\n    });\n\n    autoLabelByPosition.run();\n    autoButtonsByPosition.run();\n  },\n  onRemoveField: () => {\n    autoLabelByPosition.run();\n    autoButtonsByPosition.run();\n  },\n  onMoveUpField: () => {\n    autoLabelByPosition.run();\n    autoButtonsByPosition.run();\n  },\n  onMoveDownField: () => {\n    autoLabelByPosition.run();\n    autoButtonsByPosition.run();\n  }\n});\n\ncreateSortableList();\n\n$(fieldSelector).each((idx, el) => {\n  const $target = $(el);\n\n  hideDeletedAgendaItem($target);\n  setupInitialAgendaItemChildAttributes($target);\n});\n\nautoLabelByPosition.run();\nautoButtonsByPosition.run();\nautoLabelByPositionChild.run();\nautoButtonsByPositionChild.run();\n","const removeNewlineAdjacentSpaces = (text) => {\n  return text.replace(/\\n\\s/g, \"\\n\");\n}\n\n$(() => {\n  const $confirmButton = $(\".destroy-meeting-alert\");\n\n  if ($confirmButton.length > 0) {\n    $confirmButton.on(\"click\", () => {\n      let alertText = `${$confirmButton.data(\"invalid-destroy-message\")} \\n\\n`;\n      alertText += removeNewlineAdjacentSpaces($confirmButton.data(\"proposal-titles\"));\n\n      alert(alertText); // eslint-disable-line no-alert\n    });\n  }\n});\n","import AutoButtonsByPositionComponent from \"src/decidim/admin/auto_buttons_by_position.component\"\nimport AutoLabelByPositionComponent from \"src/decidim/admin/auto_label_by_position.component\"\nimport createSortList from \"src/decidim/admin/sort_list.component\"\nimport createDynamicFields from \"src/decidim/admin/dynamic_fields.component\"\nimport createFieldDependentInputs from \"src/decidim/admin/field_dependent_inputs.component\"\nimport attachGeocoding from \"src/decidim/geocoding/attach_input\"\n\n$(() => {\n  const wrapperSelector = \".meeting-services\";\n  const fieldSelector = \".meeting-service\";\n\n  const autoLabelByPosition = new AutoLabelByPositionComponent({\n    listSelector: \".meeting-service:not(.hidden)\",\n    labelSelector: \".card-title span:first\",\n    onPositionComputed: (el, idx) => {\n      $(el).find(\"input[name$=\\\\[position\\\\]]\").val(idx);\n    }\n  });\n\n  const autoButtonsByPosition = new AutoButtonsByPositionComponent({\n    listSelector: \".meeting-service:not(.hidden)\",\n    hideOnFirstSelector: \".move-up-service\",\n    hideOnLastSelector: \".move-down-service\"\n  });\n\n  const createSortableList = () => {\n    createSortList(\".meeting-services-list:not(.published)\", {\n      handle: \".service-divider\",\n      placeholder: '<div style=\"border-style: dashed; border-color: #000\"></div>',\n      forcePlaceholderSize: true,\n      onSortUpdate: () => { autoLabelByPosition.run() }\n    });\n  };\n\n  const hideDeletedService = ($target) => {\n    const inputDeleted = $target.find(\"input[name$=\\\\[deleted\\\\]]\").val();\n\n    if (inputDeleted === \"true\") {\n      $target.addClass(\"hidden\");\n      $target.hide();\n    }\n  };\n\n  createDynamicFields({\n    placeholderId: \"meeting-service-id\",\n    wrapperSelector: wrapperSelector,\n    containerSelector: \".meeting-services-list\",\n    fieldSelector: fieldSelector,\n    addFieldButtonSelector: \".add-service\",\n    removeFieldButtonSelector: \".remove-service\",\n    moveUpFieldButtonSelector: \".move-up-service\",\n    moveDownFieldButtonSelector: \".move-down-service\",\n    onAddField: () => {\n      createSortableList();\n\n      autoLabelByPosition.run();\n      autoButtonsByPosition.run();\n    },\n    onRemoveField: () => {\n      autoLabelByPosition.run();\n      autoButtonsByPosition.run();\n    },\n    onMoveUpField: () => {\n      autoLabelByPosition.run();\n      autoButtonsByPosition.run();\n    },\n    onMoveDownField: () => {\n      autoLabelByPosition.run();\n      autoButtonsByPosition.run();\n    }\n  });\n\n  createSortableList();\n\n  $(fieldSelector).each((idx, el) => {\n    const $target = $(el);\n\n    hideDeletedService($target);\n  });\n\n  autoLabelByPosition.run();\n  autoButtonsByPosition.run();\n\n  const $form = $(\".edit_meeting, .new_meeting, .copy_meetings\");\n\n  if ($form.length > 0) {\n    const $privateMeeting = $form.find(\"#private_meeting\");\n    const $transparent = $form.find(\"#transparent\");\n\n    const toggleDisabledHiddenFields = () => {\n      const enabledPrivateSpace = $privateMeeting.find(\"input[type='checkbox']\").prop(\"checked\");\n      $transparent.find(\"input[type='checkbox']\").attr(\"disabled\", \"disabled\");\n\n      if (enabledPrivateSpace) {\n        $transparent.find(\"input[type='checkbox']\").attr(\"disabled\", !enabledPrivateSpace);\n      }\n    };\n\n    $privateMeeting.on(\"change\", toggleDisabledHiddenFields);\n    toggleDisabledHiddenFields();\n\n    attachGeocoding($form.find(\"#meeting_address\"));\n\n    const $meetingRegistrationType = $form.find(\"#meeting_registration_type\");\n    const $meetingRegistrationUrl = $form.find(\"#meeting_registration_url\");\n\n    const toggleDependsOnSelect = ($target, $showDiv, type) => {\n      const value = $target.val();\n      $showDiv.toggle(value === type);\n    };\n\n    $meetingRegistrationType.on(\"change\", (ev) => {\n      const $target = $(ev.target);\n      toggleDependsOnSelect($target, $meetingRegistrationUrl, \"on_different_platform\");\n    });\n\n    toggleDependsOnSelect($meetingRegistrationType, $meetingRegistrationUrl, \"on_different_platform\");\n\n    const $meetingTypeOfMeeting = $form.find(\"#meeting_type_of_meeting\");\n    const $meetingOnlineFields = $form.find(\".field[data-meeting-type='online']\");\n    const $meetingInPersonFields = $form.find(\".field[data-meeting-type='in_person']\");\n    const $meetingOnlineAccessLevelFields = $form.find(\".field[data-meeting-type='online-access-level']\");\n    const $meetingIframeEmbedType = $form.find(\"#meeting_iframe_embed_type\");\n\n    const toggleTypeDependsOnSelect = ($target, $showDiv, type) => {\n      const value = $target.val();\n      if (value === \"hybrid\") {\n        $showDiv.show();\n      } else {\n        $showDiv.hide();\n        if (value === type) {\n          $showDiv.show();\n        }\n      }\n    };\n\n    $meetingTypeOfMeeting.on(\"change\", (ev) => {\n      const $target = $(ev.target);\n      const embedTypeValue = $(\"#meeting_iframe_embed_type select\").val();\n\n      toggleTypeDependsOnSelect($target, $meetingOnlineFields, \"online\");\n      toggleTypeDependsOnSelect($target, $meetingInPersonFields, \"in_person\");\n      if (embedTypeValue === \"none\") {\n        $meetingOnlineAccessLevelFields.hide();\n      } else {\n        toggleTypeDependsOnSelect($target, $meetingOnlineAccessLevelFields, \"online\");\n      }\n    });\n\n    toggleTypeDependsOnSelect($meetingTypeOfMeeting, $meetingOnlineFields, \"online\");\n    toggleTypeDependsOnSelect($meetingTypeOfMeeting, $meetingInPersonFields, \"in_person\");\n    createFieldDependentInputs({\n      controllerField: $meetingIframeEmbedType,\n      wrapperSelector: \".iframe-fields\",\n      dependentFieldsSelector: \".iframe-fields--access-level\",\n      dependentInputSelector: \"input\",\n      enablingCondition: ($field) => {\n        return $field.find(\"select\").val() !== \"none\"\n      }\n    });\n  }\n})\n","$(() => {\n  const $form = $(\".edit_meeting_registrations\");\n\n  if ($form.length > 0) {\n    const $registrationsEnabled = $form.find(\"#meeting_registrations_enabled\");\n    const $availableSlots = $form.find(\"#meeting_available_slots\");\n    const $reservedSlots = $form.find(\"#meeting_reserved_slots\");\n    const $customizeRegistrationEmail = $form.find(\"#meeting_customize_registration_email\");\n\n    $customizeRegistrationEmail.on(\"click\", (event) => {\n\n      if (event.target.checked) {\n        $(\"#customize_registration_email-div\").removeClass(\"hidden\");\n      } else {\n        $(\"#customize_registration_email-div\").addClass(\"hidden\");\n      }\n    })\n\n    const toggleDisabledFields = () => {\n      const enabled = $registrationsEnabled.prop(\"checked\");\n      $availableSlots.attr(\"disabled\", !enabled);\n      $reservedSlots.attr(\"disabled\", !enabled);\n      $customizeRegistrationEmail.attr(\"disabled\", !enabled);\n\n      $form[0].querySelectorAll(\".editor-container .ProseMirror\").forEach((node) => {\n        node.editor.setOptions({ editable: enabled });\n      });\n    };\n\n    $registrationsEnabled.on(\"change\", toggleDisabledFields);\n    toggleDisabledFields();\n  }\n});\n","import createFieldDependentInputs from \"src/decidim/admin/field_dependent_inputs.component\"\n\n$(() => {\n  const $attendeeType = $('[name=\"meeting_registration_invite[existing_user]\"');\n\n  createFieldDependentInputs({\n    controllerField: $attendeeType,\n    wrapperSelector: \".attendee-fields\",\n    dependentFieldsSelector: \".attendee-fields--new-user\",\n    dependentInputSelector: \"input\",\n    enablingCondition: () => {\n      return $(\"#meeting_registration_invite_existing_user_false\").is(\":checked\")\n    }\n  });\n\n  createFieldDependentInputs({\n    controllerField: $attendeeType,\n    wrapperSelector: \".attendee-fields\",\n    dependentFieldsSelector: \".attendee-fields--user-picker\",\n    dependentInputSelector: \"input\",\n    enablingCondition: () => {\n      return $(\"#meeting_registration_invite_existing_user_true\").is(\":checked\")\n    }\n  });\n})\n","/* eslint-disable require-jsdoc */\nimport getCoordinateInputName from \"src/decidim/geocoding/coordinate_input\"\n\n/**\n * You can use this method to \"attach\" front-end geocoding to any forms in the\n * front-end which have address fields with geocoding autocompletion\n * functionality already applied to them.\n *\n * To learn more about the front-end geocoding autocompletion, please refer to\n * the maps documentation at: /docs/customization/maps.md.\n *\n * When the geocoding autocompletion finishes, most of the times, its results\n * will also contain the geocoordinate information for the selected address.\n * This method allows you to pass these coordinates (latitude and longitude)\n * to the same front-end form where the geocoding autocompletion address field\n * is located at (which is the $input you pass to this method). The latitude\n * and longitude coordinates will be added or \"attached\" to the form once the\n * user selects one of the suggested addresses.\n *\n * Therefore, if there was the following geocoding autocompletion field at\n * your form:\n *   <input\n *     id=\"record_address\"\n *     type=\"text\"\n *     name=\"record[address]\"\n *     data-decidim-geocoding=\"{&quot;url&quot;:&quot;https://photon.example.org/api/&quot;}\"\n *   />\n *\n * You would then \"attach\" the geocoding result coordinates to the same form\n * where this input is at as follows:\n *   $(document).ready(function() {\n *     window.Decidim.attachGeocoding($(\"#record_address\"));\n *   });\n *\n * Now, after the user selects one of the suggested geocoding autocompletion\n * addresses and the geocoding autocompletion API provides the coordinates in\n * the results, you would have the following fields automatically generated\n * to your form:\n *   <input id=\"record_address\" type=\"text\" name=\"record[address]\" value=\"Selected address, 00210, City\" ... />\n *   <input id=\"record_latitude\" type=\"hidden\" name=\"record[latitude]\" value=\"1.123\" />\n *   <input id=\"record_longitude\" type=\"hidden\" name=\"record[longitude]\" value=\"2.234\" />\n *\n * If you would not do the attachment, these hidden longitude and latitude\n * fields would not be generated and the geocoding would have to happen at the\n * server-side when the form is submitted. The problem with that approach\n * would be that the server-side address geocoding could potentially result in\n * different coordinates than what the user actually selected in the front-end\n * because the autocompletion API can return different coordinates than the\n * geocoding API. Another reason is to avoid unnecessary calls to the\n * geocoding API as the front-end geocoding suggestion already returned the\n * coordinate values we need.\n *\n * @param {jQuery} $input The input jQuery element for the geocoded address\n *   field.\n * @param {Object} options (optional) Extra options if you want to customize\n *   the latitude and longitude element IDs or names from the default.\n * @param {function} callback (optional) Callback to run when updating the coordinates values\n * @returns {void}\n */\n\nexport default function attachGeocoding($input, options, callback) {\n  const attachOptions = $.extend({}, options);\n  const inputIdParts = $input.attr(\"id\").split(\"_\");\n  inputIdParts.pop();\n\n  const idPrefix = `${inputIdParts.join(\"_\")}`;\n\n  let latitudeName = \"latitude\";\n  let longitudeName = \"longitude\";\n\n  if ($input.length > 0) {\n    latitudeName = getCoordinateInputName(\"latitude\", $input, attachOptions);\n    longitudeName = getCoordinateInputName(\"longitude\", $input, attachOptions);\n  }\n\n  const config = $.extend({\n    latitudeId: `${idPrefix}_latitude`,\n    longitudeId: `${idPrefix}_longitude`,\n    latitudeName: latitudeName,\n    longitudeName: longitudeName\n  }, options);\n  let geocoded = false;\n\n  const createCoordinateFields = () => {\n    let $latitude = $(`#${config.latitudeId}`);\n    if ($latitude.length < 1) {\n      $latitude = $(`<input type=\"hidden\" name=\"${config.latitudeName}\" id=\"${config.latitudeId}\" />`);\n      $input.after($latitude);\n    }\n\n    let $longitude = $(`#${config.longitudeId}`);\n    if ($longitude.length < 1) {\n      $longitude = $(`<input type=\"hidden\" name=\"${config.longitudeName}\" id=\"${config.longitudeId}\" />`);\n      $input.after($longitude);\n    }\n  }\n  const clearCoordinateFields = () => {\n    if (geocoded) {\n      return;\n    }\n\n    $(`#${config.latitudeId}`).val(\"\").removeAttr(\"value\");\n    $(`#${config.longitudeId}`).val(\"\").removeAttr(\"value\");\n  };\n  const setCoordinates = (coordinates) => {\n    createCoordinateFields();\n\n    $(`#${config.latitudeId}`).val(coordinates[0]).attr(\"value\", coordinates[0]);\n    $(`#${config.longitudeId}`).val(coordinates[1]).attr(\"value\", coordinates[1]);\n  }\n\n  // When the user changes the value of the coordinate field without selecting\n  // any of the geocoding autocomplete results, clear the current latitude and\n  // longitude values to let the backend do the geocoding. Once a geocoding\n  // autocomplete value has been selected, assume the user just wants to\n  // refine the address formatting without changing the location point value.\n  // If they want, they can still modify the point in the next step of the\n  // proposal creation/editing.\n  $input.on(\"change.decidim\", () => {\n    clearCoordinateFields();\n  });\n\n  // When we receive the geocoding event on the field, update the coordinate\n  // values.\n  $input.on(\"geocoder-suggest-coordinates.decidim\", (_ev, coordinates) => {\n    setCoordinates(coordinates);\n    geocoded = true;\n    if (typeof callback === \"function\") {\n      callback(coordinates);\n      return;\n    }\n  });\n\n  // Set the initial values if the field defines the coordinates\n  const coordinates = `${$input.data(\"coordinates\")}`.split(\",\").map(parseFloat);\n  if (Array.isArray(coordinates) && coordinates.length === 2) {\n    setCoordinates(coordinates);\n  }\n}\n","/**\n * Get coordinate input name from a given $input\n * @param {string} coordinate - Allows to find 'latitude' or 'longitude' field.\n * @param {jQuery} $input - Address input field\n * @param {Object} options (optional) - Extra options\n * @returns {string} - Returns input name\n */\nexport default function getCoordinateInputName(coordinate, $input, options) {\n  const key = `${coordinate}Name`;\n  if (options[key]) {\n    return options[key];\n  }\n\n  const inputName = $input.attr(\"name\");\n  const subNameMatch = /\\[[^\\]]+\\]$/;\n  if (inputName.match(subNameMatch)) {\n    return inputName.replace(subNameMatch, `[${coordinate}]`);\n  }\n\n  return coordinate;\n}\n","/*\n * HTML5Sortable package\n * https://github.com/lukasoppermann/html5sortable\n *\n * Maintained by Lukas Oppermann <lukas@vea.re>\n *\n * Released under the MIT license.\n */\n/**\n * Get or set data on element\n * @param {HTMLElement} element\n * @param {string} key\n * @param {any} value\n * @return {*}\n */\nfunction addData(element, key, value) {\n    if (value === undefined) {\n        return element && element.h5s && element.h5s.data && element.h5s.data[key];\n    }\n    else {\n        element.h5s = element.h5s || {};\n        element.h5s.data = element.h5s.data || {};\n        element.h5s.data[key] = value;\n    }\n}\n/**\n * Remove data from element\n * @param {HTMLElement} element\n */\nfunction removeData(element) {\n    if (element.h5s) {\n        delete element.h5s.data;\n    }\n}\n\n/* eslint-env browser */\n/**\n * Filter only wanted nodes\n * @param {NodeList|HTMLCollection|Array} nodes\n * @param {String} selector\n * @returns {Array}\n */\nvar filter = (function (nodes, selector) {\n    if (!(nodes instanceof NodeList || nodes instanceof HTMLCollection || nodes instanceof Array)) {\n        throw new Error('You must provide a nodeList/HTMLCollection/Array of elements to be filtered.');\n    }\n    if (typeof selector !== 'string') {\n        return Array.from(nodes);\n    }\n    return Array.from(nodes).filter(function (item) { return item.nodeType === 1 && item.matches(selector); });\n});\n\n/* eslint-env browser */\n/* eslint-disable no-use-before-define */\nvar stores = new Map();\n/* eslint-enable no-use-before-define */\n/**\n * Stores data & configurations per Sortable\n * @param {Object} config\n */\nvar Store = /** @class */ (function () {\n    function Store() {\n        this._config = new Map(); // eslint-disable-line no-undef\n        this._placeholder = undefined; // eslint-disable-line no-undef\n        this._data = new Map(); // eslint-disable-line no-undef\n    }\n    Object.defineProperty(Store.prototype, \"config\", {\n        /**\n         * get the configuration map of a class instance\n         * @method config\n         * @return {object}\n         */\n        get: function () {\n            // transform Map to object\n            var config = {};\n            this._config.forEach(function (value, key) {\n                config[key] = value;\n            });\n            // return object\n            return config;\n        },\n        /**\n         * set the configuration of a class instance\n         * @method config\n         * @param {object} config object of configurations\n         */\n        set: function (config) {\n            if (typeof config !== 'object') {\n                throw new Error('You must provide a valid configuration object to the config setter.');\n            }\n            // combine config with default\n            var mergedConfig = Object.assign({}, config);\n            // add config to map\n            this._config = new Map(Object.entries(mergedConfig));\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * set individual configuration of a class instance\n     * @method setConfig\n     * @param  key valid configuration key\n     * @param  value any value\n     * @return void\n     */\n    Store.prototype.setConfig = function (key, value) {\n        if (!this._config.has(key)) {\n            throw new Error(\"Trying to set invalid configuration item: \" + key);\n        }\n        // set config\n        this._config.set(key, value);\n    };\n    /**\n     * get an individual configuration of a class instance\n     * @method getConfig\n     * @param  key valid configuration key\n     * @return any configuration value\n     */\n    Store.prototype.getConfig = function (key) {\n        if (!this._config.has(key)) {\n            throw new Error(\"Invalid configuration item requested: \" + key);\n        }\n        return this._config.get(key);\n    };\n    Object.defineProperty(Store.prototype, \"placeholder\", {\n        /**\n         * get the placeholder for a class instance\n         * @method placeholder\n         * @return {HTMLElement|null}\n         */\n        get: function () {\n            return this._placeholder;\n        },\n        /**\n         * set the placeholder for a class instance\n         * @method placeholder\n         * @param {HTMLElement} placeholder\n         * @return {void}\n         */\n        set: function (placeholder) {\n            if (!(placeholder instanceof HTMLElement) && placeholder !== null) {\n                throw new Error('A placeholder must be an html element or null.');\n            }\n            this._placeholder = placeholder;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * set an data entry\n     * @method setData\n     * @param {string} key\n     * @param {any} value\n     * @return {void}\n     */\n    Store.prototype.setData = function (key, value) {\n        if (typeof key !== 'string') {\n            throw new Error('The key must be a string.');\n        }\n        this._data.set(key, value);\n    };\n    /**\n     * get an data entry\n     * @method getData\n     * @param {string} key an existing key\n     * @return {any}\n     */\n    Store.prototype.getData = function (key) {\n        if (typeof key !== 'string') {\n            throw new Error('The key must be a string.');\n        }\n        return this._data.get(key);\n    };\n    /**\n     * delete an data entry\n     * @method deleteData\n     * @param {string} key an existing key\n     * @return {boolean}\n     */\n    Store.prototype.deleteData = function (key) {\n        if (typeof key !== 'string') {\n            throw new Error('The key must be a string.');\n        }\n        return this._data.delete(key);\n    };\n    return Store;\n}());\n/**\n * @param {HTMLElement} sortableElement\n * @returns {Class: Store}\n */\nvar store = (function (sortableElement) {\n    // if sortableElement is wrong type\n    if (!(sortableElement instanceof HTMLElement)) {\n        throw new Error('Please provide a sortable to the store function.');\n    }\n    // create new instance if not avilable\n    if (!stores.has(sortableElement)) {\n        stores.set(sortableElement, new Store());\n    }\n    // return instance\n    return stores.get(sortableElement);\n});\n\n/**\n * @param {Array|HTMLElement} element\n * @param {Function} callback\n * @param {string} event\n */\nfunction addEventListener(element, eventName, callback) {\n    if (element instanceof Array) {\n        for (var i = 0; i < element.length; ++i) {\n            addEventListener(element[i], eventName, callback);\n        }\n        return;\n    }\n    element.addEventListener(eventName, callback);\n    store(element).setData(\"event\" + eventName, callback);\n}\n/**\n * @param {Array<HTMLElement>|HTMLElement} element\n * @param {string} eventName\n */\nfunction removeEventListener(element, eventName) {\n    if (element instanceof Array) {\n        for (var i = 0; i < element.length; ++i) {\n            removeEventListener(element[i], eventName);\n        }\n        return;\n    }\n    element.removeEventListener(eventName, store(element).getData(\"event\" + eventName));\n    store(element).deleteData(\"event\" + eventName);\n}\n\n/**\n * @param {Array<HTMLElement>|HTMLElement} element\n * @param {string} attribute\n * @param {string} value\n */\nfunction addAttribute(element, attribute, value) {\n    if (element instanceof Array) {\n        for (var i = 0; i < element.length; ++i) {\n            addAttribute(element[i], attribute, value);\n        }\n        return;\n    }\n    element.setAttribute(attribute, value);\n}\n/**\n * @param {Array|HTMLElement} element\n * @param {string} attribute\n */\nfunction removeAttribute(element, attribute) {\n    if (element instanceof Array) {\n        for (var i = 0; i < element.length; ++i) {\n            removeAttribute(element[i], attribute);\n        }\n        return;\n    }\n    element.removeAttribute(attribute);\n}\n\n/**\n * @param {HTMLElement} element\n * @returns {Object}\n */\nvar offset = (function (element) {\n    if (!element.parentElement || element.getClientRects().length === 0) {\n        throw new Error('target element must be part of the dom');\n    }\n    var rect = element.getClientRects()[0];\n    return {\n        left: rect.left + window.pageXOffset,\n        right: rect.right + window.pageXOffset,\n        top: rect.top + window.pageYOffset,\n        bottom: rect.bottom + window.pageYOffset\n    };\n});\n\n/**\n * Creates and returns a new debounced version of the passed function which will postpone its execution until after wait milliseconds have elapsed\n * @param {Function} func to debounce\n * @param {number} time to wait before calling function with latest arguments, 0 - no debounce\n * @returns {function} - debounced function\n */\nvar debounce = (function (func, wait) {\n    if (wait === void 0) { wait = 0; }\n    var timeout;\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        clearTimeout(timeout);\n        timeout = setTimeout(function () {\n            func.apply(void 0, args);\n        }, wait);\n    };\n});\n\n/* eslint-env browser */\n/**\n * Get position of the element relatively to its sibling elements\n * @param {HTMLElement} element\n * @returns {number}\n */\nvar getIndex = (function (element, elementList) {\n    if (!(element instanceof HTMLElement) || !(elementList instanceof NodeList || elementList instanceof HTMLCollection || elementList instanceof Array)) {\n        throw new Error('You must provide an element and a list of elements.');\n    }\n    return Array.from(elementList).indexOf(element);\n});\n\n/* eslint-env browser */\n/**\n * Test whether element is in DOM\n * @param {HTMLElement} element\n * @returns {boolean}\n */\nvar isInDom = (function (element) {\n    if (!(element instanceof HTMLElement)) {\n        throw new Error('Element is not a node element.');\n    }\n    return element.parentNode !== null;\n});\n\n/* eslint-env browser */\n/**\n * Insert node before or after target\n * @param {HTMLElement} referenceNode - reference element\n * @param {HTMLElement} newElement - element to be inserted\n * @param {String} position - insert before or after reference element\n */\nvar insertNode = function (referenceNode, newElement, position) {\n    if (!(referenceNode instanceof HTMLElement) || !(referenceNode.parentElement instanceof HTMLElement)) {\n        throw new Error('target and element must be a node');\n    }\n    referenceNode.parentElement.insertBefore(newElement, (position === 'before' ? referenceNode : referenceNode.nextElementSibling));\n};\n/**\n * Insert before target\n * @param {HTMLElement} target\n * @param {HTMLElement} element\n */\nvar insertBefore = function (target, element) { return insertNode(target, element, 'before'); };\n/**\n * Insert after target\n * @param {HTMLElement} target\n * @param {HTMLElement} element\n */\nvar insertAfter = function (target, element) { return insertNode(target, element, 'after'); };\n\n/* eslint-env browser */\n/**\n * Filter only wanted nodes\n * @param {HTMLElement} sortableContainer\n * @param {Function} customSerializer\n * @returns {Array}\n */\nvar serialize = (function (sortableContainer, customItemSerializer, customContainerSerializer) {\n    if (customItemSerializer === void 0) { customItemSerializer = function (serializedItem, sortableContainer) { return serializedItem; }; }\n    if (customContainerSerializer === void 0) { customContainerSerializer = function (serializedContainer) { return serializedContainer; }; }\n    // check for valid sortableContainer\n    if (!(sortableContainer instanceof HTMLElement) || !sortableContainer.isSortable === true) {\n        throw new Error('You need to provide a sortableContainer to be serialized.');\n    }\n    // check for valid serializers\n    if (typeof customItemSerializer !== 'function' || typeof customContainerSerializer !== 'function') {\n        throw new Error('You need to provide a valid serializer for items and the container.');\n    }\n    // get options\n    var options = addData(sortableContainer, 'opts');\n    var item = options.items;\n    // serialize container\n    var items = filter(sortableContainer.children, item);\n    var serializedItems = items.map(function (item) {\n        return {\n            parent: sortableContainer,\n            node: item,\n            html: item.outerHTML,\n            index: getIndex(item, items)\n        };\n    });\n    // serialize container\n    var container = {\n        node: sortableContainer,\n        itemCount: serializedItems.length\n    };\n    return {\n        container: customContainerSerializer(container),\n        items: serializedItems.map(function (item) { return customItemSerializer(item, sortableContainer); })\n    };\n});\n\n/* eslint-env browser */\n/**\n * create a placeholder element\n * @param {HTMLElement} sortableElement a single sortable\n * @param {string|undefined} placeholder a string representing an html element\n * @param {string} placeholderClasses a string representing the classes that should be added to the placeholder\n */\nvar makePlaceholder = (function (sortableElement, placeholder, placeholderClass) {\n    var _a;\n    if (placeholderClass === void 0) { placeholderClass = 'sortable-placeholder'; }\n    if (!(sortableElement instanceof HTMLElement)) {\n        throw new Error('You must provide a valid element as a sortable.');\n    }\n    // if placeholder is not an element\n    if (!(placeholder instanceof HTMLElement) && placeholder !== undefined) {\n        throw new Error('You must provide a valid element as a placeholder or set ot to undefined.');\n    }\n    // if no placeholder element is given\n    if (placeholder === undefined) {\n        if (['UL', 'OL'].includes(sortableElement.tagName)) {\n            placeholder = document.createElement('li');\n        }\n        else if (['TABLE', 'TBODY'].includes(sortableElement.tagName)) {\n            placeholder = document.createElement('tr');\n            // set colspan to always all rows, otherwise the item can only be dropped in first column\n            placeholder.innerHTML = '<td colspan=\"100\"></td>';\n        }\n        else {\n            placeholder = document.createElement('div');\n        }\n    }\n    // add classes to placeholder\n    if (typeof placeholderClass === 'string') {\n        (_a = placeholder.classList).add.apply(_a, placeholderClass.split(' '));\n    }\n    return placeholder;\n});\n\n/* eslint-env browser */\n/**\n * Get height of an element including padding\n * @param {HTMLElement} element an dom element\n */\nvar getElementHeight = (function (element) {\n    if (!(element instanceof HTMLElement)) {\n        throw new Error('You must provide a valid dom element');\n    }\n    // get calculated style of element\n    var style = window.getComputedStyle(element);\n    // get only height if element has box-sizing: border-box specified\n    if (style.getPropertyValue('box-sizing') === 'border-box') {\n        return parseInt(style.getPropertyValue('height'), 10);\n    }\n    // pick applicable properties, convert to int and reduce by adding\n    return ['height', 'padding-top', 'padding-bottom']\n        .map(function (key) {\n        var int = parseInt(style.getPropertyValue(key), 10);\n        return isNaN(int) ? 0 : int;\n    })\n        .reduce(function (sum, value) { return sum + value; });\n});\n\n/* eslint-env browser */\n/**\n * Get width of an element including padding\n * @param {HTMLElement} element an dom element\n */\nvar getElementWidth = (function (element) {\n    if (!(element instanceof HTMLElement)) {\n        throw new Error('You must provide a valid dom element');\n    }\n    // get calculated style of element\n    var style = window.getComputedStyle(element);\n    // pick applicable properties, convert to int and reduce by adding\n    return ['width', 'padding-left', 'padding-right']\n        .map(function (key) {\n        var int = parseInt(style.getPropertyValue(key), 10);\n        return isNaN(int) ? 0 : int;\n    })\n        .reduce(function (sum, value) { return sum + value; });\n});\n\n/* eslint-env browser */\n/**\n * get handle or return item\n * @param {Array<HTMLElement>} items\n * @param {string} selector\n */\nvar getHandles = (function (items, selector) {\n    if (!(items instanceof Array)) {\n        throw new Error('You must provide a Array of HTMLElements to be filtered.');\n    }\n    if (typeof selector !== 'string') {\n        return items;\n    }\n    return items\n        // remove items without handle from array\n        .filter(function (item) {\n        return item.querySelector(selector) instanceof HTMLElement ||\n            (item.shadowRoot && item.shadowRoot.querySelector(selector) instanceof HTMLElement);\n    })\n        // replace item with handle in array\n        .map(function (item) {\n        return item.querySelector(selector) || (item.shadowRoot && item.shadowRoot.querySelector(selector));\n    });\n});\n\n/**\n * @param {Event} event\n * @returns {HTMLElement}\n */\nvar getEventTarget = (function (event) {\n    return (event.composedPath && event.composedPath()[0]) || event.target;\n});\n\n/* eslint-env browser */\n/**\n * defaultDragImage returns the current item as dragged image\n * @param {HTMLElement} draggedElement - the item that the user drags\n * @param {object} elementOffset - an object with the offsets top, left, right & bottom\n * @param {Event} event - the original drag event object\n * @return {object} with element, posX and posY properties\n */\nvar defaultDragImage = function (draggedElement, elementOffset, event) {\n    return {\n        element: draggedElement,\n        posX: event.pageX - elementOffset.left,\n        posY: event.pageY - elementOffset.top\n    };\n};\n/**\n * attaches an element as the drag image to an event\n * @param {Event} event - the original drag event object\n * @param {HTMLElement} draggedElement - the item that the user drags\n * @param {Function} customDragImage - function to create a custom dragImage\n * @return void\n */\nvar setDragImage = (function (event, draggedElement, customDragImage) {\n    // check if event is provided\n    if (!(event instanceof Event)) {\n        throw new Error('setDragImage requires a DragEvent as the first argument.');\n    }\n    // check if draggedElement is provided\n    if (!(draggedElement instanceof HTMLElement)) {\n        throw new Error('setDragImage requires the dragged element as the second argument.');\n    }\n    // set default function of none provided\n    if (!customDragImage) {\n        customDragImage = defaultDragImage;\n    }\n    // check if setDragImage method is available\n    if (event.dataTransfer && event.dataTransfer.setDragImage) {\n        // get the elements offset\n        var elementOffset = offset(draggedElement);\n        // get the dragImage\n        var dragImage = customDragImage(draggedElement, elementOffset, event);\n        // check if custom function returns correct values\n        if (!(dragImage.element instanceof HTMLElement) || typeof dragImage.posX !== 'number' || typeof dragImage.posY !== 'number') {\n            throw new Error('The customDragImage function you provided must return and object with the properties element[string], posX[integer], posY[integer].');\n        }\n        // needs to be set for HTML5 drag & drop to work\n        event.dataTransfer.effectAllowed = 'copyMove';\n        // Firefox requires it to use the event target's id for the data\n        event.dataTransfer.setData('text/plain', getEventTarget(event).id);\n        // set the drag image on the event\n        event.dataTransfer.setDragImage(dragImage.element, dragImage.posX, dragImage.posY);\n    }\n});\n\n/**\n * Check if curList accepts items from destList\n * @param {sortable} destination the container an item is move to\n * @param {sortable} origin the container an item comes from\n */\nvar listsConnected = (function (destination, origin) {\n    // check if valid sortable\n    if (destination.isSortable === true) {\n        var acceptFrom = store(destination).getConfig('acceptFrom');\n        // check if acceptFrom is valid\n        if (acceptFrom !== null && acceptFrom !== false && typeof acceptFrom !== 'string') {\n            throw new Error('HTML5Sortable: Wrong argument, \"acceptFrom\" must be \"null\", \"false\", or a valid selector string.');\n        }\n        if (acceptFrom !== null) {\n            return acceptFrom !== false && acceptFrom.split(',').filter(function (sel) {\n                return sel.length > 0 && origin.matches(sel);\n            }).length > 0;\n        }\n        // drop in same list\n        if (destination === origin) {\n            return true;\n        }\n        // check if lists are connected with connectWith\n        if (store(destination).getConfig('connectWith') !== undefined && store(destination).getConfig('connectWith') !== null) {\n            return store(destination).getConfig('connectWith') === store(origin).getConfig('connectWith');\n        }\n    }\n    return false;\n});\n\n/**\n * default configurations\n */\nvar defaultConfiguration = {\n    items: null,\n    // deprecated\n    connectWith: null,\n    // deprecated\n    disableIEFix: null,\n    acceptFrom: null,\n    copy: false,\n    placeholder: null,\n    placeholderClass: 'sortable-placeholder',\n    draggingClass: 'sortable-dragging',\n    hoverClass: false,\n    dropTargetContainerClass: false,\n    debounce: 0,\n    throttleTime: 100,\n    maxItems: 0,\n    itemSerializer: undefined,\n    containerSerializer: undefined,\n    customDragImage: null,\n    orientation: 'vertical'\n};\n\n/**\n * make sure a function is only called once within the given amount of time\n * @param {Function} fn the function to throttle\n * @param {number} threshold time limit for throttling\n */\n// must use function to keep this context\nfunction throttle (fn, threshold) {\n    var _this = this;\n    if (threshold === void 0) { threshold = 250; }\n    // check function\n    if (typeof fn !== 'function') {\n        throw new Error('You must provide a function as the first argument for throttle.');\n    }\n    // check threshold\n    if (typeof threshold !== 'number') {\n        throw new Error('You must provide a number as the second argument for throttle.');\n    }\n    var lastEventTimestamp = null;\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var now = Date.now();\n        if (lastEventTimestamp === null || now - lastEventTimestamp >= threshold) {\n            lastEventTimestamp = now;\n            fn.apply(_this, args);\n        }\n    };\n}\n\n/* eslint-env browser */\n/**\n * enable or disable hoverClass on mouseenter/leave if container Items\n * @param {sortable} sortableContainer a valid sortableContainer\n * @param {boolean} enable enable or disable event\n */\n// export default (sortableContainer: sortable, enable: boolean) => {\nvar enableHoverClass = (function (sortableContainer, enable) {\n    if (typeof store(sortableContainer).getConfig('hoverClass') === 'string') {\n        var hoverClasses_1 = store(sortableContainer).getConfig('hoverClass').split(' ');\n        // add class on hover\n        if (enable === true) {\n            addEventListener(sortableContainer, 'mousemove', throttle(function (event) {\n                // check of no mouse button was pressed when mousemove started == no drag\n                if (event.buttons === 0) {\n                    filter(sortableContainer.children, store(sortableContainer).getConfig('items')).forEach(function (item) {\n                        var _a, _b;\n                        if (item !== event.target) {\n                            (_a = item.classList).remove.apply(_a, hoverClasses_1);\n                        }\n                        else {\n                            (_b = item.classList).add.apply(_b, hoverClasses_1);\n                        }\n                    });\n                }\n            }, store(sortableContainer).getConfig('throttleTime')));\n            // remove class on leave\n            addEventListener(sortableContainer, 'mouseleave', function () {\n                filter(sortableContainer.children, store(sortableContainer).getConfig('items')).forEach(function (item) {\n                    var _a;\n                    (_a = item.classList).remove.apply(_a, hoverClasses_1);\n                });\n            });\n            // remove events\n        }\n        else {\n            removeEventListener(sortableContainer, 'mousemove');\n            removeEventListener(sortableContainer, 'mouseleave');\n        }\n    }\n});\n\n/* eslint-env browser */\n/*\n * variables global to the plugin\n */\nvar dragging;\nvar draggingHeight;\nvar draggingWidth;\n/*\n * Keeps track of the initialy selected list, where 'dragstart' event was triggered\n * It allows us to move the data in between individual Sortable List instances\n */\n// Origin List - data from before any item was changed\nvar originContainer;\nvar originIndex;\nvar originElementIndex;\nvar originItemsBeforeUpdate;\n// Previous Sortable Container - we dispatch as sortenter event when a\n// dragged item enters a sortableContainer for the first time\nvar previousContainer;\n// Destination List - data from before any item was changed\nvar destinationItemsBeforeUpdate;\n/**\n * remove event handlers from items\n * @param {Array|NodeList} items\n */\nvar removeItemEvents = function (items) {\n    removeEventListener(items, 'dragstart');\n    removeEventListener(items, 'dragend');\n    removeEventListener(items, 'dragover');\n    removeEventListener(items, 'dragenter');\n    removeEventListener(items, 'drop');\n    removeEventListener(items, 'mouseenter');\n    removeEventListener(items, 'mouseleave');\n};\n// Remove container events\nvar removeContainerEvents = function (originContainer, previousContainer) {\n    if (originContainer) {\n        removeEventListener(originContainer, 'dragleave');\n    }\n    if (previousContainer && (previousContainer !== originContainer)) {\n        removeEventListener(previousContainer, 'dragleave');\n    }\n};\n/**\n * getDragging returns the current element to drag or\n * a copy of the element.\n * Is Copy Active for sortable\n * @param {HTMLElement} draggedItem - the item that the user drags\n * @param {HTMLElement} sortable a single sortable\n */\nvar getDragging = function (draggedItem, sortable) {\n    var ditem = draggedItem;\n    if (store(sortable).getConfig('copy') === true) {\n        ditem = draggedItem.cloneNode(true);\n        addAttribute(ditem, 'aria-copied', 'true');\n        draggedItem.parentElement.appendChild(ditem);\n        ditem.style.display = 'none';\n        ditem.oldDisplay = draggedItem.style.display;\n    }\n    return ditem;\n};\n/**\n * Remove data from sortable\n * @param {HTMLElement} sortable a single sortable\n */\nvar removeSortableData = function (sortable) {\n    removeData(sortable);\n    removeAttribute(sortable, 'aria-dropeffect');\n};\n/**\n * Remove data from items\n * @param {Array<HTMLElement>|HTMLElement} items\n */\nvar removeItemData = function (items) {\n    removeAttribute(items, 'aria-grabbed');\n    removeAttribute(items, 'aria-copied');\n    removeAttribute(items, 'draggable');\n    removeAttribute(items, 'role');\n};\n/**\n * find sortable from element. travels up parent element until found or null.\n * @param {HTMLElement} element a single sortable\n * @param {Event} event - the current event. We need to pass it to be able to\n * find Sortable whith shadowRoot (document fragment has no parent)\n */\nfunction findSortable(element, event) {\n    if (event.composedPath) {\n        return event.composedPath().find(function (el) { return el.isSortable; });\n    }\n    while (element.isSortable !== true) {\n        element = element.parentElement;\n    }\n    return element;\n}\n/**\n * Dragging event is on the sortable element. finds the top child that\n * contains the element.\n * @param {HTMLElement} sortableElement a single sortable\n * @param {HTMLElement} element is that being dragged\n */\nfunction findDragElement(sortableElement, element) {\n    var options = addData(sortableElement, 'opts');\n    var items = filter(sortableElement.children, options.items);\n    var itemlist = items.filter(function (ele) {\n        return ele.contains(element) || (ele.shadowRoot && ele.shadowRoot.contains(element));\n    });\n    return itemlist.length > 0 ? itemlist[0] : element;\n}\n/**\n * Destroy the sortable\n * @param {HTMLElement} sortableElement a single sortable\n */\nvar destroySortable = function (sortableElement) {\n    var opts = addData(sortableElement, 'opts') || {};\n    var items = filter(sortableElement.children, opts.items);\n    var handles = getHandles(items, opts.handle);\n    // remove event handlers & data from sortable\n    removeEventListener(sortableElement, 'dragover');\n    removeEventListener(sortableElement, 'dragenter');\n    removeEventListener(sortableElement, 'dragstart');\n    removeEventListener(sortableElement, 'dragend');\n    removeEventListener(sortableElement, 'drop');\n    // remove event data from sortable\n    removeSortableData(sortableElement);\n    // remove event handlers & data from items\n    removeEventListener(handles, 'mousedown');\n    removeItemEvents(items);\n    removeItemData(items);\n    removeContainerEvents(originContainer, previousContainer);\n    // clear sortable flag\n    sortableElement.isSortable = false;\n};\n/**\n * Enable the sortable\n * @param {HTMLElement} sortableElement a single sortable\n */\nvar enableSortable = function (sortableElement) {\n    var opts = addData(sortableElement, 'opts');\n    var items = filter(sortableElement.children, opts.items);\n    var handles = getHandles(items, opts.handle);\n    addAttribute(sortableElement, 'aria-dropeffect', 'move');\n    addData(sortableElement, '_disabled', 'false');\n    addAttribute(handles, 'draggable', 'true');\n    // @todo: remove this fix\n    // IE FIX for ghost\n    // can be disabled as it has the side effect that other events\n    // (e.g. click) will be ignored\n    if (opts.disableIEFix === false) {\n        var spanEl = (document || window.document).createElement('span');\n        if (typeof spanEl.dragDrop === 'function') {\n            addEventListener(handles, 'mousedown', function () {\n                if (items.indexOf(this) !== -1) {\n                    this.dragDrop();\n                }\n                else {\n                    var parent = this.parentElement;\n                    while (items.indexOf(parent) === -1) {\n                        parent = parent.parentElement;\n                    }\n                    parent.dragDrop();\n                }\n            });\n        }\n    }\n};\n/**\n * Disable the sortable\n * @param {HTMLElement} sortableElement a single sortable\n */\nvar disableSortable = function (sortableElement) {\n    var opts = addData(sortableElement, 'opts');\n    var items = filter(sortableElement.children, opts.items);\n    var handles = getHandles(items, opts.handle);\n    addAttribute(sortableElement, 'aria-dropeffect', 'none');\n    addData(sortableElement, '_disabled', 'true');\n    addAttribute(handles, 'draggable', 'false');\n    removeEventListener(handles, 'mousedown');\n};\n/**\n * Reload the sortable\n * @param {HTMLElement} sortableElement a single sortable\n * @description events need to be removed to not be double bound\n */\nvar reloadSortable = function (sortableElement) {\n    var opts = addData(sortableElement, 'opts');\n    var items = filter(sortableElement.children, opts.items);\n    var handles = getHandles(items, opts.handle);\n    addData(sortableElement, '_disabled', 'false');\n    // remove event handlers from items\n    removeItemEvents(items);\n    removeContainerEvents(originContainer, previousContainer);\n    removeEventListener(handles, 'mousedown');\n    // remove event handlers from sortable\n    removeEventListener(sortableElement, 'dragover');\n    removeEventListener(sortableElement, 'dragenter');\n    removeEventListener(sortableElement, 'drop');\n};\n/**\n * Public sortable object\n * @param {Array|NodeList} sortableElements\n * @param {object|string} options|method\n */\nfunction sortable(sortableElements, options) {\n    // get method string to see if a method is called\n    var method = String(options);\n    options = options || {};\n    // check if the user provided a selector instead of an element\n    if (typeof sortableElements === 'string') {\n        sortableElements = document.querySelectorAll(sortableElements);\n    }\n    // if the user provided an element, return it in an array to keep the return value consistant\n    if (sortableElements instanceof HTMLElement) {\n        sortableElements = [sortableElements];\n    }\n    sortableElements = Array.prototype.slice.call(sortableElements);\n    if (/serialize/.test(method)) {\n        return sortableElements.map(function (sortableContainer) {\n            var opts = addData(sortableContainer, 'opts');\n            return serialize(sortableContainer, opts.itemSerializer, opts.containerSerializer);\n        });\n    }\n    sortableElements.forEach(function (sortableElement) {\n        if (/enable|disable|destroy/.test(method)) {\n            return sortable[method](sortableElement);\n        }\n        // log deprecation\n        ['connectWith', 'disableIEFix'].forEach(function (configKey) {\n            if (Object.prototype.hasOwnProperty.call(options, configKey) && options[configKey] !== null) {\n                console.warn(\"HTML5Sortable: You are using the deprecated configuration \\\"\" + configKey + \"\\\". This will be removed in an upcoming version, make sure to migrate to the new options when updating.\");\n            }\n        });\n        // merge options with default options\n        options = Object.assign({}, defaultConfiguration, store(sortableElement).config, options);\n        // init data store for sortable\n        store(sortableElement).config = options;\n        // set options on sortable\n        addData(sortableElement, 'opts', options);\n        // property to define as sortable\n        sortableElement.isSortable = true;\n        // reset sortable\n        reloadSortable(sortableElement);\n        // initialize\n        var listItems = filter(sortableElement.children, options.items);\n        // create element if user defined a placeholder element as a string\n        var customPlaceholder;\n        if (options.placeholder !== null && options.placeholder !== undefined) {\n            var tempContainer = document.createElement(sortableElement.tagName);\n            if (options.placeholder instanceof HTMLElement) {\n                tempContainer.appendChild(options.placeholder);\n            }\n            else {\n                tempContainer.innerHTML = options.placeholder;\n            }\n            customPlaceholder = tempContainer.children[0];\n        }\n        // add placeholder\n        store(sortableElement).placeholder = makePlaceholder(sortableElement, customPlaceholder, options.placeholderClass);\n        addData(sortableElement, 'items', options.items);\n        if (options.acceptFrom) {\n            addData(sortableElement, 'acceptFrom', options.acceptFrom);\n        }\n        else if (options.connectWith) {\n            addData(sortableElement, 'connectWith', options.connectWith);\n        }\n        enableSortable(sortableElement);\n        addAttribute(listItems, 'role', 'option');\n        addAttribute(listItems, 'aria-grabbed', 'false');\n        // enable hover class\n        enableHoverClass(sortableElement, true);\n        /*\n         Handle drag events on draggable items\n         Handle is set at the sortableElement level as it will bubble up\n         from the item\n         */\n        addEventListener(sortableElement, 'dragstart', function (e) {\n            // ignore dragstart events\n            var target = getEventTarget(e);\n            if (target.isSortable === true) {\n                return;\n            }\n            e.stopImmediatePropagation();\n            if ((options.handle && !target.matches(options.handle)) || target.getAttribute('draggable') === 'false') {\n                return;\n            }\n            var sortableContainer = findSortable(target, e);\n            var dragItem = findDragElement(sortableContainer, target);\n            // grab values\n            originItemsBeforeUpdate = filter(sortableContainer.children, options.items);\n            originIndex = originItemsBeforeUpdate.indexOf(dragItem);\n            originElementIndex = getIndex(dragItem, sortableContainer.children);\n            originContainer = sortableContainer;\n            // add transparent clone or other ghost to cursor\n            setDragImage(e, dragItem, options.customDragImage);\n            // cache selsection & add attr for dragging\n            draggingHeight = getElementHeight(dragItem);\n            draggingWidth = getElementWidth(dragItem);\n            dragItem.classList.add(options.draggingClass);\n            dragging = getDragging(dragItem, sortableContainer);\n            addAttribute(dragging, 'aria-grabbed', 'true');\n            // dispatch sortstart event on each element in group\n            sortableContainer.dispatchEvent(new CustomEvent('sortstart', {\n                detail: {\n                    origin: {\n                        elementIndex: originElementIndex,\n                        index: originIndex,\n                        container: originContainer\n                    },\n                    item: dragging,\n                    originalTarget: target\n                }\n            }));\n        });\n        /*\n         We are capturing targetSortable before modifications with 'dragenter' event\n        */\n        addEventListener(sortableElement, 'dragenter', function (e) {\n            var target = getEventTarget(e);\n            var sortableContainer = findSortable(target, e);\n            if (sortableContainer && sortableContainer !== previousContainer) {\n                destinationItemsBeforeUpdate = filter(sortableContainer.children, addData(sortableContainer, 'items'))\n                    .filter(function (item) { return item !== store(sortableElement).placeholder; });\n                if (options.dropTargetContainerClass) {\n                    sortableContainer.classList.add(options.dropTargetContainerClass);\n                }\n                sortableContainer.dispatchEvent(new CustomEvent('sortenter', {\n                    detail: {\n                        origin: {\n                            elementIndex: originElementIndex,\n                            index: originIndex,\n                            container: originContainer\n                        },\n                        destination: {\n                            container: sortableContainer,\n                            itemsBeforeUpdate: destinationItemsBeforeUpdate\n                        },\n                        item: dragging,\n                        originalTarget: target\n                    }\n                }));\n                addEventListener(sortableContainer, 'dragleave', function (e) {\n                    // TODO: rename outTarget to be more self-explanatory\n                    // e.fromElement for very old browsers, similar to relatedTarget\n                    var outTarget = e.relatedTarget || e.fromElement;\n                    if (!e.currentTarget.contains(outTarget)) {\n                        if (options.dropTargetContainerClass) {\n                            sortableContainer.classList.remove(options.dropTargetContainerClass);\n                        }\n                        sortableContainer.dispatchEvent(new CustomEvent('sortleave', {\n                            detail: {\n                                origin: {\n                                    elementIndex: originElementIndex,\n                                    index: originIndex,\n                                    container: sortableContainer\n                                },\n                                item: dragging,\n                                originalTarget: target\n                            }\n                        }));\n                    }\n                });\n            }\n            previousContainer = sortableContainer;\n        });\n        /*\n         * Dragend Event - https://developer.mozilla.org/en-US/docs/Web/Events/dragend\n         * Fires each time dragEvent end, or ESC pressed\n         * We are using it to clean up any draggable elements and placeholders\n         */\n        addEventListener(sortableElement, 'dragend', function (e) {\n            if (!dragging) {\n                return;\n            }\n            dragging.classList.remove(options.draggingClass);\n            addAttribute(dragging, 'aria-grabbed', 'false');\n            if (dragging.getAttribute('aria-copied') === 'true' && addData(dragging, 'dropped') !== 'true') {\n                dragging.remove();\n            }\n            dragging.style.display = dragging.oldDisplay;\n            delete dragging.oldDisplay;\n            var visiblePlaceholder = Array.from(stores.values()).map(function (data) { return data.placeholder; })\n                .filter(function (placeholder) { return placeholder instanceof HTMLElement; })\n                .filter(isInDom)[0];\n            if (visiblePlaceholder) {\n                visiblePlaceholder.remove();\n            }\n            // dispatch sortstart event on each element in group\n            sortableElement.dispatchEvent(new CustomEvent('sortstop', {\n                detail: {\n                    origin: {\n                        elementIndex: originElementIndex,\n                        index: originIndex,\n                        container: originContainer\n                    },\n                    item: dragging\n                }\n            }));\n            previousContainer = null;\n            dragging = null;\n            draggingHeight = null;\n            draggingWidth = null;\n        });\n        /*\n         * Drop Event - https://developer.mozilla.org/en-US/docs/Web/Events/drop\n         * Fires when valid drop target area is hit\n         */\n        addEventListener(sortableElement, 'drop', function (e) {\n            if (!listsConnected(sortableElement, dragging.parentElement)) {\n                return;\n            }\n            e.preventDefault();\n            e.stopPropagation();\n            addData(dragging, 'dropped', 'true');\n            // get the one placeholder that is currently visible\n            var visiblePlaceholder = Array.from(stores.values()).map(function (data) {\n                return data.placeholder;\n            })\n                // filter only HTMLElements\n                .filter(function (placeholder) { return placeholder instanceof HTMLElement; })\n                // only elements in DOM\n                .filter(isInDom)[0];\n            // attach element after placeholder\n            insertAfter(visiblePlaceholder, dragging);\n            // remove placeholder from dom\n            visiblePlaceholder.remove();\n            /*\n             * Fires Custom Event - 'sortstop'\n             */\n            sortableElement.dispatchEvent(new CustomEvent('sortstop', {\n                detail: {\n                    origin: {\n                        elementIndex: originElementIndex,\n                        index: originIndex,\n                        container: originContainer\n                    },\n                    item: dragging\n                }\n            }));\n            var placeholder = store(sortableElement).placeholder;\n            var originItems = filter(originContainer.children, options.items)\n                .filter(function (item) { return item !== placeholder; });\n            var destinationContainer = this.isSortable === true ? this : this.parentElement;\n            var destinationItems = filter(destinationContainer.children, addData(destinationContainer, 'items'))\n                .filter(function (item) { return item !== placeholder; });\n            var destinationElementIndex = getIndex(dragging, Array.from(dragging.parentElement.children)\n                .filter(function (item) { return item !== placeholder; }));\n            var destinationIndex = getIndex(dragging, destinationItems);\n            if (options.dropTargetContainerClass) {\n                destinationContainer.classList.remove(options.dropTargetContainerClass);\n            }\n            /*\n             * When a list item changed container lists or index within a list\n             * Fires Custom Event - 'sortupdate'\n             */\n            if (originElementIndex !== destinationElementIndex || originContainer !== destinationContainer) {\n                sortableElement.dispatchEvent(new CustomEvent('sortupdate', {\n                    detail: {\n                        origin: {\n                            elementIndex: originElementIndex,\n                            index: originIndex,\n                            container: originContainer,\n                            itemsBeforeUpdate: originItemsBeforeUpdate,\n                            items: originItems\n                        },\n                        destination: {\n                            index: destinationIndex,\n                            elementIndex: destinationElementIndex,\n                            container: destinationContainer,\n                            itemsBeforeUpdate: destinationItemsBeforeUpdate,\n                            items: destinationItems\n                        },\n                        item: dragging\n                    }\n                }));\n            }\n        });\n        var debouncedDragOverEnter = debounce(function (sortableElement, element, pageX, pageY) {\n            if (!dragging) {\n                return;\n            }\n            // set placeholder height if forcePlaceholderSize option is set\n            if (options.forcePlaceholderSize) {\n                store(sortableElement).placeholder.style.height = draggingHeight + 'px';\n                store(sortableElement).placeholder.style.width = draggingWidth + 'px';\n            }\n            // if element the draggedItem is dragged onto is within the array of all elements in list\n            // (not only items, but also disabled, etc.)\n            if (Array.from(sortableElement.children).indexOf(element) > -1) {\n                var thisHeight = getElementHeight(element);\n                var thisWidth = getElementWidth(element);\n                var placeholderIndex = getIndex(store(sortableElement).placeholder, element.parentElement.children);\n                var thisIndex = getIndex(element, element.parentElement.children);\n                // Check if `element` is bigger than the draggable. If it is, we have to define a dead zone to prevent flickering\n                if (thisHeight > draggingHeight || thisWidth > draggingWidth) {\n                    // Dead zone?\n                    var deadZoneVertical = thisHeight - draggingHeight;\n                    var deadZoneHorizontal = thisWidth - draggingWidth;\n                    var offsetTop = offset(element).top;\n                    var offsetLeft = offset(element).left;\n                    if (placeholderIndex < thisIndex &&\n                        ((options.orientation === 'vertical' && pageY < offsetTop) ||\n                            (options.orientation === 'horizontal' && pageX < offsetLeft))) {\n                        return;\n                    }\n                    if (placeholderIndex > thisIndex &&\n                        ((options.orientation === 'vertical' && pageY > offsetTop + thisHeight - deadZoneVertical) ||\n                            (options.orientation === 'horizontal' && pageX > offsetLeft + thisWidth - deadZoneHorizontal))) {\n                        return;\n                    }\n                }\n                if (dragging.oldDisplay === undefined) {\n                    dragging.oldDisplay = dragging.style.display;\n                }\n                if (dragging.style.display !== 'none') {\n                    dragging.style.display = 'none';\n                }\n                // To avoid flicker, determine where to position the placeholder\n                // based on where the mouse pointer is relative to the elements\n                // vertical center.\n                var placeAfter = false;\n                try {\n                    var elementMiddleVertical = offset(element).top + element.offsetHeight / 2;\n                    var elementMiddleHorizontal = offset(element).left + element.offsetWidth / 2;\n                    placeAfter = (options.orientation === 'vertical' && (pageY >= elementMiddleVertical)) ||\n                        (options.orientation === 'horizontal' && (pageX >= elementMiddleHorizontal));\n                }\n                catch (e) {\n                    placeAfter = placeholderIndex < thisIndex;\n                }\n                if (placeAfter) {\n                    insertAfter(element, store(sortableElement).placeholder);\n                }\n                else {\n                    insertBefore(element, store(sortableElement).placeholder);\n                }\n                // get placeholders from all stores & remove all but current one\n                Array.from(stores.values())\n                    // remove empty values\n                    .filter(function (data) { return data.placeholder !== undefined; })\n                    // foreach placeholder in array if outside of current sorableContainer -> remove from DOM\n                    .forEach(function (data) {\n                    if (data.placeholder !== store(sortableElement).placeholder) {\n                        data.placeholder.remove();\n                    }\n                });\n            }\n            else {\n                // get all placeholders from store\n                var placeholders = Array.from(stores.values())\n                    .filter(function (data) { return data.placeholder !== undefined; })\n                    .map(function (data) {\n                    return data.placeholder;\n                });\n                // check if element is not in placeholders\n                if (placeholders.indexOf(element) === -1 && sortableElement === element && !filter(element.children, options.items).length) {\n                    placeholders.forEach(function (element) { return element.remove(); });\n                    element.appendChild(store(sortableElement).placeholder);\n                }\n            }\n        }, options.debounce);\n        // Handle dragover and dragenter events on draggable items\n        var onDragOverEnter = function (e) {\n            var element = e.target;\n            var sortableElement = element.isSortable === true ? element : findSortable(element, e);\n            element = findDragElement(sortableElement, element);\n            if (!dragging || !listsConnected(sortableElement, dragging.parentElement) || addData(sortableElement, '_disabled') === 'true') {\n                return;\n            }\n            var options = addData(sortableElement, 'opts');\n            if (parseInt(options.maxItems) && filter(sortableElement.children, addData(sortableElement, 'items')).length >= parseInt(options.maxItems) && dragging.parentElement !== sortableElement) {\n                return;\n            }\n            e.preventDefault();\n            e.stopPropagation();\n            e.dataTransfer.dropEffect = store(sortableElement).getConfig('copy') === true ? 'copy' : 'move';\n            debouncedDragOverEnter(sortableElement, element, e.pageX, e.pageY);\n        };\n        addEventListener(listItems.concat(sortableElement), 'dragover', onDragOverEnter);\n        addEventListener(listItems.concat(sortableElement), 'dragenter', onDragOverEnter);\n    });\n    return sortableElements;\n}\nsortable.destroy = function (sortableElement) {\n    destroySortable(sortableElement);\n};\nsortable.enable = function (sortableElement) {\n    enableSortable(sortableElement);\n};\nsortable.disable = function (sortableElement) {\n    disableSortable(sortableElement);\n};\n/* START.TESTS_ONLY */\nsortable.__testing = {\n    // add internal methods here for testing purposes\n    data: addData,\n    removeItemEvents: removeItemEvents,\n    removeItemData: removeItemData,\n    removeSortableData: removeSortableData,\n    removeContainerEvents: removeContainerEvents\n};\n\nexport default sortable;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import \"src/decidim/meetings/admin/agendas\"\nimport \"src/decidim/meetings/admin/destroy_meeting_alert\"\nimport \"src/decidim/meetings/admin/meetings_form\"\nimport \"src/decidim/meetings/admin/registrations_form\"\nimport \"src/decidim/meetings/admin/registrations_invite_form\"\n"],"names":[],"sourceRoot":""}