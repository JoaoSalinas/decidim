"use strict";
(self["webpackChunkdecidim_base"] = self["webpackChunkdecidim_base"] || []).push([["vendors-node_modules_graphiql_react_dist_Range_es_js-node_modules_graphiql_react_dist_onlineP-76614c"],{

/***/ "./node_modules/@graphiql/react/dist/Range.es.js":
/*!*******************************************************!*\
  !*** ./node_modules/@graphiql/react/dist/Range.es.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   C: function() { return /* binding */ CharacterStream; },
/* harmony export */   P: function() { return /* binding */ Position; },
/* harmony export */   R: function() { return /* binding */ Range; }
/* harmony export */ });
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : String(i); }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
var __defProp = Object.defineProperty;
var __name = function __name(target, value) {
  return __defProp(target, "name", {
    value: value,
    configurable: true
  });
};
var CharacterStream = /*#__PURE__*/function () {
  function CharacterStream(sourceText) {
    var _this = this;
    _classCallCheck(this, CharacterStream);
    this.getStartOfToken = function () {
      return _this._start;
    };
    this.getCurrentPosition = function () {
      return _this._pos;
    };
    this.eol = function () {
      return _this._sourceText.length === _this._pos;
    };
    this.sol = function () {
      return _this._pos === 0;
    };
    this.peek = function () {
      return _this._sourceText.charAt(_this._pos) ? _this._sourceText.charAt(_this._pos) : null;
    };
    this.next = function () {
      var _char = _this._sourceText.charAt(_this._pos);
      _this._pos++;
      return _char;
    };
    this.eat = function (pattern) {
      var isMatched = _this._testNextCharacter(pattern);
      if (isMatched) {
        _this._start = _this._pos;
        _this._pos++;
        return _this._sourceText.charAt(_this._pos - 1);
      }
      return void 0;
    };
    this.eatWhile = function (match) {
      var isMatched = _this._testNextCharacter(match);
      var didEat = false;
      if (isMatched) {
        didEat = isMatched;
        _this._start = _this._pos;
      }
      while (isMatched) {
        _this._pos++;
        isMatched = _this._testNextCharacter(match);
        didEat = true;
      }
      return didEat;
    };
    this.eatSpace = function () {
      return _this.eatWhile(/[\s\u00a0]/);
    };
    this.skipToEnd = function () {
      _this._pos = _this._sourceText.length;
    };
    this.skipTo = function (position) {
      _this._pos = position;
    };
    this.match = function (pattern) {
      var consume = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
      var caseFold = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
      var token = null;
      var match = null;
      if (typeof pattern === "string") {
        var regex = new RegExp(pattern, caseFold ? "i" : "g");
        match = regex.test(_this._sourceText.substr(_this._pos, pattern.length));
        token = pattern;
      } else if (pattern instanceof RegExp) {
        match = _this._sourceText.slice(_this._pos).match(pattern);
        token = match === null || match === void 0 ? void 0 : match[0];
      }
      if (match != null) {
        if (typeof pattern === "string" || match instanceof Array && _this._sourceText.startsWith(match[0], _this._pos)) {
          if (consume) {
            _this._start = _this._pos;
            if (token && token.length) {
              _this._pos += token.length;
            }
          }
          return match;
        }
      }
      return false;
    };
    this.backUp = function (num) {
      _this._pos -= num;
    };
    this.column = function () {
      return _this._pos;
    };
    this.indentation = function () {
      var match = _this._sourceText.match(/\s*/);
      var indent = 0;
      if (match && match.length !== 0) {
        var whiteSpaces = match[0];
        var pos = 0;
        while (whiteSpaces.length > pos) {
          if (whiteSpaces.charCodeAt(pos) === 9) {
            indent += 2;
          } else {
            indent++;
          }
          pos++;
        }
      }
      return indent;
    };
    this.current = function () {
      return _this._sourceText.slice(_this._start, _this._pos);
    };
    this._start = 0;
    this._pos = 0;
    this._sourceText = sourceText;
  }
  _createClass(CharacterStream, [{
    key: "_testNextCharacter",
    value: function _testNextCharacter(pattern) {
      var character = this._sourceText.charAt(this._pos);
      var isMatched = false;
      if (typeof pattern === "string") {
        isMatched = character === pattern;
      } else {
        isMatched = pattern instanceof RegExp ? pattern.test(character) : pattern(character);
      }
      return isMatched;
    }
  }]);
  return CharacterStream;
}();
__name(CharacterStream, "CharacterStream");
var Range = /*#__PURE__*/function () {
  function Range(start, end) {
    var _this2 = this;
    _classCallCheck(this, Range);
    this.containsPosition = function (position) {
      if (_this2.start.line === position.line) {
        return _this2.start.character <= position.character;
      } else if (_this2.end.line === position.line) {
        return _this2.end.character >= position.character;
      } else {
        return _this2.start.line <= position.line && _this2.end.line >= position.line;
      }
    };
    this.start = start;
    this.end = end;
  }
  _createClass(Range, [{
    key: "setStart",
    value: function setStart(line, character) {
      this.start = new Position(line, character);
    }
  }, {
    key: "setEnd",
    value: function setEnd(line, character) {
      this.end = new Position(line, character);
    }
  }]);
  return Range;
}();
__name(Range, "Range");
var Position = /*#__PURE__*/function () {
  function Position(line, character) {
    var _this3 = this;
    _classCallCheck(this, Position);
    this.lessThanOrEqualTo = function (position) {
      return _this3.line < position.line || _this3.line === position.line && _this3.character <= position.character;
    };
    this.line = line;
    this.character = character;
  }
  _createClass(Position, [{
    key: "setLine",
    value: function setLine(line) {
      this.line = line;
    }
  }, {
    key: "setCharacter",
    value: function setCharacter(character) {
      this.character = character;
    }
  }]);
  return Position;
}();
__name(Position, "Position");


/***/ }),

/***/ "./node_modules/@graphiql/react/dist/onlineParser.es.js":
/*!**************************************************************!*\
  !*** ./node_modules/@graphiql/react/dist/onlineParser.es.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   o: function() { return /* binding */ onlineParser; }
/* harmony export */ });
/* harmony import */ var _index_es_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index.es.js */ "./node_modules/@graphiql/react/dist/index.es.js");
/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ "./node_modules/graphql/language/kinds.mjs");
var __defProp = Object.defineProperty;
var __name = function __name(target, value) {
  return __defProp(target, "name", {
    value: value,
    configurable: true
  });
};


function onlineParser() {
  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {
    eatWhitespace: function eatWhitespace(stream) {
      return stream.eatWhile(_index_es_js__WEBPACK_IMPORTED_MODULE_0__.i);
    },
    lexRules: _index_es_js__WEBPACK_IMPORTED_MODULE_0__.L,
    parseRules: _index_es_js__WEBPACK_IMPORTED_MODULE_0__.P,
    editorConfig: {}
  };
  return {
    startState: function startState() {
      var initialState = {
        level: 0,
        step: 0,
        name: null,
        kind: null,
        type: null,
        rule: null,
        needsSeparator: false,
        prevState: null
      };
      pushRule(options.parseRules, initialState, graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.DOCUMENT);
      return initialState;
    },
    token: function token(stream, state) {
      return getToken(stream, state, options);
    }
  };
}
__name(onlineParser, "onlineParser");
function getToken(stream, state, options) {
  var _a;
  if (state.inBlockstring) {
    if (stream.match(/.*"""/)) {
      state.inBlockstring = false;
      return "string";
    } else {
      stream.skipToEnd();
      return "string";
    }
  }
  var lexRules = options.lexRules,
    parseRules = options.parseRules,
    eatWhitespace = options.eatWhitespace,
    editorConfig = options.editorConfig;
  if (state.rule && state.rule.length === 0) {
    popRule(state);
  } else if (state.needsAdvance) {
    state.needsAdvance = false;
    advanceRule(state, true);
  }
  if (stream.sol()) {
    var tabSize = (editorConfig === null || editorConfig === void 0 ? void 0 : editorConfig.tabSize) || 2;
    state.indentLevel = Math.floor(stream.indentation() / tabSize);
  }
  if (eatWhitespace(stream)) {
    return "ws";
  }
  var token = lex(lexRules, stream);
  if (!token) {
    var matchedSomething = stream.match(/\S+/);
    if (!matchedSomething) {
      stream.match(/\s/);
    }
    pushRule(SpecialParseRules, state, "Invalid");
    return "invalidchar";
  }
  if (token.kind === "Comment") {
    pushRule(SpecialParseRules, state, "Comment");
    return "comment";
  }
  var backupState = assign({}, state);
  if (token.kind === "Punctuation") {
    if (/^[{([]/.test(token.value)) {
      if (state.indentLevel !== void 0) {
        state.levels = (state.levels || []).concat(state.indentLevel + 1);
      }
    } else if (/^[})\]]/.test(token.value)) {
      var levels = state.levels = (state.levels || []).slice(0, -1);
      if (state.indentLevel) {
        if (levels.length > 0 && levels[levels.length - 1] < state.indentLevel) {
          state.indentLevel = levels[levels.length - 1];
        }
      }
    }
  }
  while (state.rule) {
    var expected = typeof state.rule === "function" ? state.step === 0 ? state.rule(token, stream) : null : state.rule[state.step];
    if (state.needsSeparator) {
      expected = expected === null || expected === void 0 ? void 0 : expected.separator;
    }
    if (expected) {
      if (expected.ofRule) {
        expected = expected.ofRule;
      }
      if (typeof expected === "string") {
        pushRule(parseRules, state, expected);
        continue;
      }
      if ((_a = expected.match) === null || _a === void 0 ? void 0 : _a.call(expected, token)) {
        if (expected.update) {
          expected.update(state, token);
        }
        if (token.kind === "Punctuation") {
          advanceRule(state, true);
        } else {
          state.needsAdvance = true;
        }
        return expected.style;
      }
    }
    unsuccessful(state);
  }
  assign(state, backupState);
  pushRule(SpecialParseRules, state, "Invalid");
  return "invalidchar";
}
__name(getToken, "getToken");
function assign(to, from) {
  var keys = Object.keys(from);
  for (var i = 0; i < keys.length; i++) {
    to[keys[i]] = from[keys[i]];
  }
  return to;
}
__name(assign, "assign");
var SpecialParseRules = {
  Invalid: [],
  Comment: []
};
function pushRule(rules, state, ruleKind) {
  if (!rules[ruleKind]) {
    throw new TypeError("Unknown rule: " + ruleKind);
  }
  state.prevState = Object.assign({}, state);
  state.kind = ruleKind;
  state.name = null;
  state.type = null;
  state.rule = rules[ruleKind];
  state.step = 0;
  state.needsSeparator = false;
}
__name(pushRule, "pushRule");
function popRule(state) {
  if (!state.prevState) {
    return;
  }
  state.kind = state.prevState.kind;
  state.name = state.prevState.name;
  state.type = state.prevState.type;
  state.rule = state.prevState.rule;
  state.step = state.prevState.step;
  state.needsSeparator = state.prevState.needsSeparator;
  state.prevState = state.prevState.prevState;
}
__name(popRule, "popRule");
function advanceRule(state, successful) {
  var _a;
  if (isList(state) && state.rule) {
    var step = state.rule[state.step];
    if (step.separator) {
      var separator = step.separator;
      state.needsSeparator = !state.needsSeparator;
      if (!state.needsSeparator && separator.ofRule) {
        return;
      }
    }
    if (successful) {
      return;
    }
  }
  state.needsSeparator = false;
  state.step++;
  while (state.rule && !(Array.isArray(state.rule) && state.step < state.rule.length)) {
    popRule(state);
    if (state.rule) {
      if (isList(state)) {
        if ((_a = state.rule) === null || _a === void 0 ? void 0 : _a[state.step].separator) {
          state.needsSeparator = !state.needsSeparator;
        }
      } else {
        state.needsSeparator = false;
        state.step++;
      }
    }
  }
}
__name(advanceRule, "advanceRule");
function isList(state) {
  var step = Array.isArray(state.rule) && typeof state.rule[state.step] !== "string" && state.rule[state.step];
  return step && step.isList;
}
__name(isList, "isList");
function unsuccessful(state) {
  while (state.rule && !(Array.isArray(state.rule) && state.rule[state.step].ofRule)) {
    popRule(state);
  }
  if (state.rule) {
    advanceRule(state, false);
  }
}
__name(unsuccessful, "unsuccessful");
function lex(lexRules, stream) {
  var kinds = Object.keys(lexRules);
  for (var i = 0; i < kinds.length; i++) {
    var match = stream.match(lexRules[kinds[i]]);
    if (match && match instanceof Array) {
      return {
        kind: kinds[i],
        value: match[0]
      };
    }
  }
}
__name(lex, "lex");


/***/ })

}]);
//# sourceMappingURL=vendors-node_modules_graphiql_react_dist_Range_es_js-node_modules_graphiql_react_dist_onlineP-76614c.chunk.js.map