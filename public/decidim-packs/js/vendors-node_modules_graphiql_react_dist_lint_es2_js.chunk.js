"use strict";
(self["webpackChunkdecidim_base"] = self["webpackChunkdecidim_base"] || []).push([["vendors-node_modules_graphiql_react_dist_lint_es2_js"],{

/***/ "./node_modules/@graphiql/react/dist/lint.es2.js":
/*!*******************************************************!*\
  !*** ./node_modules/@graphiql/react/dist/lint.es2.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _codemirror_es_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./codemirror.es.js */ "./node_modules/@graphiql/react/dist/codemirror.es.js");
/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! graphql */ "./node_modules/graphql/type/definition.mjs");
/* harmony import */ var _index_es_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index.es.js */ "./node_modules/@graphiql/react/dist/index.es.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ "./node_modules/react/index-exposed.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-dom */ "./node_modules/react-dom/index.js");
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : String(i); }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }
function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }
function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }
function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }
function _wrapNativeSuper(Class) { var _cache = typeof Map === "function" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== "function") { throw new TypeError("Super expression must either be null or a function"); } if (typeof _cache !== "undefined") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }
function _construct(t, e, r) { if (_isNativeReflectConstruct()) return Reflect.construct.apply(null, arguments); var o = [null]; o.push.apply(o, e); var p = new (t.bind.apply(t, o))(); return r && _setPrototypeOf(p, r.prototype), p; }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
function _isNativeFunction(fn) { try { return Function.toString.call(fn).indexOf("[native code]") !== -1; } catch (e) { return typeof fn === "function"; } }
function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }
function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }
var __defProp = Object.defineProperty;
var __name = function __name(target, value) {
  return __defProp(target, "name", {
    value: value,
    configurable: true
  });
};





function jsonParse(str) {
  string = str;
  strLen = str.length;
  start = end = lastEnd = -1;
  ch();
  lex();
  var ast = parseObj();
  expect("EOF");
  return ast;
}
__name(jsonParse, "jsonParse");
var string;
var strLen;
var start;
var end;
var lastEnd;
var code;
var kind;
function parseObj() {
  var nodeStart = start;
  var members = [];
  expect("{");
  if (!skip("}")) {
    do {
      members.push(parseMember());
    } while (skip(","));
    expect("}");
  }
  return {
    kind: "Object",
    start: nodeStart,
    end: lastEnd,
    members: members
  };
}
__name(parseObj, "parseObj");
function parseMember() {
  var nodeStart = start;
  var key = kind === "String" ? curToken() : null;
  expect("String");
  expect(":");
  var value = parseVal();
  return {
    kind: "Member",
    start: nodeStart,
    end: lastEnd,
    key: key,
    value: value
  };
}
__name(parseMember, "parseMember");
function parseArr() {
  var nodeStart = start;
  var values = [];
  expect("[");
  if (!skip("]")) {
    do {
      values.push(parseVal());
    } while (skip(","));
    expect("]");
  }
  return {
    kind: "Array",
    start: nodeStart,
    end: lastEnd,
    values: values
  };
}
__name(parseArr, "parseArr");
function parseVal() {
  switch (kind) {
    case "[":
      return parseArr();
    case "{":
      return parseObj();
    case "String":
    case "Number":
    case "Boolean":
    case "Null":
      var token = curToken();
      lex();
      return token;
  }
  expect("Value");
}
__name(parseVal, "parseVal");
function curToken() {
  return {
    kind: kind,
    start: start,
    end: end,
    value: JSON.parse(string.slice(start, end))
  };
}
__name(curToken, "curToken");
function expect(str) {
  if (kind === str) {
    lex();
    return;
  }
  var found;
  if (kind === "EOF") {
    found = "[end of file]";
  } else if (end - start > 1) {
    found = "`" + string.slice(start, end) + "`";
  } else {
    var match = string.slice(start).match(/^.+?\b/);
    found = "`" + (match ? match[0] : string[start]) + "`";
  }
  throw syntaxError("Expected ".concat(str, " but found ").concat(found, "."));
}
__name(expect, "expect");
var JSONSyntaxError = /*#__PURE__*/function (_Error) {
  _inherits(JSONSyntaxError, _Error);
  function JSONSyntaxError(message, position) {
    var _this;
    _classCallCheck(this, JSONSyntaxError);
    _this = _callSuper(this, JSONSyntaxError, [message]);
    _this.position = position;
    return _this;
  }
  return _createClass(JSONSyntaxError);
}( /*#__PURE__*/_wrapNativeSuper(Error));
__name(JSONSyntaxError, "JSONSyntaxError");
function syntaxError(message) {
  return new JSONSyntaxError(message, {
    start: start,
    end: end
  });
}
__name(syntaxError, "syntaxError");
function skip(k) {
  if (kind === k) {
    lex();
    return true;
  }
}
__name(skip, "skip");
function ch() {
  if (end < strLen) {
    end++;
    code = end === strLen ? 0 : string.charCodeAt(end);
  }
  return code;
}
__name(ch, "ch");
function lex() {
  lastEnd = end;
  while (code === 9 || code === 10 || code === 13 || code === 32) {
    ch();
  }
  if (code === 0) {
    kind = "EOF";
    return;
  }
  start = end;
  switch (code) {
    case 34:
      kind = "String";
      return readString();
    case 45:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
      kind = "Number";
      return readNumber();
    case 102:
      if (string.slice(start, start + 5) !== "false") {
        break;
      }
      end += 4;
      ch();
      kind = "Boolean";
      return;
    case 110:
      if (string.slice(start, start + 4) !== "null") {
        break;
      }
      end += 3;
      ch();
      kind = "Null";
      return;
    case 116:
      if (string.slice(start, start + 4) !== "true") {
        break;
      }
      end += 3;
      ch();
      kind = "Boolean";
      return;
  }
  kind = string[start];
  ch();
}
__name(lex, "lex");
function readString() {
  ch();
  while (code !== 34 && code > 31) {
    if (code === 92) {
      code = ch();
      switch (code) {
        case 34:
        case 47:
        case 92:
        case 98:
        case 102:
        case 110:
        case 114:
        case 116:
          ch();
          break;
        case 117:
          ch();
          readHex();
          readHex();
          readHex();
          readHex();
          break;
        default:
          throw syntaxError("Bad character escape sequence.");
      }
    } else if (end === strLen) {
      throw syntaxError("Unterminated string.");
    } else {
      ch();
    }
  }
  if (code === 34) {
    ch();
    return;
  }
  throw syntaxError("Unterminated string.");
}
__name(readString, "readString");
function readHex() {
  if (code >= 48 && code <= 57 || code >= 65 && code <= 70 || code >= 97 && code <= 102) {
    return ch();
  }
  throw syntaxError("Expected hexadecimal digit.");
}
__name(readHex, "readHex");
function readNumber() {
  if (code === 45) {
    ch();
  }
  if (code === 48) {
    ch();
  } else {
    readDigits();
  }
  if (code === 46) {
    ch();
    readDigits();
  }
  if (code === 69 || code === 101) {
    code = ch();
    if (code === 43 || code === 45) {
      ch();
    }
    readDigits();
  }
}
__name(readNumber, "readNumber");
function readDigits() {
  if (code < 48 || code > 57) {
    throw syntaxError("Expected decimal digit.");
  }
  do {
    ch();
  } while (code >= 48 && code <= 57);
}
__name(readDigits, "readDigits");
_codemirror_es_js__WEBPACK_IMPORTED_MODULE_0__.C.registerHelper("lint", "graphql-variables", function (text, options, editor) {
  if (!text) {
    return [];
  }
  var ast;
  try {
    ast = jsonParse(text);
  } catch (error) {
    if (error instanceof JSONSyntaxError) {
      return [lintError(editor, error.position, error.message)];
    }
    throw error;
  }
  var variableToType = options.variableToType;
  if (!variableToType) {
    return [];
  }
  return validateVariables(editor, variableToType, ast);
});
function validateVariables(editor, variableToType, variablesAST) {
  var errors = [];
  variablesAST.members.forEach(function (member) {
    var _a;
    if (member) {
      var variableName = (_a = member.key) === null || _a === void 0 ? void 0 : _a.value;
      var type = variableToType[variableName];
      if (!type) {
        errors.push(lintError(editor, member.key, "Variable \"$".concat(variableName, "\" does not appear in any GraphQL query.")));
      } else {
        validateValue(type, member.value).forEach(function (_ref) {
          var _ref2 = _slicedToArray(_ref, 2),
            node = _ref2[0],
            message = _ref2[1];
          errors.push(lintError(editor, node, message));
        });
      }
    }
  });
  return errors;
}
__name(validateVariables, "validateVariables");
function validateValue(type, valueAST) {
  if (!type || !valueAST) {
    return [];
  }
  if (type instanceof graphql__WEBPACK_IMPORTED_MODULE_4__.GraphQLNonNull) {
    if (valueAST.kind === "Null") {
      return [[valueAST, "Type \"".concat(type, "\" is non-nullable and cannot be null.")]];
    }
    return validateValue(type.ofType, valueAST);
  }
  if (valueAST.kind === "Null") {
    return [];
  }
  if (type instanceof graphql__WEBPACK_IMPORTED_MODULE_4__.GraphQLList) {
    var itemType = type.ofType;
    if (valueAST.kind === "Array") {
      var values = valueAST.values || [];
      return mapCat(values, function (item) {
        return validateValue(itemType, item);
      });
    }
    return validateValue(itemType, valueAST);
  }
  if (type instanceof graphql__WEBPACK_IMPORTED_MODULE_4__.GraphQLInputObjectType) {
    if (valueAST.kind !== "Object") {
      return [[valueAST, "Type \"".concat(type, "\" must be an Object.")]];
    }
    var providedFields = /* @__PURE__ */Object.create(null);
    var fieldErrors = mapCat(valueAST.members, function (member) {
      var _a;
      var fieldName = (_a = member === null || member === void 0 ? void 0 : member.key) === null || _a === void 0 ? void 0 : _a.value;
      providedFields[fieldName] = true;
      var inputField = type.getFields()[fieldName];
      if (!inputField) {
        return [[member.key, "Type \"".concat(type, "\" does not have a field \"").concat(fieldName, "\".")]];
      }
      var fieldType = inputField ? inputField.type : void 0;
      return validateValue(fieldType, member.value);
    });
    Object.keys(type.getFields()).forEach(function (fieldName) {
      if (!providedFields[fieldName]) {
        var fieldType = type.getFields()[fieldName].type;
        if (fieldType instanceof graphql__WEBPACK_IMPORTED_MODULE_4__.GraphQLNonNull) {
          fieldErrors.push([valueAST, "Object of type \"".concat(type, "\" is missing required field \"").concat(fieldName, "\".")]);
        }
      }
    });
    return fieldErrors;
  }
  if (type.name === "Boolean" && valueAST.kind !== "Boolean" || type.name === "String" && valueAST.kind !== "String" || type.name === "ID" && valueAST.kind !== "Number" && valueAST.kind !== "String" || type.name === "Float" && valueAST.kind !== "Number" || type.name === "Int" && (valueAST.kind !== "Number" || (valueAST.value | 0) !== valueAST.value)) {
    return [[valueAST, "Expected value of type \"".concat(type, "\".")]];
  }
  if (type instanceof graphql__WEBPACK_IMPORTED_MODULE_4__.GraphQLEnumType || type instanceof graphql__WEBPACK_IMPORTED_MODULE_4__.GraphQLScalarType) {
    if (valueAST.kind !== "String" && valueAST.kind !== "Number" && valueAST.kind !== "Boolean" && valueAST.kind !== "Null" || isNullish(type.parseValue(valueAST.value))) {
      return [[valueAST, "Expected value of type \"".concat(type, "\".")]];
    }
  }
  return [];
}
__name(validateValue, "validateValue");
function lintError(editor, node, message) {
  return {
    message: message,
    severity: "error",
    type: "validation",
    from: editor.posFromIndex(node.start),
    to: editor.posFromIndex(node.end)
  };
}
__name(lintError, "lintError");
function isNullish(value) {
  return value === null || value === void 0 || value !== value;
}
__name(isNullish, "isNullish");
function mapCat(array, mapper) {
  return Array.prototype.concat.apply([], array.map(mapper));
}
__name(mapCat, "mapCat");

/***/ })

}]);
//# sourceMappingURL=vendors-node_modules_graphiql_react_dist_lint_es2_js.chunk.js.map