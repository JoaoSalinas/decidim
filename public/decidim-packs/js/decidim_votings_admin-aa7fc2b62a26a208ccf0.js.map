{"version":3,"file":"js/decidim_votings_admin-aa7fc2b62a26a208ccf0.js","mappings":"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","sources":["webpack://decidim-base/../.rbenv/versions/3.1.1/lib/ruby/gems/3.1.0/gems/decidim-elections-0.28.0/app/packs/images/ sync ^\\.\\/.*$","webpack://decidim-base/../.rbenv/versions/3.1.1/lib/ruby/gems/3.1.0/gems/decidim-elections-0.28.0/app/packs/src/decidim/votings/admin/update_census_dataset_status.js","webpack://decidim-base/../../src/contrib/microevent.ts","webpack://decidim-base/../../node_modules/@orchidjs/unicode-variants/dist/esm/index.js","webpack://decidim-base/../../node_modules/@orchidjs/unicode-variants/dist/esm/regex.js","webpack://decidim-base/../../node_modules/@orchidjs/unicode-variants/dist/esm/strings.js","webpack://decidim-base/../../node_modules/@orchidjs/sifter/dist/esm/utils.js","webpack://decidim-base/../../node_modules/@orchidjs/sifter/dist/esm/sifter.js","webpack://decidim-base/../../node_modules/@orchidjs/sifter/lib/utils.ts","webpack://decidim-base/../../src/vanilla.ts","webpack://decidim-base/../../src/contrib/highlight.ts","webpack://decidim-base/../../src/constants.ts","webpack://decidim-base/../../src/defaults.ts","webpack://decidim-base/../../src/utils.ts","webpack://decidim-base/../../src/getSettings.ts","webpack://decidim-base/../../src/tom-select.ts","webpack://decidim-base/../../src/contrib/microplugin.ts","webpack://decidim-base/../../src/tom-select.popular.ts","webpack://decidim-base/../../src/plugins/caret_position/plugin.ts","webpack://decidim-base/../../src/plugins/dropdown_input/plugin.ts","webpack://decidim-base/../../src/plugins/no_backspace_delete/plugin.ts","webpack://decidim-base/../../src/plugins/remove_button/plugin.ts","webpack://decidim-base/../../src/plugins/restore_on_backspace/plugin.ts","webpack://decidim-base/webpack/bootstrap","webpack://decidim-base/webpack/runtime/compat get default export","webpack://decidim-base/webpack/runtime/define property getters","webpack://decidim-base/webpack/runtime/hasOwnProperty shorthand","webpack://decidim-base/webpack/runtime/publicPath","webpack://decidim-base/./gems/decidim-module-core/app/packs/src/decidim/geocoding/coordinate_input.js","webpack://decidim-base/./gems/decidim-module-core/app/packs/src/decidim/geocoding/attach_input.js","webpack://decidim-base/../.rbenv/versions/3.1.1/lib/ruby/gems/3.1.0/gems/decidim-elections-0.28.0/app/packs/src/decidim/votings/admin/polling_stations_form.js","webpack://decidim-base/../.rbenv/versions/3.1.1/lib/ruby/gems/3.1.0/gems/decidim-elections-0.28.0/app/packs/src/decidim/votings/admin/polling_officers_picker.js","webpack://decidim-base/../.rbenv/versions/3.1.1/lib/ruby/gems/3.1.0/gems/decidim-admin-0.28.0/app/packs/src/decidim/admin/field_dependent_inputs.component.js","webpack://decidim-base/../.rbenv/versions/3.1.1/lib/ruby/gems/3.1.0/gems/decidim-elections-0.28.0/app/packs/src/decidim/votings/admin/voting_user_role_form.js","webpack://decidim-base/../.rbenv/versions/3.1.1/lib/ruby/gems/3.1.0/gems/decidim-elections-0.28.0/app/packs/entrypoints/decidim_votings_admin.js"],"sourcesContent":["var map = {\n\t\"./decidim/elections/decidim_elections.svg\": 97540,\n\t\"./decidim/votings/decidim_votings.svg\": 63400\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 23439;","$(() => {\n  const updateCensusDatasetStatus = () => {\n    const $wrapper = $(\"#census-creating-data-wrapper\");\n    const updateStatusUrl = $wrapper.data(\"updateStatusUrl\")\n\n    if ($wrapper.length > 0) {\n      $.get(updateStatusUrl);\n    }\n  }\n\n  // 10 seconds\n  setInterval(updateCensusDatasetStatus, 10000);\n});\n","/**\n * MicroEvent - to make any js object an event emitter\n *\n * - pure javascript - server compatible, browser compatible\n * - dont rely on the browser doms\n * - super simple - you get it immediatly, no mistery, no magic involved\n *\n * @author Jerome Etienne (https://github.com/jeromeetienne)\n */\n\ntype TCallback = (...args:any) => any;\n\n/**\n * Execute callback for each event in space separated list of event names\n *\n */\nfunction forEvents(events:string,callback:(event:string)=>any){\n\tevents.split(/\\s+/).forEach((event) =>{\n\t\tcallback(event);\n\t});\n}\n\nexport default class MicroEvent{\n\n\tpublic _events: {[key:string]:TCallback[]};\n\n\tconstructor(){\n\t\tthis._events = {};\n\t}\n\n\ton(events:string, fct:TCallback){\n\t\tforEvents(events,(event) => {\n\t\t\tconst event_array = this._events[event] || [];\n\t\t\tevent_array.push(fct);\n\t\t\tthis._events[event] = event_array;\n\t\t});\n\t}\n\n\toff(events:string, fct:TCallback){\n\t\tvar n = arguments.length;\n\t\tif( n === 0 ){\n\t\t\tthis._events = {};\n\t\t\treturn;\n\t\t}\n\n\t\tforEvents(events,(event) => {\n\n\t\t\tif (n === 1){\n\t\t\t\tdelete this._events[event];\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tconst event_array = this._events[event];\n\t\t\tif( event_array === undefined ) return;\n\n\t\t\tevent_array.splice(event_array.indexOf(fct), 1);\n\t\t\tthis._events[event] = event_array;\n\t\t});\n\t}\n\n\ttrigger(events:string, ...args:any){\n\t\tvar self = this;\n\n\t\tforEvents(events,(event) => {\n\t\t\tconst event_array = self._events[event];\n\t\t\tif( event_array === undefined ) return;\n\t\t\tevent_array.forEach(fct => {\n\t\t\t\tfct.apply(self, args );\n\t\t\t});\n\n\t\t});\n\t}\n};\n","/*! @orchidjs/unicode-variants | https://github.com/orchidjs/unicode-variants | Apache License (v2) */\nimport { toArray, setToPattern, escape_regex, arrayToPattern, sequencePattern } from './regex.js';\nexport { escape_regex } from './regex.js';\nimport { allSubstrings } from './strings.js';\n\n/**\n * @typedef {{[key:string]:string}} TUnicodeMap\n * @typedef {{[key:string]:Set<string>}} TUnicodeSets\n * @typedef {[[number,number]]} TCodePoints\n * @typedef {{folded:string,composed:string,code_point:number}} TCodePointObj\n * @typedef {{start:number,end:number,length:number,substr:string}} TSequencePart\n */\n/** @type {TCodePoints} */\n\nconst code_points = [[0, 65535]];\nconst accent_pat = '[\\u0300-\\u036F\\u{b7}\\u{2be}\\u{2bc}]';\n/** @type {TUnicodeMap} */\n\nlet unicode_map;\n/** @type {RegExp} */\n\nlet multi_char_reg;\nconst max_char_length = 3;\n/** @type {TUnicodeMap} */\n\nconst latin_convert = {};\n/** @type {TUnicodeMap} */\n\nconst latin_condensed = {\n  '/': '⁄∕',\n  '0': '߀',\n  \"a\": \"ⱥɐɑ\",\n  \"aa\": \"ꜳ\",\n  \"ae\": \"æǽǣ\",\n  \"ao\": \"ꜵ\",\n  \"au\": \"ꜷ\",\n  \"av\": \"ꜹꜻ\",\n  \"ay\": \"ꜽ\",\n  \"b\": \"ƀɓƃ\",\n  \"c\": \"ꜿƈȼↄ\",\n  \"d\": \"đɗɖᴅƌꮷԁɦ\",\n  \"e\": \"ɛǝᴇɇ\",\n  \"f\": \"ꝼƒ\",\n  \"g\": \"ǥɠꞡᵹꝿɢ\",\n  \"h\": \"ħⱨⱶɥ\",\n  \"i\": \"ɨı\",\n  \"j\": \"ɉȷ\",\n  \"k\": \"ƙⱪꝁꝃꝅꞣ\",\n  \"l\": \"łƚɫⱡꝉꝇꞁɭ\",\n  \"m\": \"ɱɯϻ\",\n  \"n\": \"ꞥƞɲꞑᴎлԉ\",\n  \"o\": \"øǿɔɵꝋꝍᴑ\",\n  \"oe\": \"œ\",\n  \"oi\": \"ƣ\",\n  \"oo\": \"ꝏ\",\n  \"ou\": \"ȣ\",\n  \"p\": \"ƥᵽꝑꝓꝕρ\",\n  \"q\": \"ꝗꝙɋ\",\n  \"r\": \"ɍɽꝛꞧꞃ\",\n  \"s\": \"ßȿꞩꞅʂ\",\n  \"t\": \"ŧƭʈⱦꞇ\",\n  \"th\": \"þ\",\n  \"tz\": \"ꜩ\",\n  \"u\": \"ʉ\",\n  \"v\": \"ʋꝟʌ\",\n  \"vy\": \"ꝡ\",\n  \"w\": \"ⱳ\",\n  \"y\": \"ƴɏỿ\",\n  \"z\": \"ƶȥɀⱬꝣ\",\n  \"hv\": \"ƕ\"\n};\n\nfor (let latin in latin_condensed) {\n  let unicode = latin_condensed[latin] || '';\n\n  for (let i = 0; i < unicode.length; i++) {\n    let char = unicode.substring(i, i + 1);\n    latin_convert[char] = latin;\n  }\n}\n\nconst convert_pat = new RegExp(Object.keys(latin_convert).join('|') + '|' + accent_pat, 'gu');\n/**\n * Initialize the unicode_map from the give code point ranges\n *\n * @param {TCodePoints=} _code_points\n */\n\nconst initialize = _code_points => {\n  if (unicode_map !== undefined) return;\n  unicode_map = generateMap(_code_points || code_points);\n};\n/**\n * Helper method for normalize a string\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize\n * @param {string} str\n * @param {string} form\n */\n\nconst normalize = (str, form = 'NFKD') => str.normalize(form);\n/**\n * Remove accents without reordering string\n * calling str.normalize('NFKD') on \\u{594}\\u{595}\\u{596} becomes \\u{596}\\u{594}\\u{595}\n * via https://github.com/krisk/Fuse/issues/133#issuecomment-318692703\n * @param {string} str\n * @return {string}\n */\n\nconst asciifold = str => {\n  return toArray(str).reduce(\n  /**\n   * @param {string} result\n   * @param {string} char\n   */\n  (result, char) => {\n    return result + _asciifold(char);\n  }, '');\n};\n/**\n * @param {string} str\n * @return {string}\n */\n\nconst _asciifold = str => {\n  str = normalize(str).toLowerCase().replace(convert_pat, (\n  /** @type {string} */\n  char) => {\n    return latin_convert[char] || '';\n  }); //return str;\n\n  return normalize(str, 'NFC');\n};\n/**\n * Generate a list of unicode variants from the list of code points\n * @param {TCodePoints} code_points\n * @yield {TCodePointObj}\n */\n\nfunction* generator(code_points) {\n  for (const [code_point_min, code_point_max] of code_points) {\n    for (let i = code_point_min; i <= code_point_max; i++) {\n      let composed = String.fromCharCode(i);\n      let folded = asciifold(composed);\n\n      if (folded == composed.toLowerCase()) {\n        continue;\n      } // skip when folded is a string longer than 3 characters long\n      // bc the resulting regex patterns will be long\n      // eg:\n      // folded صلى الله عليه وسلم length 18 code point 65018\n      // folded جل جلاله length 8 code point 65019\n\n\n      if (folded.length > max_char_length) {\n        continue;\n      }\n\n      if (folded.length == 0) {\n        continue;\n      }\n\n      yield {\n        folded: folded,\n        composed: composed,\n        code_point: i\n      };\n    }\n  }\n}\n/**\n * Generate a unicode map from the list of code points\n * @param {TCodePoints} code_points\n * @return {TUnicodeSets}\n */\n\nconst generateSets = code_points => {\n  /** @type {{[key:string]:Set<string>}} */\n  const unicode_sets = {};\n  /**\n   * @param {string} folded\n   * @param {string} to_add\n   */\n\n  const addMatching = (folded, to_add) => {\n    /** @type {Set<string>} */\n    const folded_set = unicode_sets[folded] || new Set();\n    const patt = new RegExp('^' + setToPattern(folded_set) + '$', 'iu');\n\n    if (to_add.match(patt)) {\n      return;\n    }\n\n    folded_set.add(escape_regex(to_add));\n    unicode_sets[folded] = folded_set;\n  };\n\n  for (let value of generator(code_points)) {\n    addMatching(value.folded, value.folded);\n    addMatching(value.folded, value.composed);\n  }\n\n  return unicode_sets;\n};\n/**\n * Generate a unicode map from the list of code points\n * ae => (?:(?:ae|Æ|Ǽ|Ǣ)|(?:A|Ⓐ|Ａ...)(?:E|ɛ|Ⓔ...))\n *\n * @param {TCodePoints} code_points\n * @return {TUnicodeMap}\n */\n\nconst generateMap = code_points => {\n  /** @type {TUnicodeSets} */\n  const unicode_sets = generateSets(code_points);\n  /** @type {TUnicodeMap} */\n\n  const unicode_map = {};\n  /** @type {string[]} */\n\n  let multi_char = [];\n\n  for (let folded in unicode_sets) {\n    let set = unicode_sets[folded];\n\n    if (set) {\n      unicode_map[folded] = setToPattern(set);\n    }\n\n    if (folded.length > 1) {\n      multi_char.push(escape_regex(folded));\n    }\n  }\n\n  multi_char.sort((a, b) => b.length - a.length);\n  const multi_char_patt = arrayToPattern(multi_char);\n  multi_char_reg = new RegExp('^' + multi_char_patt, 'u');\n  return unicode_map;\n};\n/**\n * Map each element of an array from it's folded value to all possible unicode matches\n * @param {string[]} strings\n * @param {number} min_replacement\n * @return {string}\n */\n\nconst mapSequence = (strings, min_replacement = 1) => {\n  let chars_replaced = 0;\n  strings = strings.map(str => {\n    if (unicode_map[str]) {\n      chars_replaced += str.length;\n    }\n\n    return unicode_map[str] || str;\n  });\n\n  if (chars_replaced >= min_replacement) {\n    return sequencePattern(strings);\n  }\n\n  return '';\n};\n/**\n * Convert a short string and split it into all possible patterns\n * Keep a pattern only if min_replacement is met\n *\n * 'abc'\n * \t\t=> [['abc'],['ab','c'],['a','bc'],['a','b','c']]\n *\t\t=> ['abc-pattern','ab-c-pattern'...]\n *\n *\n * @param {string} str\n * @param {number} min_replacement\n * @return {string}\n */\n\nconst substringsToPattern = (str, min_replacement = 1) => {\n  min_replacement = Math.max(min_replacement, str.length - 1);\n  return arrayToPattern(allSubstrings(str).map(sub_pat => {\n    return mapSequence(sub_pat, min_replacement);\n  }));\n};\n/**\n * Convert an array of sequences into a pattern\n * [{start:0,end:3,length:3,substr:'iii'}...] => (?:iii...)\n *\n * @param {Sequence[]} sequences\n * @param {boolean} all\n */\n\nconst sequencesToPattern = (sequences, all = true) => {\n  let min_replacement = sequences.length > 1 ? 1 : 0;\n  return arrayToPattern(sequences.map(sequence => {\n    let seq = [];\n    const len = all ? sequence.length() : sequence.length() - 1;\n\n    for (let j = 0; j < len; j++) {\n      seq.push(substringsToPattern(sequence.substrs[j] || '', min_replacement));\n    }\n\n    return sequencePattern(seq);\n  }));\n};\n/**\n * Return true if the sequence is already in the sequences\n * @param {Sequence} needle_seq\n * @param {Sequence[]} sequences\n */\n\n\nconst inSequences = (needle_seq, sequences) => {\n  for (const seq of sequences) {\n    if (seq.start != needle_seq.start || seq.end != needle_seq.end) {\n      continue;\n    }\n\n    if (seq.substrs.join('') !== needle_seq.substrs.join('')) {\n      continue;\n    }\n\n    let needle_parts = needle_seq.parts;\n    /**\n     * @param {TSequencePart} part\n     */\n\n    const filter = part => {\n      for (const needle_part of needle_parts) {\n        if (needle_part.start === part.start && needle_part.substr === part.substr) {\n          return false;\n        }\n\n        if (part.length == 1 || needle_part.length == 1) {\n          continue;\n        } // check for overlapping parts\n        // a = ['::=','==']\n        // b = ['::','===']\n        // a = ['r','sm']\n        // b = ['rs','m']\n\n\n        if (part.start < needle_part.start && part.end > needle_part.start) {\n          return true;\n        }\n\n        if (needle_part.start < part.start && needle_part.end > part.start) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n\n    let filtered = seq.parts.filter(filter);\n\n    if (filtered.length > 0) {\n      continue;\n    }\n\n    return true;\n  }\n\n  return false;\n};\n\nclass Sequence {\n  constructor() {\n    /** @type {TSequencePart[]} */\n    this.parts = [];\n    /** @type {string[]} */\n\n    this.substrs = [];\n    this.start = 0;\n    this.end = 0;\n  }\n  /**\n   * @param {TSequencePart|undefined} part\n   */\n\n\n  add(part) {\n    if (part) {\n      this.parts.push(part);\n      this.substrs.push(part.substr);\n      this.start = Math.min(part.start, this.start);\n      this.end = Math.max(part.end, this.end);\n    }\n  }\n\n  last() {\n    return this.parts[this.parts.length - 1];\n  }\n\n  length() {\n    return this.parts.length;\n  }\n  /**\n   * @param {number} position\n   * @param {TSequencePart} last_piece\n   */\n\n\n  clone(position, last_piece) {\n    let clone = new Sequence();\n    let parts = JSON.parse(JSON.stringify(this.parts));\n    let last_part = parts.pop();\n\n    for (const part of parts) {\n      clone.add(part);\n    }\n\n    let last_substr = last_piece.substr.substring(0, position - last_part.start);\n    let clone_last_len = last_substr.length;\n    clone.add({\n      start: last_part.start,\n      end: last_part.start + clone_last_len,\n      length: clone_last_len,\n      substr: last_substr\n    });\n    return clone;\n  }\n\n}\n/**\n * Expand a regular expression pattern to include unicode variants\n * \teg /a/ becomes /aⓐａẚàáâầấẫẩãāăằắẵẳȧǡäǟảåǻǎȁȃạậặḁąⱥɐɑAⒶＡÀÁÂẦẤẪẨÃĀĂẰẮẴẲȦǠÄǞẢÅǺǍȀȂẠẬẶḀĄȺⱯ/\n *\n * Issue:\n *  ﺊﺋ [ 'ﺊ = \\\\u{fe8a}', 'ﺋ = \\\\u{fe8b}' ]\n *\tbecomes:\tئئ [ 'ي = \\\\u{64a}', 'ٔ = \\\\u{654}', 'ي = \\\\u{64a}', 'ٔ = \\\\u{654}' ]\n *\n *\tİĲ = IIJ = ⅡJ\n *\n * \t1/2/4\n *\n * @param {string} str\n * @return {string|undefined}\n */\n\n\nconst getPattern = str => {\n  initialize();\n  str = asciifold(str);\n  let pattern = '';\n  let sequences = [new Sequence()];\n\n  for (let i = 0; i < str.length; i++) {\n    let substr = str.substring(i);\n    let match = substr.match(multi_char_reg);\n    const char = str.substring(i, i + 1);\n    const match_str = match ? match[0] : null; // loop through sequences\n    // add either the char or multi_match\n\n    let overlapping = [];\n    let added_types = new Set();\n\n    for (const sequence of sequences) {\n      const last_piece = sequence.last();\n\n      if (!last_piece || last_piece.length == 1 || last_piece.end <= i) {\n        // if we have a multi match\n        if (match_str) {\n          const len = match_str.length;\n          sequence.add({\n            start: i,\n            end: i + len,\n            length: len,\n            substr: match_str\n          });\n          added_types.add('1');\n        } else {\n          sequence.add({\n            start: i,\n            end: i + 1,\n            length: 1,\n            substr: char\n          });\n          added_types.add('2');\n        }\n      } else if (match_str) {\n        let clone = sequence.clone(i, last_piece);\n        const len = match_str.length;\n        clone.add({\n          start: i,\n          end: i + len,\n          length: len,\n          substr: match_str\n        });\n        overlapping.push(clone);\n      } else {\n        // don't add char\n        // adding would create invalid patterns: 234 => [2,34,4]\n        added_types.add('3');\n      }\n    } // if we have overlapping\n\n\n    if (overlapping.length > 0) {\n      // ['ii','iii'] before ['i','i','iii']\n      overlapping = overlapping.sort((a, b) => {\n        return a.length() - b.length();\n      });\n\n      for (let clone of overlapping) {\n        // don't add if we already have an equivalent sequence\n        if (inSequences(clone, sequences)) {\n          continue;\n        }\n\n        sequences.push(clone);\n      }\n\n      continue;\n    } // if we haven't done anything unique\n    // clean up the patterns\n    // helps keep patterns smaller\n    // if str = 'r₨㎧aarss', pattern will be 446 instead of 655\n\n\n    if (i > 0 && added_types.size == 1 && !added_types.has('3')) {\n      pattern += sequencesToPattern(sequences, false);\n      let new_seq = new Sequence();\n      const old_seq = sequences[0];\n\n      if (old_seq) {\n        new_seq.add(old_seq.last());\n      }\n\n      sequences = [new_seq];\n    }\n  }\n\n  pattern += sequencesToPattern(sequences, true);\n  return pattern;\n};\n\nexport { _asciifold, asciifold, code_points, generateMap, generateSets, generator, getPattern, initialize, mapSequence, normalize, substringsToPattern, unicode_map };\n//# sourceMappingURL=index.js.map\n","/*! @orchidjs/unicode-variants | https://github.com/orchidjs/unicode-variants | Apache License (v2) */\n/**\n * Convert array of strings to a regular expression\n *\tex ['ab','a'] => (?:ab|a)\n * \tex ['a','b'] => [ab]\n * @param {string[]} chars\n * @return {string}\n */\nconst arrayToPattern = chars => {\n  chars = chars.filter(Boolean);\n\n  if (chars.length < 2) {\n    return chars[0] || '';\n  }\n\n  return maxValueLength(chars) == 1 ? '[' + chars.join('') + ']' : '(?:' + chars.join('|') + ')';\n};\n/**\n * @param {string[]} array\n * @return {string}\n */\n\nconst sequencePattern = array => {\n  if (!hasDuplicates(array)) {\n    return array.join('');\n  }\n\n  let pattern = '';\n  let prev_char_count = 0;\n\n  const prev_pattern = () => {\n    if (prev_char_count > 1) {\n      pattern += '{' + prev_char_count + '}';\n    }\n  };\n\n  array.forEach((char, i) => {\n    if (char === array[i - 1]) {\n      prev_char_count++;\n      return;\n    }\n\n    prev_pattern();\n    pattern += char;\n    prev_char_count = 1;\n  });\n  prev_pattern();\n  return pattern;\n};\n/**\n * Convert array of strings to a regular expression\n *\tex ['ab','a'] => (?:ab|a)\n * \tex ['a','b'] => [ab]\n * @param {Set<string>} chars\n * @return {string}\n */\n\nconst setToPattern = chars => {\n  let array = toArray(chars);\n  return arrayToPattern(array);\n};\n/**\n *\n * https://stackoverflow.com/questions/7376598/in-javascript-how-do-i-check-if-an-array-has-duplicate-values\n * @param {any[]} array\n */\n\nconst hasDuplicates = array => {\n  return new Set(array).size !== array.length;\n};\n/**\n * https://stackoverflow.com/questions/63006601/why-does-u-throw-an-invalid-escape-error\n * @param {string} str\n * @return {string}\n */\n\nconst escape_regex = str => {\n  return (str + '').replace(/([\\$\\(\\)\\*\\+\\.\\?\\[\\]\\^\\{\\|\\}\\\\])/gu, '\\\\$1');\n};\n/**\n * Return the max length of array values\n * @param {string[]} array\n *\n */\n\nconst maxValueLength = array => {\n  return array.reduce((longest, value) => Math.max(longest, unicodeLength(value)), 0);\n};\n/**\n * @param {string} str\n */\n\nconst unicodeLength = str => {\n  return toArray(str).length;\n};\n/**\n * @param {any} p\n * @return {any[]}\n */\n\nconst toArray = p => Array.from(p);\n\nexport { arrayToPattern, escape_regex, hasDuplicates, maxValueLength, sequencePattern, setToPattern, toArray, unicodeLength };\n//# sourceMappingURL=regex.js.map\n","/*! @orchidjs/unicode-variants | https://github.com/orchidjs/unicode-variants | Apache License (v2) */\n/**\n * Get all possible combinations of substrings that add up to the given string\n * https://stackoverflow.com/questions/30169587/find-all-the-combination-of-substrings-that-add-up-to-the-given-string\n * @param {string} input\n * @return {string[][]}\n */\nconst allSubstrings = input => {\n  if (input.length === 1) return [[input]];\n  /** @type {string[][]} */\n\n  let result = [];\n  const start = input.substring(1);\n  const suba = allSubstrings(start);\n  suba.forEach(function (subresult) {\n    let tmp = subresult.slice(0);\n    tmp[0] = input.charAt(0) + tmp[0];\n    result.push(tmp);\n    tmp = subresult.slice(0);\n    tmp.unshift(input.charAt(0));\n    result.push(tmp);\n  });\n  return result;\n};\n\nexport { allSubstrings };\n//# sourceMappingURL=strings.js.map\n","/*! sifter.js | https://github.com/orchidjs/sifter.js | Apache License (v2) */\nimport { asciifold } from '@orchidjs/unicode-variants';\n\n/**\n * A property getter resolving dot-notation\n * @param  {Object}  obj     The root object to fetch property on\n * @param  {String}  name    The optionally dotted property name to fetch\n * @return {Object}          The resolved property value\n */\nconst getAttr = (obj, name) => {\n  if (!obj) return;\n  return obj[name];\n};\n/**\n * A property getter resolving dot-notation\n * @param  {Object}  obj     The root object to fetch property on\n * @param  {String}  name    The optionally dotted property name to fetch\n * @return {Object}          The resolved property value\n */\n\nconst getAttrNesting = (obj, name) => {\n  if (!obj) return;\n  var part,\n      names = name.split(\".\");\n\n  while ((part = names.shift()) && (obj = obj[part]));\n\n  return obj;\n};\n/**\n * Calculates how close of a match the\n * given value is against a search token.\n *\n */\n\nconst scoreValue = (value, token, weight) => {\n  var score, pos;\n  if (!value) return 0;\n  value = value + '';\n  if (token.regex == null) return 0;\n  pos = value.search(token.regex);\n  if (pos === -1) return 0;\n  score = token.string.length / value.length;\n  if (pos === 0) score += 0.5;\n  return score * weight;\n};\n/**\n * Cast object property to an array if it exists and has a value\n *\n */\n\nconst propToArray = (obj, key) => {\n  var value = obj[key];\n  if (typeof value == 'function') return value;\n\n  if (value && !Array.isArray(value)) {\n    obj[key] = [value];\n  }\n};\n/**\n * Iterates over arrays and hashes.\n *\n * ```\n * iterate(this.items, function(item, id) {\n *    // invoked for each item\n * });\n * ```\n *\n */\n\nconst iterate = (object, callback) => {\n  if (Array.isArray(object)) {\n    object.forEach(callback);\n  } else {\n    for (var key in object) {\n      if (object.hasOwnProperty(key)) {\n        callback(object[key], key);\n      }\n    }\n  }\n};\nconst cmp = (a, b) => {\n  if (typeof a === 'number' && typeof b === 'number') {\n    return a > b ? 1 : a < b ? -1 : 0;\n  }\n\n  a = asciifold(a + '').toLowerCase();\n  b = asciifold(b + '').toLowerCase();\n  if (a > b) return 1;\n  if (b > a) return -1;\n  return 0;\n};\n\nexport { cmp, getAttr, getAttrNesting, iterate, propToArray, scoreValue };\n//# sourceMappingURL=utils.js.map\n","/*! sifter.js | https://github.com/orchidjs/sifter.js | Apache License (v2) */\nimport { iterate, cmp, propToArray, getAttrNesting, getAttr, scoreValue } from './utils.js';\nexport { cmp, getAttr, getAttrNesting, iterate, propToArray, scoreValue } from './utils.js';\nimport { escape_regex, getPattern } from '@orchidjs/unicode-variants';\nexport { getPattern } from '@orchidjs/unicode-variants';\n\n/**\n * sifter.js\n * Copyright (c) 2013–2020 Brian Reavis & contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n * @author Brian Reavis <brian@thirdroute.com>\n */\n\nclass Sifter {\n  // []|{};\n\n  /**\n   * Textually searches arrays and hashes of objects\n   * by property (or multiple properties). Designed\n   * specifically for autocomplete.\n   *\n   */\n  constructor(items, settings) {\n    this.items = void 0;\n    this.settings = void 0;\n    this.items = items;\n    this.settings = settings || {\n      diacritics: true\n    };\n  }\n\n  /**\n   * Splits a search string into an array of individual\n   * regexps to be used to match results.\n   *\n   */\n  tokenize(query, respect_word_boundaries, weights) {\n    if (!query || !query.length) return [];\n    const tokens = [];\n    const words = query.split(/\\s+/);\n    var field_regex;\n\n    if (weights) {\n      field_regex = new RegExp('^(' + Object.keys(weights).map(escape_regex).join('|') + ')\\:(.*)$');\n    }\n\n    words.forEach(word => {\n      let field_match;\n      let field = null;\n      let regex = null; // look for \"field:query\" tokens\n\n      if (field_regex && (field_match = word.match(field_regex))) {\n        field = field_match[1];\n        word = field_match[2];\n      }\n\n      if (word.length > 0) {\n        if (this.settings.diacritics) {\n          regex = getPattern(word) || null;\n        } else {\n          regex = escape_regex(word);\n        }\n\n        if (regex && respect_word_boundaries) regex = \"\\\\b\" + regex;\n      }\n\n      tokens.push({\n        string: word,\n        regex: regex ? new RegExp(regex, 'iu') : null,\n        field: field\n      });\n    });\n    return tokens;\n  }\n\n  /**\n   * Returns a function to be used to score individual results.\n   *\n   * Good matches will have a higher score than poor matches.\n   * If an item is not a match, 0 will be returned by the function.\n   *\n   * @returns {T.ScoreFn}\n   */\n  getScoreFunction(query, options) {\n    var search = this.prepareSearch(query, options);\n    return this._getScoreFunction(search);\n  }\n  /**\n   * @returns {T.ScoreFn}\n   *\n   */\n\n\n  _getScoreFunction(search) {\n    const tokens = search.tokens,\n          token_count = tokens.length;\n\n    if (!token_count) {\n      return function () {\n        return 0;\n      };\n    }\n\n    const fields = search.options.fields,\n          weights = search.weights,\n          field_count = fields.length,\n          getAttrFn = search.getAttrFn;\n\n    if (!field_count) {\n      return function () {\n        return 1;\n      };\n    }\n    /**\n     * Calculates the score of an object\n     * against the search query.\n     *\n     */\n\n\n    const scoreObject = function () {\n      if (field_count === 1) {\n        return function (token, data) {\n          const field = fields[0].field;\n          return scoreValue(getAttrFn(data, field), token, weights[field] || 1);\n        };\n      }\n\n      return function (token, data) {\n        var sum = 0; // is the token specific to a field?\n\n        if (token.field) {\n          const value = getAttrFn(data, token.field);\n\n          if (!token.regex && value) {\n            sum += 1 / field_count;\n          } else {\n            sum += scoreValue(value, token, 1);\n          }\n        } else {\n          iterate(weights, (weight, field) => {\n            sum += scoreValue(getAttrFn(data, field), token, weight);\n          });\n        }\n\n        return sum / field_count;\n      };\n    }();\n\n    if (token_count === 1) {\n      return function (data) {\n        return scoreObject(tokens[0], data);\n      };\n    }\n\n    if (search.options.conjunction === 'and') {\n      return function (data) {\n        var score,\n            sum = 0;\n\n        for (let token of tokens) {\n          score = scoreObject(token, data);\n          if (score <= 0) return 0;\n          sum += score;\n        }\n\n        return sum / token_count;\n      };\n    } else {\n      return function (data) {\n        var sum = 0;\n        iterate(tokens, token => {\n          sum += scoreObject(token, data);\n        });\n        return sum / token_count;\n      };\n    }\n  }\n\n  /**\n   * Returns a function that can be used to compare two\n   * results, for sorting purposes. If no sorting should\n   * be performed, `null` will be returned.\n   *\n   * @return function(a,b)\n   */\n  getSortFunction(query, options) {\n    var search = this.prepareSearch(query, options);\n    return this._getSortFunction(search);\n  }\n\n  _getSortFunction(search) {\n    var implicit_score,\n        sort_flds = [];\n    const self = this,\n          options = search.options,\n          sort = !search.query && options.sort_empty ? options.sort_empty : options.sort;\n\n    if (typeof sort == 'function') {\n      return sort.bind(this);\n    }\n    /**\n     * Fetches the specified sort field value\n     * from a search result item.\n     *\n     */\n\n\n    const get_field = function get_field(name, result) {\n      if (name === '$score') return result.score;\n      return search.getAttrFn(self.items[result.id], name);\n    }; // parse options\n\n\n    if (sort) {\n      for (let s of sort) {\n        if (search.query || s.field !== '$score') {\n          sort_flds.push(s);\n        }\n      }\n    } // the \"$score\" field is implied to be the primary\n    // sort field, unless it's manually specified\n\n\n    if (search.query) {\n      implicit_score = true;\n\n      for (let fld of sort_flds) {\n        if (fld.field === '$score') {\n          implicit_score = false;\n          break;\n        }\n      }\n\n      if (implicit_score) {\n        sort_flds.unshift({\n          field: '$score',\n          direction: 'desc'\n        });\n      } // without a search.query, all items will have the same score\n\n    } else {\n      sort_flds = sort_flds.filter(fld => fld.field !== '$score');\n    } // build function\n\n\n    const sort_flds_count = sort_flds.length;\n\n    if (!sort_flds_count) {\n      return null;\n    }\n\n    return function (a, b) {\n      var result, field;\n\n      for (let sort_fld of sort_flds) {\n        field = sort_fld.field;\n        let multiplier = sort_fld.direction === 'desc' ? -1 : 1;\n        result = multiplier * cmp(get_field(field, a), get_field(field, b));\n        if (result) return result;\n      }\n\n      return 0;\n    };\n  }\n\n  /**\n   * Parses a search query and returns an object\n   * with tokens and fields ready to be populated\n   * with results.\n   *\n   */\n  prepareSearch(query, optsUser) {\n    const weights = {};\n    var options = Object.assign({}, optsUser);\n    propToArray(options, 'sort');\n    propToArray(options, 'sort_empty'); // convert fields to new format\n\n    if (options.fields) {\n      propToArray(options, 'fields');\n      const fields = [];\n      options.fields.forEach(field => {\n        if (typeof field == 'string') {\n          field = {\n            field: field,\n            weight: 1\n          };\n        }\n\n        fields.push(field);\n        weights[field.field] = 'weight' in field ? field.weight : 1;\n      });\n      options.fields = fields;\n    }\n\n    return {\n      options: options,\n      query: query.toLowerCase().trim(),\n      tokens: this.tokenize(query, options.respect_word_boundaries, weights),\n      total: 0,\n      items: [],\n      weights: weights,\n      getAttrFn: options.nesting ? getAttrNesting : getAttr\n    };\n  }\n\n  /**\n   * Searches through all items and returns a sorted array of matches.\n   *\n   */\n  search(query, options) {\n    var self = this,\n        score,\n        search;\n    search = this.prepareSearch(query, options);\n    options = search.options;\n    query = search.query; // generate result scoring function\n\n    const fn_score = options.score || self._getScoreFunction(search); // perform search and sort\n\n\n    if (query.length) {\n      iterate(self.items, (item, id) => {\n        score = fn_score(item);\n\n        if (options.filter === false || score > 0) {\n          search.items.push({\n            'score': score,\n            'id': id\n          });\n        }\n      });\n    } else {\n      iterate(self.items, (_, id) => {\n        search.items.push({\n          'score': 1,\n          'id': id\n        });\n      });\n    }\n\n    const fn_sort = self._getSortFunction(search);\n\n    if (fn_sort) search.items.sort(fn_sort); // apply limits\n\n    search.total = search.items.length;\n\n    if (typeof options.limit === 'number') {\n      search.items = search.items.slice(0, options.limit);\n    }\n\n    return search;\n  }\n\n}\n\nexport { Sifter };\n//# sourceMappingURL=sifter.js.map\n","\nimport { asciifold } from '@orchidjs/unicode-variants';\nimport * as T from './types';\n\n\n/**\n * A property getter resolving dot-notation\n * @param  {Object}  obj     The root object to fetch property on\n * @param  {String}  name    The optionally dotted property name to fetch\n * @return {Object}          The resolved property value\n */\nexport const getAttr = (obj:{[key:string]:any}, name:string ) => {\n    if (!obj ) return;\n    return obj[name];\n};\n\n/**\n * A property getter resolving dot-notation\n * @param  {Object}  obj     The root object to fetch property on\n * @param  {String}  name    The optionally dotted property name to fetch\n * @return {Object}          The resolved property value\n */\nexport const getAttrNesting = (obj:{[key:string]:any}, name:string ) => {\n    if (!obj ) return;\n    var part, names = name.split(\".\");\n\twhile( (part = names.shift()) && (obj = obj[part]));\n    return obj;\n};\n\n/**\n * Calculates how close of a match the\n * given value is against a search token.\n *\n */\nexport const scoreValue = (value:string, token:T.Token, weight:number ):number => {\n\tvar score, pos;\n\n\tif (!value) return 0;\n\n\tvalue = value + '';\n\tif( token.regex == null ) return 0;\n\tpos = value.search(token.regex);\n\tif (pos === -1) return 0;\n\n\tscore = token.string.length / value.length;\n\tif (pos === 0) score += 0.5;\n\n\treturn score * weight;\n};\n\n\n/**\n * Cast object property to an array if it exists and has a value\n *\n */\nexport const propToArray = (obj:{[key:string]:any}, key:string) => {\n\tvar value = obj[key];\n\n\tif( typeof value == 'function' ) return value;\n\n\tif( value && !Array.isArray(value) ){\n\t\tobj[key] = [value];\n\t}\n}\n\n\n/**\n * Iterates over arrays and hashes.\n *\n * ```\n * iterate(this.items, function(item, id) {\n *    // invoked for each item\n * });\n * ```\n *\n */\nexport const iterate = (object:[]|{[key:string]:any}, callback:(value:any,key:any)=>any) => {\n\n\tif ( Array.isArray(object)) {\n\t\tobject.forEach(callback);\n\n\t}else{\n\n\t\tfor (var key in object) {\n\t\t\tif (object.hasOwnProperty(key)) {\n\t\t\t\tcallback(object[key], key);\n\t\t\t}\n\t\t}\n\t}\n};\n\n\n\nexport const cmp = (a:number|string, b:number|string) => {\n\tif (typeof a === 'number' && typeof b === 'number') {\n\t\treturn a > b ? 1 : (a < b ? -1 : 0);\n\t}\n\ta = asciifold(a + '').toLowerCase();\n\tb = asciifold(b + '').toLowerCase();\n\tif (a > b) return 1;\n\tif (b > a) return -1;\n\treturn 0;\n};\n","\nimport { iterate } from '@orchidjs/sifter/lib/utils';\n\n/**\n * Return a dom element from either a dom query string, jQuery object, a dom element or html string\n * https://stackoverflow.com/questions/494143/creating-a-new-dom-element-from-an-html-string-using-built-in-dom-methods-or-pro/35385518#35385518\n *\n * param query should be {}\n */\nexport const getDom = ( query:any ):HTMLElement => {\n\n\tif( query.jquery ){\n\t\treturn query[0];\n\t}\n\n\tif( query instanceof HTMLElement ){\n\t\treturn query;\n\t}\n\n\tif( isHtmlString(query) ){\n\t\tvar tpl = document.createElement('template');\n\t\ttpl.innerHTML = query.trim(); // Never return a text node of whitespace as the result\n\t\treturn tpl.content.firstChild as HTMLElement;\n\t}\n\n\treturn document.querySelector(query);\n};\n\nexport const isHtmlString = (arg:any): boolean => {\n\tif( typeof arg === 'string' && arg.indexOf('<') > -1 ){\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nexport const escapeQuery = (query:string):string => {\n\treturn query.replace(/['\"\\\\]/g, '\\\\$&');\n}\n\n/**\n * Dispatch an event\n *\n */\nexport const triggerEvent = ( dom_el:HTMLElement, event_name:string ):void => {\n\tvar event = document.createEvent('HTMLEvents');\n\tevent.initEvent(event_name, true, false);\n\tdom_el.dispatchEvent(event)\n};\n\n/**\n * Apply CSS rules to a dom element\n *\n */\nexport const applyCSS = ( dom_el:HTMLElement, css:{ [key: string]: string|number }):void => {\n\tObject.assign(dom_el.style, css);\n}\n\n\n/**\n * Add css classes\n *\n */\nexport const addClasses = ( elmts:HTMLElement|HTMLElement[], ...classes:string[]|string[][] ) => {\n\n\tvar norm_classes \t= classesArray(classes);\n\telmts\t\t\t\t= castAsArray(elmts);\n\n\telmts.map( el => {\n\t\tnorm_classes.map( cls => {\n\t\t\tel.classList.add( cls );\n\t\t});\n\t});\n}\n\n/**\n * Remove css classes\n *\n */\n export const removeClasses = ( elmts:HTMLElement|HTMLElement[], ...classes:string[]|string[][] ) => {\n\n \tvar norm_classes \t= classesArray(classes);\n\telmts\t\t\t\t= castAsArray(elmts);\n\n\telmts.map( el => {\n\t\tnorm_classes.map(cls => {\n\t \t\tel.classList.remove( cls );\n\t\t});\n \t});\n }\n\n\n/**\n * Return arguments\n *\n */\nexport const classesArray = (args:string[]|string[][]):string[] => {\n\tvar classes:string[] = [];\n\titerate( args, (_classes) =>{\n\t\tif( typeof _classes === 'string' ){\n\t\t\t_classes = _classes.trim().split(/[\\11\\12\\14\\15\\40]/);\n\t\t}\n\t\tif( Array.isArray(_classes) ){\n\t\t\tclasses = classes.concat(_classes);\n\t\t}\n\t});\n\n\treturn classes.filter(Boolean);\n}\n\n\n/**\n * Create an array from arg if it's not already an array\n *\n */\nexport const castAsArray = (arg:any):Array<any> => {\n\tif( !Array.isArray(arg) ){\n \t\targ = [arg];\n \t}\n\treturn arg;\n}\n\n\n/**\n * Get the closest node to the evt.target matching the selector\n * Stops at wrapper\n *\n */\nexport const parentMatch = ( target:null|HTMLElement, selector:string, wrapper?:HTMLElement ):HTMLElement|void => {\n\n\tif( wrapper && !wrapper.contains(target) ){\n\t\treturn;\n\t}\n\n\twhile( target && target.matches ){\n\n\t\tif( target.matches(selector) ){\n\t\t\treturn target;\n\t\t}\n\n\t\ttarget = target.parentNode as HTMLElement;\n\t}\n}\n\n\n/**\n * Get the first or last item from an array\n *\n * > 0 - right (last)\n * <= 0 - left (first)\n *\n */\nexport const getTail = ( list:Array<any>|NodeList, direction:number=0 ):any => {\n\n\tif( direction > 0 ){\n\t\treturn list[list.length-1];\n\t}\n\n\treturn list[0];\n}\n\n/**\n * Return true if an object is empty\n *\n */\nexport const isEmptyObject = (obj:object):boolean => {\n\treturn (Object.keys(obj).length === 0);\n}\n\n\n/**\n * Get the index of an element amongst sibling nodes of the same type\n *\n */\nexport const nodeIndex = ( el:null|Element, amongst?:string ):number => {\n\tif (!el) return -1;\n\n\tamongst = amongst || el.nodeName;\n\n\tvar i = 0;\n\twhile( el = el.previousElementSibling ){\n\n\t\tif( el.matches(amongst) ){\n\t\t\ti++;\n\t\t}\n\t}\n\treturn i;\n}\n\n\n/**\n * Set attributes of an element\n *\n */\nexport const setAttr = (el:Element,attrs:{ [key: string]: null|string|number }) => {\n\titerate( attrs,(val,attr) => {\n\t\tif( val == null ){\n\t\t\tel.removeAttribute(attr as string);\n\t\t}else{\n\t\t\tel.setAttribute(attr as string, ''+val);\n\t\t}\n\t});\n}\n\n\n/**\n * Replace a node\n */\nexport const replaceNode = ( existing:Node, replacement:Node ) => {\n\tif( existing.parentNode ) existing.parentNode.replaceChild(replacement, existing);\n}\n","/**\n * highlight v3 | MIT license | Johann Burkard <jb@eaio.com>\n * Highlights arbitrary terms in a node.\n *\n * - Modified by Marshal <beatgates@gmail.com> 2011-6-24 (added regex)\n * - Modified by Brian Reavis <brian@thirdroute.com> 2012-8-27 (cleanup)\n */\n\nimport {replaceNode} from '../vanilla';\n\n\nexport const highlight = (element:HTMLElement, regex:string|RegExp) => {\n\n\tif( regex === null ) return;\n\n\t// convet string to regex\n\tif( typeof regex === 'string' ){\n\n\t\tif( !regex.length ) return;\n\t\tregex = new RegExp(regex, 'i');\n\t}\n\n\n\t// Wrap matching part of text node with highlighting <span>, e.g.\n\t// Soccer  ->  <span class=\"highlight\">Soc</span>cer  for regex = /soc/i\n\tconst highlightText = ( node:Text ):number => {\n\n\t\tvar match = node.data.match(regex);\n\t\tif( match && node.data.length > 0 ){\n\t\t\tvar spannode\t\t= document.createElement('span');\n\t\t\tspannode.className\t= 'highlight';\n\t\t\tvar middlebit\t\t= node.splitText(match.index as number);\n\n\t\t\tmiddlebit.splitText(match[0]!.length);\n\t\t\tvar middleclone\t\t= middlebit.cloneNode(true);\n\n\t\t\tspannode.appendChild(middleclone);\n\t\t\treplaceNode(middlebit, spannode);\n\t\t\treturn 1;\n\t\t}\n\n\t\treturn 0;\n\t};\n\n\t// Recurse element node, looking for child text nodes to highlight, unless element\n\t// is childless, <script>, <style>, or already highlighted: <span class=\"hightlight\">\n\tconst highlightChildren = ( node:Element ):void => {\n\t\tif( node.nodeType === 1 && node.childNodes && !/(script|style)/i.test(node.tagName) && ( node.className !== 'highlight' || node.tagName !== 'SPAN' ) ){\n\t\t\tArray.from(node.childNodes).forEach(element => {\n\t\t\t\thighlightRecursive(element);\n\t\t\t});\n\t\t}\n\t};\n\n\n\tconst highlightRecursive = ( node:Node|Element ):number => {\n\n\t\tif( node.nodeType === 3 ){\n\t\t\treturn highlightText(node as Text);\n\t\t}\n\n\t\thighlightChildren(node as Element);\n\n\t\treturn 0;\n\t};\n\n\thighlightRecursive( element );\n};\n\n/**\n * removeHighlight fn copied from highlight v5 and\n * edited to remove with(), pass js strict mode, and use without jquery\n */\nexport const removeHighlight = (el:HTMLElement) => {\n\tvar elements = el.querySelectorAll(\"span.highlight\");\n\tArray.prototype.forEach.call(elements, function(el:HTMLElement){\n\t\tvar parent = el.parentNode as Node;\n\t\tparent.replaceChild(el.firstChild as Node, el);\n\t\tparent.normalize();\n\t});\n};\n","export const KEY_A\t\t\t\t= 65;\nexport const KEY_RETURN\t\t\t= 13;\nexport const KEY_ESC\t\t\t= 27;\nexport const KEY_LEFT\t\t\t= 37;\nexport const KEY_UP\t\t\t\t= 38;\nexport const KEY_RIGHT\t\t\t= 39;\nexport const KEY_DOWN\t\t\t= 40;\nexport const KEY_BACKSPACE\t\t= 8;\nexport const KEY_DELETE\t\t\t= 46;\nexport const KEY_TAB\t\t\t= 9;\n\nexport const IS_MAC      \t\t= typeof navigator === 'undefined' ? false : /Mac/.test(navigator.userAgent);\nexport const KEY_SHORTCUT\t\t= IS_MAC ? 'metaKey' : 'ctrlKey'; // ctrl key or apple key for ma\n","\nexport default {\n\toptions: [],\n\toptgroups: [],\n\n\tplugins: [],\n\tdelimiter: ',',\n\tsplitOn: null, // regexp or string for splitting up values from a paste command\n\tpersist: true,\n\tdiacritics: true,\n\tcreate: null,\n\tcreateOnBlur: false,\n\tcreateFilter: null,\n\thighlight: true,\n\topenOnFocus: true,\n\tshouldOpen: null,\n\tmaxOptions: 50,\n\tmaxItems: null,\n\thideSelected: null,\n\tduplicates: false,\n\taddPrecedence: false,\n\tselectOnTab: false,\n\tpreload: null,\n\tallowEmptyOption: false,\n\t//closeAfterSelect: false,\n\n\tloadThrottle: 300,\n\tloadingClass: 'loading',\n\n\tdataAttr: null, //'data-data',\n\toptgroupField: 'optgroup',\n\tvalueField: 'value',\n\tlabelField: 'text',\n\tdisabledField: 'disabled',\n\toptgroupLabelField: 'label',\n\toptgroupValueField: 'value',\n\tlockOptgroupOrder: false,\n\n\tsortField: '$order',\n\tsearchField: ['text'],\n\tsearchConjunction: 'and',\n\n\tmode: null,\n\twrapperClass: 'ts-wrapper',\n\tcontrolClass: 'ts-control',\n\tdropdownClass: 'ts-dropdown',\n\tdropdownContentClass: 'ts-dropdown-content',\n\titemClass: 'item',\n\toptionClass: 'option',\n\n\tdropdownParent: null,\n\tcontrolInput: '<input type=\"text\" autocomplete=\"off\" size=\"1\" />',\n\n\tcopyClassesToDropdown: false,\n\n\tplaceholder: null,\n\thidePlaceholder: null,\n\n\tshouldLoad: function(query:string):boolean{\n\t\treturn query.length > 0;\n\t},\n\n\t/*\n\tload                 : null, // function(query, callback) { ... }\n\tscore                : null, // function(search) { ... }\n\tonInitialize         : null, // function() { ... }\n\tonChange             : null, // function(value) { ... }\n\tonItemAdd            : null, // function(value, $item) { ... }\n\tonItemRemove         : null, // function(value) { ... }\n\tonClear              : null, // function() { ... }\n\tonOptionAdd          : null, // function(value, data) { ... }\n\tonOptionRemove       : null, // function(value) { ... }\n\tonOptionClear        : null, // function() { ... }\n\tonOptionGroupAdd     : null, // function(id, data) { ... }\n\tonOptionGroupRemove  : null, // function(id) { ... }\n\tonOptionGroupClear   : null, // function() { ... }\n\tonDropdownOpen       : null, // function(dropdown) { ... }\n\tonDropdownClose      : null, // function(dropdown) { ... }\n\tonType               : null, // function(str) { ... }\n\tonDelete             : null, // function(values) { ... }\n\t*/\n\n\trender: {\n\t\t/*\n\t\titem: null,\n\t\toptgroup: null,\n\t\toptgroup_header: null,\n\t\toption: null,\n\t\toption_create: null\n\t\t*/\n\t}\n};\n","\nimport TomSelect from './tom-select';\nimport { TomLoadCallback } from './types/index';\n\n\n/**\n * Converts a scalar to its best string representation\n * for hash keys and HTML attribute values.\n *\n * Transformations:\n *   'str'     -> 'str'\n *   null      -> ''\n *   undefined -> ''\n *   true      -> '1'\n *   false     -> '0'\n *   0         -> '0'\n *   1         -> '1'\n *\n */\nexport const hash_key = (value:undefined|null|boolean|string|number):string|null => {\n\tif (typeof value === 'undefined' || value === null) return null;\n\treturn get_hash(value);\n};\n\nexport const get_hash = (value:boolean|string|number):string => {\n\tif (typeof value === 'boolean') return value ? '1' : '0';\n\treturn value + '';\n};\n\n/**\n * Escapes a string for use within HTML.\n *\n */\nexport const escape_html = (str:string):string => {\n\treturn (str + '')\n\t\t.replace(/&/g, '&amp;')\n\t\t.replace(/</g, '&lt;')\n\t\t.replace(/>/g, '&gt;')\n\t\t.replace(/\"/g, '&quot;');\n};\n\n\n/**\n * Debounce the user provided load function\n *\n */\nexport const loadDebounce = (fn:(value:string,callback:TomLoadCallback) => void,delay:number) => {\n\tvar timeout: null|ReturnType<typeof setTimeout>;\n\treturn function(this:TomSelect, value:string,callback:TomLoadCallback) {\n\t\tvar self = this;\n\n\t\tif( timeout ){\n\t\t\tself.loading = Math.max(self.loading - 1, 0);\n\t\t\tclearTimeout(timeout);\n\t\t}\n\t\ttimeout = setTimeout(function() {\n\t\t\ttimeout = null;\n\t\t\tself.loadedSearches[value] = true;\n\t\t\tfn.call(self, value, callback);\n\n\t\t}, delay);\n\t};\n};\n\n\n/**\n * Debounce all fired events types listed in `types`\n * while executing the provided `fn`.\n *\n */\nexport const debounce_events = ( self:TomSelect, types:string[], fn:() => void ) => {\n\tvar type:string;\n\tvar trigger = self.trigger;\n\tvar event_args:{ [key: string]: any } = {};\n\n\t// override trigger method\n\tself.trigger = function(){\n\t\tvar type = arguments[0];\n\t\tif (types.indexOf(type) !== -1) {\n\t\t\tevent_args[type] = arguments;\n\t\t} else {\n\t\t\treturn trigger.apply(self, arguments);\n\t\t}\n\t};\n\n\t// invoke provided function\n\tfn.apply(self, []);\n\tself.trigger = trigger;\n\n\t// trigger queued events\n\tfor( type of types ){\n\t\tif( type in event_args ){\n\t\t\ttrigger.apply(self, event_args[type]);\n\t\t}\n\t}\n};\n\n\n/**\n * Determines the current selection within a text input control.\n * Returns an object containing:\n *   - start\n *   - length\n *\n */\nexport const getSelection = (input:HTMLInputElement):{ start: number; length: number } => {\n\treturn {\n\t\tstart\t: input.selectionStart || 0,\n\t\tlength\t: (input.selectionEnd||0) - (input.selectionStart||0),\n\t};\n};\n\n\n/**\n * Prevent default\n *\n */\nexport const preventDefault = (evt?:Event, stop:boolean=false):void => {\n\tif( evt ){\n\t\tevt.preventDefault();\n\t\tif( stop ){\n\t\t\tevt.stopPropagation();\n\t\t}\n\t}\n}\n\n\n/**\n * Add event helper\n *\n */\nexport const addEvent = (target:EventTarget, type:string, callback:EventListenerOrEventListenerObject, options?:object):void => {\n\ttarget.addEventListener(type,callback,options);\n};\n\n\n/**\n * Return true if the requested key is down\n * Will return false if more than one control character is pressed ( when [ctrl+shift+a] != [ctrl+a] )\n * The current evt may not always set ( eg calling advanceSelection() )\n *\n */\nexport const isKeyDown = ( key_name:keyof (KeyboardEvent|MouseEvent), evt?:KeyboardEvent|MouseEvent ) => {\n\n\tif( !evt ){\n\t\treturn false;\n\t}\n\n\tif( !evt[key_name] ){\n\t\treturn false;\n\t}\n\n\tvar count = (evt.altKey?1:0) + (evt.ctrlKey?1:0) + (evt.shiftKey?1:0) + (evt.metaKey?1:0);\n\n\tif( count === 1 ){\n\t\treturn true;\n\t}\n\n\treturn false;\n};\n\n\n/**\n * Get the id of an element\n * If the id attribute is not set, set the attribute with the given id\n *\n */\nexport const getId = (el:Element,id:string) => {\n\tconst existing_id = el.getAttribute('id');\n\tif( existing_id ){\n\t\treturn existing_id;\n\t}\n\n\tel.setAttribute('id',id);\n\treturn id;\n};\n\n\n/**\n * Returns a string with backslashes added before characters that need to be escaped.\n */\nexport const addSlashes = (str:string):string => {\n\treturn str.replace(/[\\\\\"']/g, '\\\\$&');\n};\n\n/**\n *\n */\nexport const append = ( parent:Element|DocumentFragment, node: string|Node|null|undefined ):void =>{\n\tif( node ) parent.append(node);\n};\n","import defaults from './defaults';\nimport { hash_key } from './utils';\nimport { TomOption, TomSettings, RecursivePartial } from './types/index';\nimport { iterate } from '@orchidjs/sifter/lib/utils';\nimport { TomInput } from './types/index';\n\n\nexport default function getSettings( input:TomInput, settings_user:RecursivePartial<TomSettings>):TomSettings{\n\tvar settings:TomSettings\t= Object.assign({}, defaults, settings_user);\n\n\tvar attr_data\t\t\t\t= settings.dataAttr;\n\tvar field_label\t\t\t\t= settings.labelField;\n\tvar field_value\t\t\t\t= settings.valueField;\n\tvar field_disabled\t\t\t= settings.disabledField;\n\tvar field_optgroup\t\t\t= settings.optgroupField;\n\tvar field_optgroup_label\t= settings.optgroupLabelField;\n\tvar field_optgroup_value\t= settings.optgroupValueField;\n\n\tvar tag_name\t\t\t\t= input.tagName.toLowerCase();\n\tvar placeholder\t\t\t\t= input.getAttribute('placeholder') || input.getAttribute('data-placeholder');\n\n\tif (!placeholder && !settings.allowEmptyOption) {\n\t\tlet option\t\t= input.querySelector('option[value=\"\"]');\n\t\tif( option ){\n\t\t\tplaceholder = option.textContent;\n\t\t}\n\n\t}\n\n\tvar settings_element:{\n\t\tplaceholder\t: null|string,\n\t\toptions\t\t: TomOption[],\n\t\toptgroups\t: TomOption[],\n\t\titems\t\t: string[],\n\t\tmaxItems\t: null|number,\n\t} = {\n\t\tplaceholder\t: placeholder,\n\t\toptions\t\t: [],\n\t\toptgroups\t: [],\n\t\titems\t\t: [],\n\t\tmaxItems\t: null,\n\t};\n\n\n\t/**\n\t * Initialize from a <select> element.\n\t *\n\t */\n\tvar init_select = () => {\n\t\tvar tagName;\n\t\tvar options = settings_element.options;\n\t\tvar optionsMap:{[key:string]:any} = {};\n\t\tvar group_count = 1;\n\n\t\tvar readData = (el:HTMLElement):TomOption => {\n\n\t\t\tvar data\t= Object.assign({},el.dataset); // get plain object from DOMStringMap\n\t\t\tvar json\t= attr_data && data[attr_data];\n\n\t\t\tif( typeof json === 'string' && json.length ){\n\t\t\t\tdata = Object.assign(data,JSON.parse(json));\n\t\t\t}\n\n\t\t\treturn data;\n\t\t};\n\n\t\tvar addOption = (option:HTMLOptionElement, group?:string) => {\n\n\t\t\tvar value = hash_key(option.value);\n\t\t\tif ( value == null ) return;\n\t\t\tif ( !value && !settings.allowEmptyOption) return;\n\n\t\t\t// if the option already exists, it's probably been\n\t\t\t// duplicated in another optgroup. in this case, push\n\t\t\t// the current group to the \"optgroup\" property on the\n\t\t\t// existing option so that it's rendered in both places.\n\t\t\tif (optionsMap.hasOwnProperty(value)) {\n\t\t\t\tif (group) {\n\t\t\t\t\tvar arr = optionsMap[value][field_optgroup];\n\t\t\t\t\tif (!arr) {\n\t\t\t\t\t\toptionsMap[value][field_optgroup] = group;\n\t\t\t\t\t} else if (!Array.isArray(arr)) {\n\t\t\t\t\t\toptionsMap[value][field_optgroup] = [arr, group];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tarr.push(group);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}else{\n\n\t\t\t\tvar option_data             = readData(option);\n\t\t\t\toption_data[field_label]    = option_data[field_label] || option.textContent;\n\t\t\t\toption_data[field_value]    = option_data[field_value] || value;\n\t\t\t\toption_data[field_disabled] = option_data[field_disabled] || option.disabled;\n\t\t\t\toption_data[field_optgroup] = option_data[field_optgroup] || group;\n\t\t\t\toption_data.$option\t\t\t= option;\n\n\t\t\t\toptionsMap[value] = option_data;\n\t\t\t\toptions.push(option_data);\n\t\t\t}\n\n\t\t\tif( option.selected ){\n\t\t\t\tsettings_element.items.push(value);\n\t\t\t}\n\t\t};\n\n\t\tvar addGroup = ( optgroup:HTMLOptGroupElement ) => {\n\t\t\tvar id:string, optgroup_data\n\n\t\t\toptgroup_data\t\t\t\t\t\t\t= readData(optgroup);\n\t\t\toptgroup_data[field_optgroup_label]\t\t= optgroup_data[field_optgroup_label] || optgroup.getAttribute('label') || '';\n\t\t\toptgroup_data[field_optgroup_value]\t\t= optgroup_data[field_optgroup_value] || group_count++;\n\t\t\toptgroup_data[field_disabled]\t\t\t= optgroup_data[field_disabled] || optgroup.disabled;\n\t\t\tsettings_element.optgroups.push(optgroup_data);\n\n\t\t\tid = optgroup_data[field_optgroup_value];\n\n\t\t\titerate(optgroup.children, (option)=>{\n\t\t\t\taddOption(option as HTMLOptionElement, id);\n\t\t\t});\n\n\t\t};\n\n\t\tsettings_element.maxItems = input.hasAttribute('multiple') ? null : 1;\n\n\t\titerate(input.children,(child)=>{\n\t\t\ttagName = child.tagName.toLowerCase();\n\t\t\tif (tagName === 'optgroup') {\n\t\t\t\taddGroup(child as HTMLOptGroupElement);\n\t\t\t} else if (tagName === 'option') {\n\t\t\t\taddOption(child as HTMLOptionElement);\n\t\t\t}\n\t\t});\n\n\t};\n\n\n\t/**\n\t * Initialize from a <input type=\"text\"> element.\n\t *\n\t */\n\tvar init_textbox = () => {\n\t\tconst data_raw = input.getAttribute(attr_data);\n\n\t\tif (!data_raw) {\n\t\t\tvar value = input.value.trim() || '';\n\t\t\tif (!settings.allowEmptyOption && !value.length) return;\n\t\t\tconst values = value.split(settings.delimiter);\n\n\t\t\titerate( values, (value) => {\n\t\t\t\tconst option:TomOption = {};\n\t\t\t\toption[field_label] = value;\n\t\t\t\toption[field_value] = value;\n\t\t\t\tsettings_element.options.push(option);\n\t\t\t});\n\t\t\tsettings_element.items = values;\n\t\t} else {\n\t\t\tsettings_element.options = JSON.parse(data_raw);\n\t\t\titerate( settings_element.options, (opt) => {\n\t\t\t\tsettings_element.items.push(opt[field_value]);\n\t\t\t});\n\t\t}\n\t};\n\n\n\tif (tag_name === 'select') {\n\t\tinit_select();\n\t} else {\n\t\tinit_textbox();\n\t}\n\n\treturn Object.assign( {}, defaults, settings_element, settings_user) as TomSettings;\n};\n","\nimport MicroEvent from './contrib/microevent';\nimport MicroPlugin from './contrib/microplugin';\nimport { Sifter, iterate } from '@orchidjs/sifter';\nimport { escape_regex } from '@orchidjs/unicode-variants';\nimport { TomInput, TomArgObject, TomOption, TomOptions, TomCreateFilter, TomCreateCallback, TomItem, TomSettings, TomTemplateNames, TomClearFilter, RecursivePartial } from './types/index';\nimport {highlight, removeHighlight} from './contrib/highlight';\nimport * as constants from './constants';\nimport getSettings from './getSettings';\nimport {\n\thash_key,\n\tget_hash,\n\tescape_html,\n\tdebounce_events,\n\tgetSelection,\n\tpreventDefault,\n\taddEvent,\n\tloadDebounce,\n\tisKeyDown,\n\tgetId,\n\taddSlashes,\n\tappend\n} from './utils';\n\nimport {\n\tgetDom,\n\tisHtmlString,\n\tescapeQuery,\n\ttriggerEvent,\n\tapplyCSS,\n\taddClasses,\n\tremoveClasses,\n\tparentMatch,\n\tgetTail,\n\tisEmptyObject,\n\tnodeIndex,\n\tsetAttr,\n\treplaceNode\n} from './vanilla';\n\nvar instance_i = 0;\n\nexport default class TomSelect extends MicroPlugin(MicroEvent){\n\n\tpublic control_input\t\t\t: HTMLInputElement;\n\tpublic wrapper\t\t\t\t\t: HTMLElement;\n\tpublic dropdown\t\t\t\t\t: HTMLElement;\n\tpublic control\t\t\t\t\t: HTMLElement;\n\tpublic dropdown_content\t\t\t: HTMLElement;\n\tpublic focus_node\t\t\t\t: HTMLElement;\n\n\tpublic order\t\t\t\t\t: number = 0;\n\tpublic settings\t\t\t\t\t: TomSettings;\n\tpublic input\t\t\t\t\t: TomInput;\n\tpublic tabIndex\t\t\t\t\t: number;\n\tpublic is_select_tag\t\t\t: boolean;\n\tpublic rtl\t\t\t\t\t\t: boolean;\n\tprivate inputId\t\t\t\t\t: string;\n\n\tprivate _destroy\t\t\t\t!: () => void;\n\tpublic sifter\t\t\t\t\t: Sifter;\n\n\n\tpublic isOpen\t\t\t\t\t: boolean = false;\n\tpublic isDisabled\t\t\t\t: boolean = false;\n\tpublic isRequired\t\t\t\t: boolean;\n\tpublic isInvalid\t\t\t\t: boolean = false; // @deprecated 1.8\n\tpublic isValid\t\t\t\t\t: boolean = true;\n\tpublic isLocked\t\t\t\t\t: boolean = false;\n\tpublic isFocused\t\t\t\t: boolean = false;\n\tpublic isInputHidden\t\t\t: boolean = false;\n\tpublic isSetup\t\t\t\t\t: boolean = false;\n\tpublic ignoreFocus\t\t\t\t: boolean = false;\n\tpublic ignoreHover\t\t\t\t: boolean = false;\n\tpublic hasOptions\t\t\t\t: boolean = false;\n\tpublic currentResults\t\t\t?: ReturnType<Sifter['search']>;\n\tpublic lastValue\t\t\t\t: string = '';\n\tpublic caretPos\t\t\t\t\t: number = 0;\n\tpublic loading\t\t\t\t\t: number = 0;\n\tpublic loadedSearches\t\t\t: { [key: string]: boolean } = {};\n\n\tpublic activeOption\t\t\t\t: null|HTMLElement = null;\n\tpublic activeItems\t\t\t\t: TomItem[] = [];\n\n\tpublic optgroups\t\t\t\t: TomOptions = {};\n\tpublic options\t\t\t\t\t: TomOptions = {};\n\tpublic userOptions\t\t\t\t: {[key:string]:boolean} = {};\n\tpublic items\t\t\t\t\t: string[] = [];\n\n\n\n\tconstructor( input_arg: string|TomInput, user_settings:RecursivePartial<TomSettings> ){\n\t\tsuper();\n\n\t\tinstance_i++;\n\n\t\tvar dir;\n\t\tvar input\t\t\t\t= getDom( input_arg ) as TomInput;\n\n\t\tif( input.tomselect ){\n\t\t\tthrow new Error('Tom Select already initialized on this element');\n\t\t}\n\n\n\t\tinput.tomselect\t\t\t= this;\n\n\n\t\t// detect rtl environment\n\t\tvar computedStyle\t\t= window.getComputedStyle && window.getComputedStyle(input, null);\n\t\tdir\t\t\t\t\t\t= computedStyle.getPropertyValue('direction');\n\n\t\t// setup default state\n\t\tconst settings\t\t\t= getSettings( input, user_settings );\n\t\tthis.settings\t\t\t= settings;\n\t\tthis.input\t\t\t\t= input;\n\t\tthis.tabIndex\t\t\t= input.tabIndex || 0;\n\t\tthis.is_select_tag\t\t= input.tagName.toLowerCase() === 'select';\n\t\tthis.rtl\t\t\t\t= /rtl/i.test(dir);\n\t\tthis.inputId\t\t\t= getId(input, 'tomselect-'+instance_i);\n\t\tthis.isRequired\t\t\t= input.required;\n\n\n\t\t// search system\n\t\tthis.sifter = new Sifter(this.options, {diacritics: settings.diacritics});\n\n\t\t// option-dependent defaults\n\t\tsettings.mode = settings.mode || (settings.maxItems === 1 ? 'single' : 'multi');\n\t\tif (typeof settings.hideSelected !== 'boolean') {\n\t\t\tsettings.hideSelected = settings.mode === 'multi';\n\t\t}\n\n\t\tif( typeof settings.hidePlaceholder !== 'boolean' ){\n\t\t\tsettings.hidePlaceholder = settings.mode !== 'multi';\n\t\t}\n\n\t\t// set up createFilter callback\n\t\tvar filter = settings.createFilter;\n\t\tif( typeof filter !== 'function' ){\n\n\t\t\tif( typeof filter === 'string' ){\n\t\t\t\tfilter = new RegExp(filter);\n\t\t\t}\n\n\t\t\tif( filter instanceof RegExp ){\n\t\t\t\tsettings.createFilter = (input) => (filter as RegExp).test(input);\n\t\t\t}else{\n\t\t\t\tsettings.createFilter = (value) => {\n\t\t\t\t\treturn this.settings.duplicates || !this.options[value];\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\n\t\tthis.initializePlugins(settings.plugins);\n\t\tthis.setupCallbacks();\n\t\tthis.setupTemplates();\n\n\n\t\t// Create all elements\n\t\tconst wrapper\t\t\t= getDom('<div>');\n\t\tconst control\t\t\t= getDom('<div>');\n\t\tconst dropdown\t\t\t= this._render('dropdown');\n\t\tconst dropdown_content\t= getDom(`<div role=\"listbox\" tabindex=\"-1\">`);\n\n\t\tconst classes\t\t\t= this.input.getAttribute('class') || '';\n\t\tconst inputMode\t\t\t= settings.mode;\n\n\t\tvar control_input: HTMLInputElement;\n\n\n\t\taddClasses( wrapper, settings.wrapperClass, classes, inputMode);\n\n\n\t\taddClasses(control,settings.controlClass);\n\t\tappend( wrapper, control );\n\n\n\t\taddClasses(dropdown, settings.dropdownClass, inputMode);\n\t\tif( settings.copyClassesToDropdown ){\n\t\t\taddClasses( dropdown, classes);\n\t\t}\n\n\n\t\taddClasses(dropdown_content, settings.dropdownContentClass);\n\t\tappend( dropdown, dropdown_content );\n\n\t\tgetDom( settings.dropdownParent || wrapper ).appendChild( dropdown );\n\n\n\t\t// default controlInput\n\t\tif( isHtmlString(settings.controlInput) ){\n\t\t\tcontrol_input\t\t= getDom(settings.controlInput ) as HTMLInputElement;\n\n\t\t\t// set attributes\n\t\t\tvar attrs = ['autocorrect','autocapitalize','autocomplete'];\n\t\t\titerate(attrs,(attr:string) => {\n\t\t\t\tif( input.getAttribute(attr) ){\n\t\t\t\t\tsetAttr(control_input,{[attr]:input.getAttribute(attr)});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tcontrol_input.tabIndex = -1;\n\t\t\tcontrol.appendChild( control_input );\n\t\t\tthis.focus_node\t\t= control_input;\n\n\t\t// dom element\n\t\t}else if( settings.controlInput ){\n\t\t\tcontrol_input\t\t= getDom( settings.controlInput ) as HTMLInputElement;\n\t\t\tthis.focus_node\t\t= control_input;\n\n\t\t}else{\n\t\t\tcontrol_input\t\t= getDom('<input/>') as HTMLInputElement;\n\t\t\tthis.focus_node\t\t= control;\n\t\t}\n\n\t\tthis.wrapper\t\t\t= wrapper;\n\t\tthis.dropdown\t\t\t= dropdown;\n\t\tthis.dropdown_content\t= dropdown_content;\n\t\tthis.control \t\t\t= control;\n\t\tthis.control_input\t\t= control_input;\n\n\t\tthis.setup();\n\t}\n\n\t/**\n\t * set up event bindings.\n\t *\n\t */\n\tsetup(){\n\n\t\tconst self = this;\n\t\tconst settings\t\t\t\t= self.settings;\n\t\tconst control_input\t\t\t= self.control_input;\n\t\tconst dropdown\t\t\t\t= self.dropdown;\n\t\tconst dropdown_content\t\t= self.dropdown_content;\n\t\tconst wrapper\t\t\t\t= self.wrapper;\n\t\tconst control\t\t\t\t= self.control;\n\t\tconst input\t\t\t\t\t= self.input;\n\t\tconst focus_node\t\t\t= self.focus_node;\n\t\tconst passive_event\t\t\t= { passive: true };\n\t\tconst listboxId\t\t\t\t= self.inputId +'-ts-dropdown';\n\n\n\t\tsetAttr(dropdown_content,{\n\t\t\tid: listboxId\n\t\t});\n\n\t\tsetAttr(focus_node,{\n\t\t\trole:'combobox',\n\t\t\t'aria-haspopup':'listbox',\n\t\t\t'aria-expanded':'false',\n\t\t\t'aria-controls':listboxId\n\t\t});\n\n\t\tconst control_id\t= getId(focus_node,self.inputId + '-ts-control');\n\t\tconst query\t\t\t= \"label[for='\"+escapeQuery(self.inputId)+\"']\";\n\t\tconst label\t\t\t= document.querySelector(query);\n\t\tconst label_click\t= self.focus.bind(self);\n\t\tif( label ){\n\t\t\taddEvent(label,'click', label_click );\n\t\t\tsetAttr(label,{for:control_id});\n\t\t\tconst label_id = getId(label,self.inputId+'-ts-label');\n\t\t\tsetAttr(focus_node,{'aria-labelledby':label_id});\n\t\t\tsetAttr(dropdown_content,{'aria-labelledby':label_id});\n\t\t}\n\n\t\twrapper.style.width = input.style.width;\n\n\t\tif (self.plugins.names.length) {\n\t\t\tconst classes_plugins = 'plugin-' + self.plugins.names.join(' plugin-');\n\t\t\taddClasses( [wrapper,dropdown], classes_plugins);\n\t\t}\n\n\t\tif ((settings.maxItems === null || settings.maxItems > 1) && self.is_select_tag ){\n\t\t\tsetAttr(input,{multiple:'multiple'});\n\t\t}\n\n\t\tif (settings.placeholder) {\n\t\t\tsetAttr(control_input,{placeholder:settings.placeholder});\n\t\t}\n\n\t\t// if splitOn was not passed in, construct it from the delimiter to allow pasting universally\n\t\tif (!settings.splitOn && settings.delimiter) {\n\t\t\tsettings.splitOn = new RegExp('\\\\s*' + escape_regex(settings.delimiter) + '+\\\\s*');\n\t\t}\n\n\t\t// debounce user defined load() if loadThrottle > 0\n\t\t// after initializePlugins() so plugins can create/modify user defined loaders\n\t\tif( settings.load && settings.loadThrottle ){\n\t\t\tsettings.load = loadDebounce(settings.load,settings.loadThrottle)\n\t\t}\n\n\t\tself.control_input.type\t= input.type;\n\n\t\taddEvent(dropdown,'mousemove', () => {\n\t\t\tself.ignoreHover = false;\n\t\t});\n\n\t\taddEvent(dropdown,'mouseenter', (e) => {\n\n\t\t\tvar target_match = parentMatch(e.target as HTMLElement, '[data-selectable]', dropdown);\n\t\t\tif( target_match ) self.onOptionHover( e as MouseEvent, target_match );\n\n\t\t}, {capture:true});\n\n\t\t// clicking on an option should select it\n\t\taddEvent(dropdown,'click',(evt) => {\n\t\t\tconst option = parentMatch(evt.target as HTMLElement, '[data-selectable]');\n\t\t\tif( option ){\n\t\t\t\tself.onOptionSelect( evt as MouseEvent, option );\n\t\t\t\tpreventDefault(evt,true);\n\t\t\t}\n\t\t});\n\n\t\taddEvent(control,'click', (evt) => {\n\n\t\t\tvar target_match = parentMatch( evt.target as HTMLElement, '[data-ts-item]', control);\n\t\t\tif( target_match && self.onItemSelect(evt as MouseEvent, target_match as TomItem) ){\n\t\t\t\tpreventDefault(evt,true);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// retain focus (see control_input mousedown)\n\t\t\tif( control_input.value != '' ){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tself.onClick();\n\t\t\tpreventDefault(evt,true);\n\t\t});\n\n\n\t\t// keydown on focus_node for arrow_down/arrow_up\n\t\taddEvent(focus_node,'keydown',\t\t(e) => self.onKeyDown(e as KeyboardEvent) );\n\n\t\t// keypress and input/keyup\n\t\taddEvent(control_input,'keypress',\t(e) => self.onKeyPress(e as KeyboardEvent) );\n\t\taddEvent(control_input,'input',\t\t(e) => self.onInput(e as KeyboardEvent) );\n\t\taddEvent(focus_node,'blur', \t\t(e) => self.onBlur(e as FocusEvent) );\n\t\taddEvent(focus_node,'focus',\t\t(e) => self.onFocus(e as MouseEvent) );\n\t\taddEvent(control_input,'paste',\t\t(e) => self.onPaste(e as MouseEvent) );\n\n\n\t\tconst doc_mousedown = (evt:Event) => {\n\n\t\t\t// blur if target is outside of this instance\n\t\t\t// dropdown is not always inside wrapper\n\t\t\tconst target = evt.composedPath()[0];\n\t\t\tif( !wrapper.contains(target as HTMLElement) && !dropdown.contains(target as HTMLElement) ){\n\t\t\t\tif (self.isFocused) {\n\t\t\t\t\tself.blur();\n\t\t\t\t}\n\t\t\t\tself.inputState();\n\t\t\t\treturn;\n\t\t\t}\n\n\n\t\t\t// retain focus by preventing native handling. if the\n\t\t\t// event target is the input it should not be modified.\n\t\t\t// otherwise, text selection within the input won't work.\n\t\t\t// Fixes bug #212 which is no covered by tests\n\t\t\tif( target == control_input && self.isOpen ){\n\t\t\t\tevt.stopPropagation();\n\n\t\t\t// clicking anywhere in the control should not blur the control_input (which would close the dropdown)\n\t\t\t}else{\n\t\t\t\tpreventDefault(evt,true);\n\t\t\t}\n\n\t\t};\n\n\t\tconst win_scroll = () => {\n\t\t\tif (self.isOpen) {\n\t\t\t\tself.positionDropdown();\n\t\t\t}\n\t\t};\n\n\n\t\taddEvent(document,'mousedown', doc_mousedown);\n\t\taddEvent(window,'scroll', win_scroll, passive_event);\n\t\taddEvent(window,'resize', win_scroll, passive_event);\n\n\t\tthis._destroy = () => {\n\t\t\tdocument.removeEventListener('mousedown',doc_mousedown);\n\t\t\twindow.removeEventListener('scroll',win_scroll);\n\t\t\twindow.removeEventListener('resize',win_scroll);\n\t\t\tif( label ) label.removeEventListener('click',label_click);\n\t\t};\n\n\t\t// store original html and tab index so that they can be\n\t\t// restored when the destroy() method is called.\n\t\tthis.revertSettings = {\n\t\t\tinnerHTML : input.innerHTML,\n\t\t\ttabIndex : input.tabIndex\n\t\t};\n\n\n\t\tinput.tabIndex = -1;\n\t\tinput.insertAdjacentElement('afterend', self.wrapper);\n\n\t\tself.sync(false);\n\t\tsettings.items = [];\n\t\tdelete settings.optgroups;\n\t\tdelete settings.options;\n\n\t\taddEvent(input,'invalid', () => {\n\t\t\tif( self.isValid ){\n\t\t\t\tself.isValid = false;\n\t\t\t\tself.isInvalid = true;\n\t\t\t\tself.refreshState();\n\t\t\t}\n\t\t});\n\n\t\tself.updateOriginalInput();\n\t\tself.refreshItems();\n\t\tself.close(false);\n\t\tself.inputState();\n\t\tself.isSetup = true;\n\n\t\tif( input.disabled ){\n\t\t\tself.disable();\n\t\t}else{\n\t\t\tself.enable(); //sets tabIndex\n\t\t}\n\n\t\tself.on('change', this.onChange);\n\n\t\taddClasses(input,'tomselected','ts-hidden-accessible');\n\t\tself.trigger('initialize');\n\n\t\t// preload options\n\t\tif (settings.preload === true) {\n\t\t\tself.preload();\n\t\t}\n\n\t}\n\n\n\t/**\n\t * Register options and optgroups\n\t *\n\t */\n\tsetupOptions(options:TomOption[] = [], optgroups:TomOption[] = []){\n\n\t\t// build options table\n\t\tthis.addOptions(options);\n\n\n\t\t// build optgroup table\n\t\titerate( optgroups, (optgroup:TomOption) => {\n\t\t\tthis.registerOptionGroup(optgroup);\n\t\t});\n\t}\n\n\t/**\n\t * Sets up default rendering functions.\n\t */\n\tsetupTemplates() {\n\t\tvar self = this;\n\t\tvar field_label = self.settings.labelField;\n\t\tvar field_optgroup = self.settings.optgroupLabelField;\n\n\t\tvar templates = {\n\t\t\t'optgroup': (data:TomOption) => {\n\t\t\t\tlet optgroup = document.createElement('div');\n\t\t\t\toptgroup.className = 'optgroup';\n\t\t\t\toptgroup.appendChild(data.options);\n\t\t\t\treturn optgroup;\n\n\t\t\t},\n\t\t\t'optgroup_header': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div class=\"optgroup-header\">' + escape(data[field_optgroup]) + '</div>';\n\t\t\t},\n\t\t\t'option': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div>' + escape(data[field_label]) + '</div>';\n\t\t\t},\n\t\t\t'item': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div>' + escape(data[field_label]) + '</div>';\n\t\t\t},\n\t\t\t'option_create': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div class=\"create\">Add <strong>' + escape(data.input) + '</strong>&hellip;</div>';\n\t\t\t},\n\t\t\t'no_results':() => {\n\t\t\t\treturn '<div class=\"no-results\">No results found</div>';\n\t\t\t},\n\t\t\t'loading':() => {\n\t\t\t\treturn '<div class=\"spinner\"></div>';\n\t\t\t},\n\t\t\t'not_loading':() => {},\n\t\t\t'dropdown':() => {\n\t\t\t\treturn '<div></div>';\n\t\t\t}\n\t\t};\n\n\n\t\tself.settings.render = Object.assign({}, templates, self.settings.render);\n\t}\n\n\t/**\n\t * Maps fired events to callbacks provided\n\t * in the settings used when creating the control.\n\t */\n\tsetupCallbacks() {\n\t\tvar key, fn;\n\t\tvar callbacks:{[key:string]:string} = {\n\t\t\t'initialize'      : 'onInitialize',\n\t\t\t'change'          : 'onChange',\n\t\t\t'item_add'        : 'onItemAdd',\n\t\t\t'item_remove'     : 'onItemRemove',\n\t\t\t'item_select'     : 'onItemSelect',\n\t\t\t'clear'           : 'onClear',\n\t\t\t'option_add'      : 'onOptionAdd',\n\t\t\t'option_remove'   : 'onOptionRemove',\n\t\t\t'option_clear'    : 'onOptionClear',\n\t\t\t'optgroup_add'    : 'onOptionGroupAdd',\n\t\t\t'optgroup_remove' : 'onOptionGroupRemove',\n\t\t\t'optgroup_clear'  : 'onOptionGroupClear',\n\t\t\t'dropdown_open'   : 'onDropdownOpen',\n\t\t\t'dropdown_close'  : 'onDropdownClose',\n\t\t\t'type'            : 'onType',\n\t\t\t'load'            : 'onLoad',\n\t\t\t'focus'           : 'onFocus',\n\t\t\t'blur'            : 'onBlur'\n\t\t};\n\n\t\tfor (key in callbacks) {\n\n\t\t\tfn = this.settings[callbacks[key] as (keyof TomSettings)];\n\t\t\tif (fn) this.on(key, fn);\n\n\t\t}\n\t}\n\n\t/**\n\t * Sync the Tom Select instance with the original input or select\n\t *\n\t */\n\tsync(get_settings:boolean=true):void{\n\t\tconst self\t\t= this;\n\t\tconst settings\t= get_settings ? getSettings( self.input, {delimiter:self.settings.delimiter} as RecursivePartial<TomSettings> ) : self.settings;\n\n\t\tself.setupOptions(settings.options,settings.optgroups);\n\n\t\tself.setValue(settings.items||[],true); // silent prevents recursion\n\n\t\tself.lastQuery = null; // so updated options will be displayed in dropdown\n\t}\n\n\t/**\n\t * Triggered when the main control element\n\t * has a click event.\n\t *\n\t */\n\tonClick():void {\n\t\tvar self = this;\n\n\t\tif( self.activeItems.length > 0 ){\n\t\t\tself.clearActiveItems();\n\t\t\tself.focus();\n\t\t\treturn;\n\t\t}\n\n\t\tif( self.isFocused && self.isOpen ){\n\t\t\tself.blur();\n\t\t} else {\n\t\t\tself.focus();\n\t\t}\n\t}\n\n\t/**\n\t * @deprecated v1.7\n\t *\n\t */\n\tonMouseDown():void {}\n\n\t/**\n\t * Triggered when the value of the control has been changed.\n\t * This should propagate the event to the original DOM\n\t * input / select element.\n\t */\n\tonChange() {\n\t\ttriggerEvent(this.input, 'input');\n\t\ttriggerEvent(this.input, 'change');\n\t}\n\n\t/**\n\t * Triggered on <input> paste.\n\t *\n\t */\n\tonPaste(e:MouseEvent|KeyboardEvent):void {\n\t\tvar self = this;\n\n\t\tif( self.isInputHidden || self.isLocked ){\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\n\t\t// If a regex or string is included, this will split the pasted\n\t\t// input and create Items for each separate value\n\t\tif( !self.settings.splitOn ){\n\t\t\treturn;\n\t\t}\n\n\t\t// Wait for pasted text to be recognized in value\n\t\tsetTimeout(() => {\n\t\t\tvar pastedText = self.inputValue();\n\t\t\tif( !pastedText.match(self.settings.splitOn)){\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tvar splitInput = pastedText.trim().split(self.settings.splitOn);\n\t\t\titerate( splitInput, (piece:string) => {\n\n\t\t\t\tconst hash = hash_key(piece);\n\t\t\t\tif( hash ){\n\t\t\t\t\tif( this.options[piece] ){\n\t\t\t\t\t\tself.addItem(piece);\n\t\t\t\t\t}else{\n\t\t\t\t\t\tself.createItem(piece);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}, 0);\n\n\t}\n\n\t/**\n\t * Triggered on <input> keypress.\n\t *\n\t */\n\tonKeyPress(e:KeyboardEvent):void {\n\t\tvar self = this;\n\t\tif(self.isLocked){\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\t\tvar character = String.fromCharCode(e.keyCode || e.which);\n\t\tif (self.settings.create && self.settings.mode === 'multi' && character === self.settings.delimiter) {\n\t\t\tself.createItem();\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\t}\n\n\t/**\n\t * Triggered on <input> keydown.\n\t *\n\t */\n\tonKeyDown(e:KeyboardEvent):void {\n\t\tvar self = this;\n\n\t\tself.ignoreHover = true;\n\n\t\tif (self.isLocked) {\n\t\t\tif (e.keyCode !== constants.KEY_TAB) {\n\t\t\t\tpreventDefault(e);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (e.keyCode) {\n\n\t\t\t// ctrl+A: select all\n\t\t\tcase constants.KEY_A:\n\t\t\t\tif( isKeyDown(constants.KEY_SHORTCUT,e) ){\n\t\t\t\t\tif( self.control_input.value == '' ){\n\t\t\t\t\t\tpreventDefault(e);\n\t\t\t\t\t\tself.selectAll();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\t// esc: close dropdown\n\t\t\tcase constants.KEY_ESC:\n\t\t\t\tif (self.isOpen) {\n\t\t\t\t\tpreventDefault(e,true);\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\t\t\t\tself.clearActiveItems();\n\t\t\t\treturn;\n\n\t\t\t// down: open dropdown or move selection down\n\t\t\tcase constants.KEY_DOWN:\n\t\t\t\tif (!self.isOpen && self.hasOptions) {\n\t\t\t\t\tself.open();\n\t\t\t\t} else if (self.activeOption) {\n\t\t\t\t\tlet next = self.getAdjacent(self.activeOption, 1);\n\t\t\t\t\tif (next) self.setActiveOption(next);\n\t\t\t\t}\n\t\t\t\tpreventDefault(e);\n\t\t\t\treturn;\n\n\t\t\t// up: move selection up\n\t\t\tcase constants.KEY_UP:\n\t\t\t\tif (self.activeOption) {\n\t\t\t\t\tlet prev = self.getAdjacent(self.activeOption, -1);\n\t\t\t\t\tif (prev) self.setActiveOption(prev);\n\t\t\t\t}\n\t\t\t\tpreventDefault(e);\n\t\t\t\treturn;\n\n\t\t\t// return: select active option\n\t\t\tcase constants.KEY_RETURN:\n\t\t\t\tif( self.canSelect(self.activeOption) ){\n\t\t\t\t\tself.onOptionSelect(e,self.activeOption!);\n\t\t\t\t\tpreventDefault(e);\n\n\t\t\t\t// if the option_create=null, the dropdown might be closed\n\t\t\t\t}else if (self.settings.create && self.createItem()) {\n\t\t\t\t\tpreventDefault(e);\n\n\t\t\t\t// don't submit form when searching for a value\n\t\t\t\t}else if( document.activeElement == self.control_input && self.isOpen ){\n\t\t\t\t\tpreventDefault(e);\n\t\t\t\t}\n\n\t\t\t\treturn;\n\n\t\t\t// left: modifiy item selection to the left\n\t\t\tcase constants.KEY_LEFT:\n\t\t\t\tself.advanceSelection(-1, e);\n\t\t\t\treturn;\n\n\t\t\t// right: modifiy item selection to the right\n\t\t\tcase constants.KEY_RIGHT:\n\t\t\t\tself.advanceSelection(1, e);\n\t\t\t\treturn;\n\n\t\t\t// tab: select active option and/or create item\n\t\t\tcase constants.KEY_TAB:\n\n\t\t\t\tif( self.settings.selectOnTab ){\n\t\t\t\t\tif( self.canSelect(self.activeOption) ){\n\t\t\t\t\t\tself.onOptionSelect(e,self.activeOption!);\n\n\t\t\t\t\t\t// prevent default [tab] behaviour of jump to the next field\n\t\t\t\t\t\t// if select isFull, then the dropdown won't be open and [tab] will work normally\n\t\t\t\t\t\tpreventDefault(e);\n\t\t\t\t\t}\n\t\t\t\t\tif (self.settings.create && self.createItem()) {\n\t\t\t\t\t\tpreventDefault(e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn;\n\n\t\t\t// delete|backspace: delete items\n\t\t\tcase constants.KEY_BACKSPACE:\n\t\t\tcase constants.KEY_DELETE:\n\t\t\t\tself.deleteSelection(e);\n\t\t\t\treturn;\n\t\t}\n\n\t\t// don't enter text in the control_input when active items are selected\n\t\tif( self.isInputHidden && !isKeyDown(constants.KEY_SHORTCUT,e) ){\n\t\t\tpreventDefault(e);\n\t\t}\n\t}\n\n\t/**\n\t * Triggered on <input> keyup.\n\t *\n\t */\n\tonInput(e:MouseEvent|KeyboardEvent):void {\n\t\tvar self = this;\n\n\t\tif( self.isLocked ){\n\t\t\treturn;\n\t\t}\n\n\t\tvar value = self.inputValue();\n\t\tif (self.lastValue !== value) {\n\t\t\tself.lastValue = value;\n\n\t\t\tif( self.settings.shouldLoad.call(self,value) ){\n\t\t\t\tself.load(value);\n\t\t\t}\n\n\t\t\tself.refreshOptions();\n\t\t\tself.trigger('type', value);\n\t\t}\n\t}\n\n\t/**\n\t * Triggered when the user rolls over\n\t * an option in the autocomplete dropdown menu.\n\t *\n\t */\n\tonOptionHover( evt:MouseEvent|KeyboardEvent, option:HTMLElement ):void{\n\t\tif( this.ignoreHover ) return;\n\t\tthis.setActiveOption(option, false);\n\t}\n\n\t/**\n\t * Triggered on <input> focus.\n\t *\n\t */\n\tonFocus(e?:MouseEvent|KeyboardEvent):void {\n\t\tvar self = this;\n\t\tvar wasFocused = self.isFocused;\n\n\t\tif (self.isDisabled) {\n\t\t\tself.blur();\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\n\t\tif (self.ignoreFocus) return;\n\t\tself.isFocused = true;\n\t\tif( self.settings.preload === 'focus' ) self.preload();\n\n\t\tif (!wasFocused) self.trigger('focus');\n\n\t\tif (!self.activeItems.length) {\n\t\t\tself.showInput();\n\t\t\tself.refreshOptions(!!self.settings.openOnFocus);\n\t\t}\n\n\t\tself.refreshState();\n\t}\n\n\t/**\n\t * Triggered on <input> blur.\n\t *\n\t */\n\tonBlur(e?:FocusEvent):void {\n\n\t\tif( document.hasFocus() === false ) return;\n\n\t\tvar self = this;\n\t\tif (!self.isFocused) return;\n\t\tself.isFocused = false;\n\t\tself.ignoreFocus = false;\n\n\t\tvar deactivate = () => {\n\t\t\tself.close();\n\t\t\tself.setActiveItem();\n\t\t\tself.setCaret(self.items.length);\n\t\t\tself.trigger('blur');\n\t\t};\n\n\t\tif (self.settings.create && self.settings.createOnBlur) {\n\t\t\tself.createItem(null, deactivate);\n\t\t} else {\n\t\t\tdeactivate();\n\t\t}\n\t}\n\n\n\t/**\n\t * Triggered when the user clicks on an option\n\t * in the autocomplete dropdown menu.\n\t *\n\t */\n\tonOptionSelect( evt:MouseEvent|KeyboardEvent, option:HTMLElement ){\n\t\tvar value, self = this;\n\n\n\t\t// should not be possible to trigger a option under a disabled optgroup\n\t\tif( option.parentElement && option.parentElement.matches('[data-disabled]') ){\n\t\t\treturn;\n\t\t}\n\n\n\t\tif( option.classList.contains('create') ){\n\t\t\tself.createItem(null, () => {\n\t\t\t\tif (self.settings.closeAfterSelect) {\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tvalue = option.dataset.value;\n\t\t\tif (typeof value !== 'undefined') {\n\t\t\t\tself.lastQuery = null;\n\t\t\t\tself.addItem(value);\n\t\t\t\tif (self.settings.closeAfterSelect) {\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\n\t\t\t\tif( !self.settings.hideSelected && evt.type && /click/.test(evt.type) ){\n\t\t\t\t\tself.setActiveOption(option);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Return true if the given option can be selected\n\t *\n\t */\n\tcanSelect(option:HTMLElement|null):boolean{\n\n\t\tif( this.isOpen && option && this.dropdown_content.contains(option) ) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Triggered when the user clicks on an item\n\t * that has been selected.\n\t *\n\t */\n\tonItemSelect( evt?:MouseEvent, item?:TomItem ):boolean{\n\t\tvar self = this;\n\n\t\tif( !self.isLocked && self.settings.mode === 'multi' ){\n\t\t\tpreventDefault(evt);\n\t\t\tself.setActiveItem(item, evt);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Determines whether or not to invoke\n\t * the user-provided option provider / loader\n\t *\n\t * Note, there is a subtle difference between\n\t * this.canLoad() and this.settings.shouldLoad();\n\t *\n\t *\t- settings.shouldLoad() is a user-input validator.\n\t *\tWhen false is returned, the not_loading template\n\t *\twill be added to the dropdown\n\t *\n\t *\t- canLoad() is lower level validator that checks\n\t * \tthe Tom Select instance. There is no inherent user\n\t *\tfeedback when canLoad returns false\n\t *\n\t */\n\tcanLoad(value:string):boolean{\n\n\t\tif( !this.settings.load ) return false;\n\t\tif( this.loadedSearches.hasOwnProperty(value) ) return false;\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Invokes the user-provided option provider / loader.\n\t *\n\t */\n\tload(value:string):void {\n\t\tconst self = this;\n\n\t\tif( !self.canLoad(value) ) return;\n\n\t\taddClasses(self.wrapper,self.settings.loadingClass);\n\t\tself.loading++;\n\n\t\tconst callback = self.loadCallback.bind(self);\n\t\tself.settings.load.call(self, value, callback);\n\t}\n\n\t/**\n\t * Invoked by the user-provided option provider\n\t *\n\t */\n\tloadCallback( options:TomOption[], optgroups:TomOption[] ):void{\n\t\tconst self = this;\n\t\tself.loading = Math.max(self.loading - 1, 0);\n\t\tself.lastQuery = null;\n\n\t\tself.clearActiveOption(); // when new results load, focus should be on first option\n\t\tself.setupOptions(options,optgroups);\n\n\t\tself.refreshOptions(self.isFocused && !self.isInputHidden);\n\n\t\tif (!self.loading) {\n\t\t\tremoveClasses(self.wrapper,self.settings.loadingClass);\n\t\t}\n\n\t\tself.trigger('load', options, optgroups);\n\t}\n\n\tpreload():void{\n\t\tvar classList = this.wrapper.classList;\n\t\tif( classList.contains('preloaded') ) return;\n\t\tclassList.add('preloaded');\n\t\tthis.load('');\n\t}\n\n\n\t/**\n\t * Sets the input field of the control to the specified value.\n\t *\n\t */\n\tsetTextboxValue(value:string = '') {\n\t\tvar input = this.control_input;\n\t\tvar changed = input.value !== value;\n\t\tif (changed) {\n\t\t\tinput.value = value;\n\t\t\ttriggerEvent(input,'update');\n\t\t\tthis.lastValue = value;\n\t\t}\n\t}\n\n\t/**\n\t * Returns the value of the control. If multiple items\n\t * can be selected (e.g. <select multiple>), this returns\n\t * an array. If only one item can be selected, this\n\t * returns a string.\n\t *\n\t */\n\tgetValue():string|string[] {\n\n\t\tif( this.is_select_tag && this.input.hasAttribute('multiple')) {\n\t\t\treturn this.items;\n\t\t}\n\n\t\treturn this.items.join(this.settings.delimiter);\n\t}\n\n\t/**\n\t * Resets the selected items to the given value.\n\t *\n\t */\n\tsetValue( value:string|string[], silent?:boolean ):void{\n\t\tvar events = silent ? [] : ['change'];\n\n\t\tdebounce_events(this, events,() => {\n\t\t\tthis.clear(silent);\n\t\t\tthis.addItems(value, silent);\n\t\t});\n\t}\n\n\n\t/**\n\t * Resets the number of max items to the given value\n\t *\n\t */\n\tsetMaxItems(value:null|number){\n\t\tif(value === 0) value = null; //reset to unlimited items.\n\t\tthis.settings.maxItems = value;\n\t\tthis.refreshState();\n\t}\n\n\t/**\n\t * Sets the selected item.\n\t *\n\t */\n\tsetActiveItem( item?:TomItem, e?:MouseEvent|KeyboardEvent ){\n\t\tvar self = this;\n\t\tvar eventName;\n\t\tvar i, begin, end, swap;\n\t\tvar last;\n\n\t\tif (self.settings.mode === 'single') return;\n\n\t\t// clear the active selection\n\t\tif( !item ){\n\t\t\tself.clearActiveItems();\n\t\t\tif (self.isFocused) {\n\t\t\t\tself.showInput();\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// modify selection\n\t\teventName = e && e.type.toLowerCase();\n\n\t\tif (eventName === 'click' && isKeyDown('shiftKey',e) && self.activeItems.length) {\n\t\t\tlast\t= self.getLastActive();\n\t\t\tbegin\t= Array.prototype.indexOf.call(self.control.children, last);\n\t\t\tend\t\t= Array.prototype.indexOf.call(self.control.children, item);\n\n\t\t\tif (begin > end) {\n\t\t\t\tswap  = begin;\n\t\t\t\tbegin = end;\n\t\t\t\tend   = swap;\n\t\t\t}\n\t\t\tfor (i = begin; i <= end; i++) {\n\t\t\t\titem = self.control.children[i] as TomItem;\n\t\t\t\tif (self.activeItems.indexOf(item) === -1) {\n\t\t\t\t\tself.setActiveItemClass(item);\n\t\t\t\t}\n\t\t\t}\n\t\t\tpreventDefault(e);\n\t\t} else if ((eventName === 'click' && isKeyDown(constants.KEY_SHORTCUT,e) ) || (eventName === 'keydown' && isKeyDown('shiftKey',e))) {\n\t\t\tif( item.classList.contains('active') ){\n\t\t\t\tself.removeActiveItem( item );\n\t\t\t} else {\n\t\t\t\tself.setActiveItemClass(item);\n\t\t\t}\n\t\t} else {\n\t\t\tself.clearActiveItems();\n\t\t\tself.setActiveItemClass(item);\n\t\t}\n\n\t\t// ensure control has focus\n\t\tself.hideInput();\n\t\tif (!self.isFocused) {\n\t\t\tself.focus();\n\t\t}\n\t}\n\n\t/**\n\t * Set the active and last-active classes\n\t *\n\t */\n\tsetActiveItemClass( item:TomItem ){\n\t\tconst self = this;\n\t\tconst last_active = self.control.querySelector('.last-active');\n\t\tif( last_active ) removeClasses(last_active as HTMLElement,'last-active');\n\n\t\taddClasses(item,'active last-active');\n\t\tself.trigger('item_select', item);\n\t\tif( self.activeItems.indexOf(item) == -1 ){\n\t\t\tself.activeItems.push( item );\n\t\t}\n\t}\n\n\t/**\n\t * Remove active item\n\t *\n\t */\n\tremoveActiveItem( item:TomItem ){\n\t\tvar idx = this.activeItems.indexOf(item);\n\t\tthis.activeItems.splice(idx, 1);\n\t\tremoveClasses(item,'active');\n\t}\n\n\t/**\n\t * Clears all the active items\n\t *\n\t */\n\tclearActiveItems(){\n\t\tremoveClasses(this.activeItems,'active');\n\t\tthis.activeItems = [];\n\t}\n\n\t/**\n\t * Sets the selected item in the dropdown menu\n\t * of available options.\n\t *\n\t */\n\tsetActiveOption( option:null|HTMLElement,scroll:boolean=true ):void{\n\n\t\tif( option === this.activeOption ){\n\t\t\treturn;\n\t\t}\n\n\t\tthis.clearActiveOption();\n\t\tif( !option ) return;\n\n\t\tthis.activeOption = option;\n\t\tsetAttr(this.focus_node,{'aria-activedescendant':option.getAttribute('id')});\n\t\tsetAttr(option,{'aria-selected':'true'});\n\t\taddClasses(option,'active');\n\t\tif( scroll ) this.scrollToOption(option);\n\t}\n\n\t/**\n\t * Sets the dropdown_content scrollTop to display the option\n\t *\n\t */\n\tscrollToOption( option:null|HTMLElement, behavior?:string ):void{\n\n\t\tif( !option ) return;\n\n\t\tconst content\t\t= this.dropdown_content;\n\t\tconst height_menu\t= content.clientHeight;\n\t\tconst scrollTop\t\t= content.scrollTop || 0;\n\t\tconst height_item\t= option.offsetHeight;\n\t\tconst y\t\t\t\t= option.getBoundingClientRect().top - content.getBoundingClientRect().top + scrollTop;\n\n\t\tif (y + height_item > height_menu + scrollTop) {\n\t\t\tthis.scroll(y - height_menu + height_item, behavior);\n\n\t\t} else if (y < scrollTop) {\n\t\t\tthis.scroll(y, behavior);\n\t\t}\n\t}\n\n\t/**\n\t * Scroll the dropdown to the given position\n\t *\n\t */\n\tscroll( scrollTop:number, behavior?:string ):void{\n\t\tconst content = this.dropdown_content;\n\t\tif( behavior ){\n\t\t\tcontent.style.scrollBehavior = behavior;\n\t\t}\n\t\tcontent.scrollTop = scrollTop;\n\t\tcontent.style.scrollBehavior = '';\n\t}\n\n\t/**\n\t * Clears the active option\n\t *\n\t */\n\tclearActiveOption(){\n\t\tif( this.activeOption ){\n\t\t\tremoveClasses(this.activeOption,'active');\n\t\t\tsetAttr(this.activeOption,{'aria-selected':null});\n\t\t}\n\t\tthis.activeOption = null;\n\t\tsetAttr(this.focus_node,{'aria-activedescendant':null});\n\t}\n\n\n\t/**\n\t * Selects all items (CTRL + A).\n\t */\n\tselectAll() {\n\t\tconst self = this;\n\n\t\tif (self.settings.mode === 'single') return;\n\n\t\tconst activeItems = self.controlChildren();\n\n\t\tif( !activeItems.length ) return;\n\n\t\tself.hideInput();\n\t\tself.close();\n\n\t\tself.activeItems = activeItems;\n\t\titerate( activeItems, (item:TomItem) => {\n\t\t\tself.setActiveItemClass(item);\n\t\t});\n\n\t}\n\n\t/**\n\t * Determines if the control_input should be in a hidden or visible state\n\t *\n\t */\n\tinputState(){\n\t\tvar self = this;\n\n\t\tif( !self.control.contains(self.control_input) ) return;\n\n\t\tsetAttr(self.control_input,{placeholder:self.settings.placeholder});\n\n\t\tif( self.activeItems.length > 0 || (!self.isFocused && self.settings.hidePlaceholder && self.items.length > 0) ){\n\t\t\tself.setTextboxValue();\n\t\t\tself.isInputHidden = true;\n\n\t\t}else{\n\n\t\t\tif( self.settings.hidePlaceholder && self.items.length > 0 ){\n\t\t\t\tsetAttr(self.control_input,{placeholder:''});\n\t\t\t}\n\t\t\tself.isInputHidden = false;\n\t\t}\n\n\t\tself.wrapper.classList.toggle('input-hidden', self.isInputHidden );\n\t}\n\n\t/**\n\t * Hides the input element out of view, while\n\t * retaining its focus.\n\t * @deprecated 1.3\n\t */\n\thideInput() {\n\t\tthis.inputState();\n\t}\n\n\t/**\n\t * Restores input visibility.\n\t * @deprecated 1.3\n\t */\n\tshowInput() {\n\t\tthis.inputState();\n\t}\n\n\t/**\n\t * Get the input value\n\t */\n\tinputValue(){\n\t\treturn this.control_input.value.trim();\n\t}\n\n\t/**\n\t * Gives the control focus.\n\t */\n\tfocus() {\n\t\tvar self = this;\n\t\tif (self.isDisabled) return;\n\n\t\tself.ignoreFocus = true;\n\n\t\tif( self.control_input.offsetWidth ){\n\t\t\tself.control_input.focus();\n\t\t}else{\n\t\t\tself.focus_node.focus();\n\t\t}\n\n\t\tsetTimeout(() => {\n\t\t\tself.ignoreFocus = false;\n\t\t\tself.onFocus();\n\t\t}, 0);\n\t}\n\n\t/**\n\t * Forces the control out of focus.\n\t *\n\t */\n\tblur():void {\n\t\tthis.focus_node.blur();\n\t\tthis.onBlur();\n\t}\n\n\t/**\n\t * Returns a function that scores an object\n\t * to show how good of a match it is to the\n\t * provided query.\n\t *\n\t * @return {function}\n\t */\n\tgetScoreFunction(query:string) {\n\t\treturn this.sifter.getScoreFunction(query, this.getSearchOptions());\n\t}\n\n\t/**\n\t * Returns search options for sifter (the system\n\t * for scoring and sorting results).\n\t *\n\t * @see https://github.com/orchidjs/sifter.js\n\t * @return {object}\n\t */\n\tgetSearchOptions() {\n\t\tvar settings = this.settings;\n\t\tvar sort = settings.sortField;\n\t\tif (typeof settings.sortField === 'string') {\n\t\t\tsort = [{field: settings.sortField}];\n\t\t}\n\n\t\treturn {\n\t\t\tfields      : settings.searchField,\n\t\t\tconjunction : settings.searchConjunction,\n\t\t\tsort        : sort,\n\t\t\tnesting     : settings.nesting\n\t\t};\n\t}\n\n\t/**\n\t * Searches through available options and returns\n\t * a sorted array of matches.\n\t *\n\t */\n\tsearch(query:string) : ReturnType<Sifter['search']>{\n\t\tvar result, calculateScore;\n\t\tvar self     = this;\n\t\tvar options  = this.getSearchOptions();\n\n\t\t// validate user-provided result scoring function\n\t\tif ( self.settings.score ){\n\t\t\tcalculateScore = self.settings.score.call(self,query);\n\t\t\tif (typeof calculateScore !== 'function') {\n\t\t\t\tthrow new Error('Tom Select \"score\" setting must be a function that returns a function');\n\t\t\t}\n\t\t}\n\n\t\t// perform search\n\t\tif (query !== self.lastQuery) {\n\t\t\tself.lastQuery\t\t\t= query;\n\t\t\tresult\t\t\t\t\t= self.sifter.search(query, Object.assign(options, {score: calculateScore}));\n\t\t\tself.currentResults\t\t= result;\n\t\t} else {\n\t\t\tresult\t\t\t\t\t= Object.assign( {}, self.currentResults);\n\t\t}\n\n\t\t// filter out selected items\n\t\tif( self.settings.hideSelected ){\n\t\t\tresult.items = result.items.filter((item) => {\n\t\t\t\tlet hashed = hash_key(item.id);\n\t\t\t\treturn !(hashed && self.items.indexOf(hashed) !== -1 );\n\t\t\t});\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Refreshes the list of available options shown\n\t * in the autocomplete dropdown menu.\n\t *\n\t */\n\trefreshOptions( triggerDropdown:boolean = true ){\n\t\tvar i, j, k, n, optgroup, optgroups, html:DocumentFragment, has_create_option, active_group;\n\t\tvar create;\n\t\tconst groups: {[key:string]:DocumentFragment} = {};\n\n\t\tconst groups_order:string[]\t= [];\n\t\tvar self\t\t\t\t\t= this;\n\t\tvar query\t\t\t\t\t= self.inputValue();\n\t\tconst same_query\t\t\t= query === self.lastQuery || (query == '' && self.lastQuery == null);\n\t\tvar results\t\t\t\t\t= self.search(query);\n\t\tvar active_option\t\t\t= null;\n\t\tvar show_dropdown\t\t\t= self.settings.shouldOpen || false;\n\t\tvar dropdown_content\t\t= self.dropdown_content;\n\n\n\t\tif( same_query ){\n\t\t\tactive_option\t\t\t= self.activeOption;\n\n\t\t\tif( active_option ){\n\t\t\t\tactive_group = active_option.closest('[data-group]') as HTMLElement;\n\t\t\t}\n\t\t}\n\n\t\t// build markup\n\t\tn = results.items.length;\n\t\tif (typeof self.settings.maxOptions === 'number') {\n\t\t\tn = Math.min(n, self.settings.maxOptions);\n\t\t}\n\n\t\tif( n > 0 ){\n\t\t\tshow_dropdown = true;\n\t\t}\n\n\t\t// render and group available options individually\n\t\tfor (i = 0; i < n; i++) {\n\n\t\t\t// get option dom element\n\t\t\tlet item\t\t\t= results.items[i];\n\t\t\tif( !item ) continue;\n\n\t\t\tlet opt_value\t\t= item.id;\n\t\t\tlet option\t\t\t= self.options[opt_value];\n\n\t\t\tif( option === undefined ) continue;\n\n\t\t\tlet opt_hash\t\t= get_hash(opt_value);\n\t\t\tlet option_el\t\t= self.getOption(opt_hash,true) as HTMLElement;\n\n\t\t\t// toggle 'selected' class\n\t\t\tif( !self.settings.hideSelected ){\n\t\t\t\toption_el.classList.toggle('selected', self.items.includes(opt_hash) );\n\t\t\t}\n\n\t\t\toptgroup    = option[self.settings.optgroupField] || '';\n\t\t\toptgroups   = Array.isArray(optgroup) ? optgroup : [optgroup];\n\n\t\t\tfor (j = 0, k = optgroups && optgroups.length; j < k; j++) {\n\t\t\t\toptgroup = optgroups[j];\n\t\t\t\tif (!self.optgroups.hasOwnProperty(optgroup)) {\n\t\t\t\t\toptgroup = '';\n\t\t\t\t}\n\n\t\t\t\tlet group_fragment = groups[optgroup];\n\t\t\t\tif( group_fragment === undefined ){\n\t\t\t\t\tgroup_fragment = document.createDocumentFragment();\n\t\t\t\t\tgroups_order.push(optgroup);\n\t\t\t\t}\n\n\t\t\t\t// nodes can only have one parent, so if the option is in mutple groups, we need a clone\n\t\t\t\tif( j > 0 ){\n\t\t\t\t\toption_el = option_el.cloneNode(true) as HTMLElement;\n\t\t\t\t\tsetAttr(option_el,{id: option.$id+'-clone-'+j,'aria-selected':null});\n\t\t\t\t\toption_el.classList.add('ts-cloned');\n\t\t\t\t\tremoveClasses(option_el,'active');\n\n\n\t\t\t\t\t// make sure we keep the activeOption in the same group\n\t\t\t\t\tif( self.activeOption && self.activeOption.dataset.value == opt_value ){\n\t\t\t\t\t\tif( active_group && active_group.dataset.group === optgroup.toString() ){\n\t\t\t\t\t\t\tactive_option = option_el;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tgroup_fragment.appendChild(option_el);\n\t\t\t\tgroups[optgroup] = group_fragment;\n\t\t\t}\n\t\t}\n\n\t\t// sort optgroups\n\t\tif( self.settings.lockOptgroupOrder ){\n\t\t\tgroups_order.sort((a, b) => {\n\t\t\t\tconst grp_a\t\t= self.optgroups[a];\n\t\t\t\tconst grp_b\t\t= self.optgroups[b];\n\t\t\t\tconst a_order\t= grp_a && grp_a.$order || 0;\n\t\t\t\tconst b_order\t= grp_b && grp_b.$order || 0;\n\t\t\t\treturn a_order - b_order;\n\t\t\t});\n\t\t}\n\n\t\t// render optgroup headers & join groups\n\t\thtml = document.createDocumentFragment();\n\t\titerate( groups_order, (optgroup:string) => {\n\n\t\t\tlet group_fragment = groups[optgroup];\n\n\t\t\tif( !group_fragment || !group_fragment.children.length ) return;\n\n\t\t\tlet group_heading = self.optgroups[optgroup];\n\n\t\t\tif( group_heading !== undefined ){\n\n\t\t\t\tlet group_options = document.createDocumentFragment();\n\t\t\t\tlet header = self.render('optgroup_header', group_heading);\n\t\t\t\tappend( group_options, header );\n\t\t\t\tappend( group_options, group_fragment );\n\n\t\t\t\tlet group_html = self.render('optgroup', {group:group_heading,options:group_options} );\n\n\t\t\t\tappend( html, group_html );\n\n\t\t\t} else {\n\t\t\t\tappend( html, group_fragment );\n\t\t\t}\n\t\t});\n\n\t\tdropdown_content.innerHTML = '';\n\t\tappend( dropdown_content, html );\n\n\t\t// highlight matching terms inline\n\t\tif (self.settings.highlight) {\n\t\t\tremoveHighlight( dropdown_content );\n\t\t\tif (results.query.length && results.tokens.length) {\n\t\t\t\titerate( results.tokens, (tok) => {\n\t\t\t\t\thighlight( dropdown_content, tok.regex);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t// helper method for adding templates to dropdown\n\t\tvar add_template = (template:TomTemplateNames) => {\n\t\t\tlet content = self.render(template,{input:query});\n\t\t\tif( content ){\n\t\t\t\tshow_dropdown = true;\n\t\t\t\tdropdown_content.insertBefore(content, dropdown_content.firstChild);\n\t\t\t}\n\t\t\treturn content;\n\t\t};\n\n\n\t\t// add loading message\n\t\tif( self.loading ){\n\t\t\tadd_template('loading');\n\n\t\t// invalid query\n\t\t}else if( !self.settings.shouldLoad.call(self,query) ){\n\t\t\tadd_template('not_loading');\n\n\t\t// add no_results message\n\t\t}else if( results.items.length === 0 ){\n\t\t\tadd_template('no_results');\n\n\t\t}\n\n\n\n\t\t// add create option\n\t\thas_create_option = self.canCreate(query);\n\t\tif (has_create_option) {\n\t\t\tcreate = add_template('option_create');\n\t\t}\n\n\n\t\t// activate\n\t\tself.hasOptions = results.items.length > 0 || has_create_option;\n\t\tif( show_dropdown ){\n\n\t\t\tif (results.items.length > 0) {\n\n\t\t\t\tif( !active_option && self.settings.mode === 'single' && self.items[0] != undefined ){\n\t\t\t\t\tactive_option = self.getOption(self.items[0]);\n\t\t\t\t}\n\n\t\t\t\tif( !dropdown_content.contains(active_option)  ){\n\n\t\t\t\t\tlet active_index = 0;\n\t\t\t\t\tif( create && !self.settings.addPrecedence ){\n\t\t\t\t\t\tactive_index = 1;\n\t\t\t\t\t}\n\t\t\t\t\tactive_option = self.selectable()[active_index] as HTMLElement;\n\t\t\t\t}\n\n\t\t\t}else if( create ){\n\t\t\t\tactive_option = create;\n\t\t\t}\n\n\t\t\tif( triggerDropdown && !self.isOpen ){\n\t\t\t\tself.open();\n\t\t\t\tself.scrollToOption(active_option,'auto');\n\t\t\t}\n\t\t\tself.setActiveOption(active_option);\n\n\t\t}else{\n\t\t\tself.clearActiveOption();\n\t\t\tif( triggerDropdown && self.isOpen ){\n\t\t\t\tself.close(false); // if create_option=null, we want the dropdown to close but not reset the textbox value\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Return list of selectable options\n\t *\n\t */\n\tselectable():NodeList{\n\t\treturn this.dropdown_content.querySelectorAll('[data-selectable]');\n\t}\n\n\n\n\t/**\n\t * Adds an available option. If it already exists,\n\t * nothing will happen. Note: this does not refresh\n\t * the options list dropdown (use `refreshOptions`\n\t * for that).\n\t *\n\t * Usage:\n\t *\n\t *   this.addOption(data)\n\t *\n\t */\n\taddOption( data:TomOption, user_created = false ):false|string {\n\t\tconst self = this;\n\n\t\t// @deprecated 1.7.7\n\t\t// use addOptions( array, user_created ) for adding multiple options\n\t\tif( Array.isArray(data) ){\n\t\t\tself.addOptions( data, user_created);\n\t\t\treturn false;\n\t\t}\n\n\t\tconst key = hash_key(data[self.settings.valueField]);\n\t\tif( key === null || self.options.hasOwnProperty(key) ){\n\t\t\treturn false;\n\t\t}\n\n\t\tdata.$order\t\t\t= data.$order || ++self.order;\n\t\tdata.$id\t\t\t= self.inputId + '-opt-' + data.$order;\n\t\tself.options[key]\t= data;\n\t\tself.lastQuery\t\t= null;\n\n\t\tif( user_created ){\n\t\t\tself.userOptions[key] = user_created;\n\t\t\tself.trigger('option_add', key, data);\n\t\t}\n\n\t\treturn key;\n\t}\n\n\t/**\n\t * Add multiple options\n\t *\n\t */\n\taddOptions( data:TomOption[], user_created = false ):void{\n\t\titerate( data, (dat:TomOption) => {\n\t\t\tthis.addOption(dat, user_created);\n\t\t});\n\t}\n\n\t/**\n\t * @deprecated 1.7.7\n\t */\n\tregisterOption( data:TomOption ):false|string {\n\t\treturn this.addOption(data);\n\t}\n\n\t/**\n\t * Registers an option group to the pool of option groups.\n\t *\n\t * @return {boolean|string}\n\t */\n\tregisterOptionGroup(data:TomOption) {\n\t\tvar key = hash_key(data[this.settings.optgroupValueField]);\n\n\t\tif ( key === null ) return false;\n\n\t\tdata.$order = data.$order || ++this.order;\n\t\tthis.optgroups[key] = data;\n\t\treturn key;\n\t}\n\n\t/**\n\t * Registers a new optgroup for options\n\t * to be bucketed into.\n\t *\n\t */\n\taddOptionGroup(id:string, data:TomOption) {\n\t\tvar hashed_id;\n\t\tdata[this.settings.optgroupValueField] = id;\n\n\t\tif( hashed_id = this.registerOptionGroup(data) ){\n\t\t\tthis.trigger('optgroup_add', hashed_id, data);\n\t\t}\n\t}\n\n\t/**\n\t * Removes an existing option group.\n\t *\n\t */\n\tremoveOptionGroup(id:string) {\n\t\tif (this.optgroups.hasOwnProperty(id)) {\n\t\t\tdelete this.optgroups[id];\n\t\t\tthis.clearCache();\n\t\t\tthis.trigger('optgroup_remove', id);\n\t\t}\n\t}\n\n\t/**\n\t * Clears all existing option groups.\n\t */\n\tclearOptionGroups() {\n\t\tthis.optgroups = {};\n\t\tthis.clearCache();\n\t\tthis.trigger('optgroup_clear');\n\t}\n\n\t/**\n\t * Updates an option available for selection. If\n\t * it is visible in the selected items or options\n\t * dropdown, it will be re-rendered automatically.\n\t *\n\t */\n\tupdateOption(value:string, data:TomOption) {\n\t\tconst self = this;\n\t\tvar item_new;\n\t\tvar index_item;\n\n\t\tconst value_old\t\t= hash_key(value);\n\t\tconst value_new\t\t= hash_key(data[self.settings.valueField]);\n\n\t\t// sanity checks\n\t\tif( value_old === null ) return;\n\n\t\tconst data_old\t\t= self.options[value_old];\n\n\t\tif( data_old == undefined ) return;\n\t\tif( typeof value_new !== 'string' ) throw new Error('Value must be set in option data');\n\n\n\t\tconst option\t\t= self.getOption(value_old);\n\t\tconst item\t\t\t= self.getItem(value_old);\n\n\n\t\tdata.$order = data.$order || data_old.$order;\n\t\tdelete self.options[value_old];\n\n\t\t// invalidate render cache\n\t\t// don't remove existing node yet, we'll remove it after replacing it\n\t\tself.uncacheValue(value_new);\n\n\t\tself.options[value_new] = data;\n\n\t\t// update the option if it's in the dropdown\n\t\tif( option ){\n\t\t\tif( self.dropdown_content.contains(option) ){\n\n\t\t\t\tconst option_new\t= self._render('option', data);\n\t\t\t\treplaceNode(option, option_new);\n\n\t\t\t\tif( self.activeOption === option ){\n\t\t\t\t\tself.setActiveOption(option_new);\n\t\t\t\t}\n\t\t\t}\n\t\t\toption.remove();\n\t\t}\n\n\t\t// update the item if we have one\n\t\tif( item ){\n\t\t\tindex_item = self.items.indexOf(value_old);\n\t\t\tif (index_item !== -1) {\n\t\t\t\tself.items.splice(index_item, 1, value_new);\n\t\t\t}\n\n\t\t\titem_new\t= self._render('item', data);\n\n\t\t\tif( item.classList.contains('active') ) addClasses(item_new,'active');\n\n\t\t\treplaceNode( item, item_new);\n\t\t}\n\n\t\t// invalidate last query because we might have updated the sortField\n\t\tself.lastQuery = null;\n\t}\n\n\t/**\n\t * Removes a single option.\n\t *\n\t */\n\tremoveOption(value:string, silent?:boolean):void {\n\t\tconst self = this;\n\t\tvalue = get_hash(value);\n\n\t\tself.uncacheValue(value);\n\n\t\tdelete self.userOptions[value];\n\t\tdelete self.options[value];\n\t\tself.lastQuery = null;\n\t\tself.trigger('option_remove', value);\n\t\tself.removeItem(value, silent);\n\t}\n\n\t/**\n\t * Clears all options.\n\t */\n\tclearOptions(filter?:TomClearFilter ) {\n\n\t\tconst boundFilter = (filter || this.clearFilter).bind(this);\n\n\t\tthis.loadedSearches\t\t= {};\n\t\tthis.userOptions\t\t= {};\n\t\tthis.clearCache();\n\n\t\tconst selected:TomOptions\t= {};\n\t\titerate(this.options,(option:TomOption,key:string)=>{\n\t\t\tif( boundFilter(option,key as string) ){\n\t\t\t\tselected[key] = option;\n\t\t\t}\n\t\t});\n\n\t\tthis.options = this.sifter.items = selected;\n\t\tthis.lastQuery = null;\n\t\tthis.trigger('option_clear');\n\t}\n\n\t/**\n\t * Used by clearOptions() to decide whether or not an option should be removed\n\t * Return true to keep an option, false to remove\n\t *\n\t */\n\tclearFilter(option:TomOption,value:string){\n\t\tif( this.items.indexOf(value) >= 0 ){\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Returns the dom element of the option\n\t * matching the given value.\n\t *\n\t */\n\tgetOption(value:undefined|null|boolean|string|number, create:boolean=false):null|HTMLElement {\n\n\t\tconst hashed = hash_key(value);\n\t\tif( hashed === null ) return null;\n\n\t\tconst option = this.options[hashed];\n\t\tif( option != undefined ){\n\n\t\t\tif( option.$div ){\n\t\t\t\treturn option.$div;\n\t\t\t}\n\n\t\t\tif( create ){\n\t\t\t\treturn this._render('option', option);\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Returns the dom element of the next or previous dom element of the same type\n\t * Note: adjacent options may not be adjacent DOM elements (optgroups)\n\t *\n\t */\n\tgetAdjacent( option:null|HTMLElement, direction:number, type:string = 'option' ) : HTMLElement|null{\n\t\tvar self = this, all;\n\n\t\tif( !option ){\n\t\t\treturn null;\n\t\t}\n\n\t\tif( type == 'item' ){\n\t\t\tall\t\t\t= self.controlChildren();\n\t\t}else{\n\t\t\tall\t\t\t= self.dropdown_content.querySelectorAll('[data-selectable]');\n\t\t}\n\n\t\tfor( let i = 0; i < all.length; i++ ){\n\t\t\tif( all[i] != option ){\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif( direction > 0 ){\n\t\t\t\treturn all[i+1] as HTMLElement;\n\t\t\t}\n\n\t\t\treturn all[i-1] as HTMLElement;\n\t\t}\n\t\treturn null;\n\t}\n\n\n\t/**\n\t * Returns the dom element of the item\n\t * matching the given value.\n\t *\n\t */\n\tgetItem(item:string|TomItem|null):null|TomItem {\n\n\t\tif( typeof item == 'object' ){\n\t\t\treturn item;\n\t\t}\n\n\t\tvar value = hash_key(item);\n\t\treturn value !== null\n\t\t\t? this.control.querySelector(`[data-value=\"${addSlashes(value)}\"]`)\n\t\t\t: null;\n\t}\n\n\t/**\n\t * \"Selects\" multiple items at once. Adds them to the list\n\t * at the current caret position.\n\t *\n\t */\n\taddItems( values:string|string[], silent?:boolean ):void{\n\t\tvar self = this;\n\n\t\tvar items = Array.isArray(values) ? values : [values];\n\t\titems = items.filter(x => self.items.indexOf(x) === -1);\n\t\tconst last_item = items[items.length - 1];\n\t\titems.forEach(item => {\n\t\t\tself.isPending = (item !== last_item);\n\t\t\tself.addItem(item, silent);\n\t\t});\n\t}\n\n\t/**\n\t * \"Selects\" an item. Adds it to the list\n\t * at the current caret position.\n\t *\n\t */\n\taddItem( value:string, silent?:boolean ):void{\n\t\tvar events = silent ? [] : ['change','dropdown_close'];\n\n\t\tdebounce_events(this, events, () => {\n\t\t\tvar item, wasFull;\n\t\t\tconst self = this;\n\t\t \tconst inputMode = self.settings.mode;\n\t\t\tconst hashed = hash_key(value);\n\n\t\t\tif( hashed && self.items.indexOf(hashed) !== -1 ){\n\n\t\t\t\tif( inputMode === 'single' ){\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\n\t\t\t\tif( inputMode === 'single' || !self.settings.duplicates ){\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (hashed === null || !self.options.hasOwnProperty(hashed)) return;\n\t\t\tif (inputMode === 'single') self.clear(silent);\n\t\t\tif (inputMode === 'multi' && self.isFull()) return;\n\n\t\t\titem = self._render('item', self.options[hashed]);\n\n\t\t\tif( self.control.contains(item) ){ // duplicates\n\t\t\t\titem = item.cloneNode(true) as HTMLElement;\n\t\t\t}\n\n\t\t\twasFull = self.isFull();\n\t\t\tself.items.splice(self.caretPos, 0, hashed);\n\t\t\tself.insertAtCaret(item);\n\n\t\t\tif (self.isSetup) {\n\n\t\t\t\t// update menu / remove the option (if this is not one item being added as part of series)\n\t\t\t\tif( !self.isPending && self.settings.hideSelected ){\n\t\t\t\t\tlet option = self.getOption(hashed);\n\t\t\t\t\tlet next = self.getAdjacent(option, 1);\n\t\t\t\t\tif( next ){\n\t\t\t\t\t\tself.setActiveOption(next);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// refreshOptions after setActiveOption(),\n\t\t\t\t// otherwise setActiveOption() will be called by refreshOptions() with the wrong value\n\t\t\t\tif( !self.isPending && !self.settings.closeAfterSelect ){\n\t\t\t\t\tself.refreshOptions(self.isFocused && inputMode !== 'single');\n\t\t\t\t}\n\n\t\t\t\t// hide the menu if the maximum number of items have been selected or no options are left\n\t\t\t\tif( self.settings.closeAfterSelect != false && self.isFull() ){\n\t\t\t\t\tself.close();\n\t\t\t\t} else if (!self.isPending) {\n\t\t\t\t\tself.positionDropdown();\n\t\t\t\t}\n\n\t\t\t\tself.trigger('item_add', hashed, item);\n\n\t\t\t\tif (!self.isPending) {\n\t\t\t\t\tself.updateOriginalInput({silent: silent});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!self.isPending || (!wasFull && self.isFull())) {\n\t\t\t\tself.inputState();\n\t\t\t\tself.refreshState();\n\t\t\t}\n\n\t\t});\n\t}\n\n\t/**\n\t * Removes the selected item matching\n\t * the provided value.\n\t *\n\t */\n\tremoveItem( item:string|TomItem|null=null, silent?:boolean ){\n\t\tconst self\t\t= this;\n\t\titem\t\t\t= self.getItem(item);\n\n\t\tif( !item ) return;\n\n\t\tvar i,idx;\n\t\tconst value\t= item.dataset.value;\n\t\ti = nodeIndex(item);\n\n\t\titem.remove();\n\t\tif( item.classList.contains('active') ){\n\t\t\tidx = self.activeItems.indexOf(item);\n\t\t\tself.activeItems.splice(idx, 1);\n\t\t\tremoveClasses(item,'active');\n\t\t}\n\n\t\tself.items.splice(i, 1);\n\t\tself.lastQuery = null;\n\t\tif (!self.settings.persist && self.userOptions.hasOwnProperty(value)) {\n\t\t\tself.removeOption(value, silent);\n\t\t}\n\n\t\tif (i < self.caretPos) {\n\t\t\tself.setCaret(self.caretPos - 1);\n\t\t}\n\n\t\tself.updateOriginalInput({silent: silent});\n\t\tself.refreshState();\n\t\tself.positionDropdown();\n\t\tself.trigger('item_remove', value, item);\n\n\t}\n\n\t/**\n\t * Invokes the `create` method provided in the\n\t * TomSelect options that should provide the data\n\t * for the new item, given the user input.\n\t *\n\t * Once this completes, it will be added\n\t * to the item list.\n\t *\n\t */\n\tcreateItem( input:null|string=null, callback:TomCreateCallback = ()=>{} ):boolean{\n\n\t\t// triggerDropdown parameter @deprecated 2.1.1\n\t\tif( arguments.length === 3 ){\n\t\t\tcallback = arguments[2];\n\t\t}\n\t\tif( typeof callback != 'function' ){\n\t\t\tcallback = () => {};\n\t\t}\n\n\t\tvar self  = this;\n\t\tvar caret = self.caretPos;\n\t\tvar output;\n\t\tinput = input || self.inputValue();\n\n\t\tif (!self.canCreate(input)) {\n\t\t\tcallback();\n\t\t\treturn false;\n\t\t}\n\n\t\tself.lock();\n\n\t\tvar created = false;\n\t\tvar create = (data?:boolean|TomOption) => {\n\t\t\tself.unlock();\n\n\t\t\tif (!data || typeof data !== 'object') return callback();\n\t\t\tvar value = hash_key(data[self.settings.valueField]);\n\t\t\tif( typeof value !== 'string' ){\n\t\t\t\treturn callback();\n\t\t\t}\n\n\t\t\tself.setTextboxValue();\n\t\t\tself.addOption(data,true);\n\t\t\tself.setCaret(caret);\n\t\t\tself.addItem(value);\n\t\t\tcallback(data);\n\t\t\tcreated = true;\n\t\t};\n\n\t\tif( typeof self.settings.create === 'function' ){\n\t\t\toutput = self.settings.create.call(this, input, create);\n\t\t}else{\n\t\t\toutput = {\n\t\t\t\t[self.settings.labelField]: input,\n\t\t\t\t[self.settings.valueField]: input,\n\t\t\t};\n\t\t}\n\n\t\tif( !created ){\n\t\t\tcreate(output);\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Re-renders the selected item lists.\n\t */\n\trefreshItems() {\n\t\tvar self = this;\n\t\tself.lastQuery = null;\n\n\t\tif (self.isSetup) {\n\t\t\tself.addItems(self.items);\n\t\t}\n\n\t\tself.updateOriginalInput();\n\t\tself.refreshState();\n\t}\n\n\t/**\n\t * Updates all state-dependent attributes\n\t * and CSS classes.\n\t */\n\trefreshState() {\n\t\tconst self     = this;\n\n\t\tself.refreshValidityState();\n\n\t\tconst isFull\t= self.isFull();\n\t\tconst isLocked\t= self.isLocked;\n\n\t\tself.wrapper.classList.toggle('rtl',self.rtl);\n\n\n\t\tconst wrap_classList = self.wrapper.classList;\n\n\t\twrap_classList.toggle('focus', self.isFocused)\n\t\twrap_classList.toggle('disabled', self.isDisabled)\n\t\twrap_classList.toggle('required', self.isRequired)\n\t\twrap_classList.toggle('invalid', !self.isValid)\n\t\twrap_classList.toggle('locked', isLocked)\n\t\twrap_classList.toggle('full', isFull)\n\t\twrap_classList.toggle('input-active', self.isFocused && !self.isInputHidden)\n\t\twrap_classList.toggle('dropdown-active', self.isOpen)\n\t\twrap_classList.toggle('has-options', isEmptyObject(self.options) )\n\t\twrap_classList.toggle('has-items', self.items.length > 0);\n\n\t}\n\n\n\t/**\n\t * Update the `required` attribute of both input and control input.\n\t *\n\t * The `required` property needs to be activated on the control input\n\t * for the error to be displayed at the right place. `required` also\n\t * needs to be temporarily deactivated on the input since the input is\n\t * hidden and can't show errors.\n\t */\n\trefreshValidityState() {\n\t\tvar self = this;\n\n\t\tif( !self.input.validity ){\n\t\t\treturn;\n\t\t}\n\n\t\tself.isValid = self.input.validity.valid;\n\t\tself.isInvalid = !self.isValid;\n\t}\n\n\t/**\n\t * Determines whether or not more items can be added\n\t * to the control without exceeding the user-defined maximum.\n\t *\n\t * @returns {boolean}\n\t */\n\tisFull() {\n\t\treturn this.settings.maxItems !== null && this.items.length >= this.settings.maxItems;\n\t}\n\n\t/**\n\t * Refreshes the original <select> or <input>\n\t * element to reflect the current state.\n\t *\n\t */\n\tupdateOriginalInput( opts:TomArgObject = {} ){\n\t\tconst self = this;\n\t\tvar option, label;\n\n\t\tconst empty_option = self.input.querySelector('option[value=\"\"]') as HTMLOptionElement;\n\n\t\tif( self.is_select_tag ){\n\n\t\t\tconst selected:HTMLOptionElement[]\t\t= [];\n\t\t\tconst has_selected:number\t\t\t\t= self.input.querySelectorAll('option:checked').length;\n\n\t\t\tfunction AddSelected(option_el:HTMLOptionElement|null, value:string, label:string):HTMLOptionElement{\n\n\t\t\t\tif( !option_el ){\n\t\t\t\t\toption_el = getDom('<option value=\"' + escape_html(value) + '\">' + escape_html(label) + '</option>') as HTMLOptionElement;\n\t\t\t\t}\n\n\t\t\t\t// don't move empty option from top of list\n\t\t\t\t// fixes bug in firefox https://bugzilla.mozilla.org/show_bug.cgi?id=1725293\n\t\t\t\tif( option_el != empty_option ){\n\t\t\t\t\tself.input.append(option_el);\n\t\t\t\t}\n\n\t\t\t\tselected.push(option_el);\n\n\t\t\t\t// marking empty option as selected can break validation\n\t\t\t\t// fixes https://github.com/orchidjs/tom-select/issues/303\n\t\t\t\tif( option_el != empty_option || has_selected > 0 ){\n\t\t\t\t\toption_el.selected = true;\n\t\t\t\t}\n\n\t\t\t\treturn option_el;\n\t\t\t}\n\n\t\t\t// unselect all selected options\n\t\t\tself.input.querySelectorAll('option:checked').forEach((option_el:Element) => {\n\t\t\t\t(<HTMLOptionElement>option_el).selected = false;\n\t\t\t});\n\n\n\t\t\t// nothing selected?\n\t\t\tif( self.items.length == 0 && self.settings.mode == 'single' ){\n\n\t\t\t\tAddSelected(empty_option, \"\", \"\");\n\n\t\t\t// order selected <option> tags for values in self.items\n\t\t\t}else{\n\n\t\t\t\tself.items.forEach((value)=>{\n\t\t\t\t\toption\t\t\t= self.options[value]!;\n\t\t\t\t\tlabel\t\t\t= option[self.settings.labelField] || '';\n\n\t\t\t\t\tif( selected.includes(option.$option) ){\n\t\t\t\t\t\tconst reuse_opt = self.input.querySelector(`option[value=\"${addSlashes(value)}\"]:not(:checked)`) as HTMLOptionElement;\n\t\t\t\t\t\tAddSelected(reuse_opt, value, label);\n\t\t\t\t\t}else{\n\t\t\t\t\t\toption.$option\t= AddSelected(option.$option, value, label);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t}\n\n\t\t} else {\n\t\t\tself.input.value = self.getValue() as string;\n\t\t}\n\n\t\tif (self.isSetup) {\n\t\t\tif (!opts.silent) {\n\t\t\t\tself.trigger('change', self.getValue() );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Shows the autocomplete dropdown containing\n\t * the available options.\n\t */\n\topen() {\n\t\tvar self = this;\n\n\t\tif (self.isLocked || self.isOpen || (self.settings.mode === 'multi' && self.isFull())) return;\n\t\tself.isOpen = true;\n\t\tsetAttr(self.focus_node,{'aria-expanded': 'true'});\n\t\tself.refreshState();\n\t\tapplyCSS(self.dropdown,{visibility: 'hidden', display: 'block'});\n\t\tself.positionDropdown();\n\t\tapplyCSS(self.dropdown,{visibility: 'visible', display: 'block'});\n\t\tself.focus();\n\t\tself.trigger('dropdown_open', self.dropdown);\n\t}\n\n\t/**\n\t * Closes the autocomplete dropdown menu.\n\t */\n\tclose(setTextboxValue=true) {\n\t\tvar self = this;\n\t\tvar trigger = self.isOpen;\n\n\t\tif( setTextboxValue ){\n\n\t\t\t// before blur() to prevent form onchange event\n\t\t\tself.setTextboxValue();\n\n\t\t\tif (self.settings.mode === 'single' && self.items.length) {\n\t\t\t\tself.hideInput();\n\t\t\t}\n\t\t}\n\n\t\tself.isOpen = false;\n\t\tsetAttr(self.focus_node,{'aria-expanded': 'false'});\n\t\tapplyCSS(self.dropdown,{display: 'none'});\n\t\tif( self.settings.hideSelected ){\n\t\t\tself.clearActiveOption();\n\t\t}\n\t\tself.refreshState();\n\n\t\tif (trigger) self.trigger('dropdown_close', self.dropdown);\n\t}\n\n\t/**\n\t * Calculates and applies the appropriate\n\t * position of the dropdown if dropdownParent = 'body'.\n\t * Otherwise, position is determined by css\n\t */\n\tpositionDropdown(){\n\n\t\tif( this.settings.dropdownParent !== 'body' ){\n\t\t\treturn;\n\t\t}\n\n\t\tvar context\t\t\t= this.control;\n\t\tvar rect\t\t\t= context.getBoundingClientRect();\n\t\tvar top\t\t\t\t= context.offsetHeight + rect.top  + window.scrollY;\n\t\tvar left\t\t\t= rect.left + window.scrollX;\n\n\n\t\tapplyCSS(this.dropdown,{\n\t\t\twidth : rect.width + 'px',\n\t\t\ttop   : top + 'px',\n\t\t\tleft  : left + 'px'\n\t\t});\n\n\t}\n\n\t/**\n\t * Resets / clears all selected items\n\t * from the control.\n\t *\n\t */\n\tclear(silent?:boolean) {\n\t\tvar self = this;\n\n\t\tif (!self.items.length) return;\n\n\t\tvar items = self.controlChildren();\n\t\titerate(items,(item:TomItem)=>{\n\t\t\tself.removeItem(item,true);\n\t\t});\n\n\t\tself.showInput();\n\t\tif( !silent ) self.updateOriginalInput();\n\t\tself.trigger('clear');\n\t}\n\n\t/**\n\t * A helper method for inserting an element\n\t * at the current caret position.\n\t *\n\t */\n\tinsertAtCaret(el:HTMLElement) {\n\t\tconst self\t\t= this;\n\t\tconst caret\t\t= self.caretPos;\n\t\tconst target\t= self.control;\n\n\t\ttarget.insertBefore(el, target.children[caret] || null);\n\t\tself.setCaret(caret + 1);\n\t}\n\n\t/**\n\t * Removes the current selected item(s).\n\t *\n\t */\n\tdeleteSelection(e:KeyboardEvent):boolean {\n\t\tvar direction, selection, caret, tail;\n\t\tvar self = this;\n\n\t\tdirection = (e && e.keyCode === constants.KEY_BACKSPACE) ? -1 : 1;\n\t\tselection = getSelection(self.control_input);\n\n\n\t\t// determine items that will be removed\n\t\tconst rm_items:TomItem[]\t= [];\n\n\t\tif (self.activeItems.length) {\n\n\t\t\ttail = getTail(self.activeItems, direction);\n\t\t\tcaret = nodeIndex(tail);\n\n\t\t\tif (direction > 0) { caret++; }\n\n\t\t\titerate(self.activeItems, (item:TomItem) => rm_items.push(item) );\n\n\t\t} else if ((self.isFocused || self.settings.mode === 'single') && self.items.length) {\n\t\t\tconst items = self.controlChildren();\n\t\t\tlet rm_item;\n\t\t\tif( direction < 0 && selection.start === 0 && selection.length === 0 ){\n\t\t\t\trm_item = items[self.caretPos - 1];\n\n\t\t\t}else if( direction > 0 && selection.start === self.inputValue().length ){\n\t\t\t\trm_item = items[self.caretPos];\n\t\t\t}\n\n\t\t\tif( rm_item !== undefined ){\n\t\t\t\trm_items.push( rm_item );\n\t\t\t}\n\t\t}\n\n\t\tif( !self.shouldDelete(rm_items,e) ){\n\t\t\treturn false;\n\t\t}\n\n\t\tpreventDefault(e,true);\n\n\t\t// perform removal\n\t\tif (typeof caret !== 'undefined') {\n\t\t\tself.setCaret(caret);\n\t\t}\n\n\t\twhile( rm_items.length ){\n\t\t\tself.removeItem(rm_items.pop());\n\t\t}\n\n\t\tself.showInput();\n\t\tself.positionDropdown();\n\t\tself.refreshOptions(false);\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Return true if the items should be deleted\n\t */\n\tshouldDelete(items:TomItem[],evt:MouseEvent|KeyboardEvent){\n\n\t\tconst values = items.map(item => item.dataset.value);\n\n\t\t// allow the callback to abort\n\t\tif( !values.length || (typeof this.settings.onDelete === 'function' && this.settings.onDelete(values,evt) === false) ){\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Selects the previous / next item (depending on the `direction` argument).\n\t *\n\t * > 0 - right\n\t * < 0 - left\n\t *\n\t */\n\tadvanceSelection(direction:number, e?:MouseEvent|KeyboardEvent) {\n\t\tvar last_active, adjacent, self = this;\n\n\t\tif (self.rtl) direction *= -1;\n\t\tif( self.inputValue().length ) return;\n\n\n\t\t// add or remove to active items\n\t\tif( isKeyDown(constants.KEY_SHORTCUT,e) || isKeyDown('shiftKey',e) ){\n\n\t\t\tlast_active\t\t\t= self.getLastActive(direction);\n\t\t\tif( last_active ){\n\n\t\t\t\tif( !last_active.classList.contains('active') ){\n\t\t\t\t\tadjacent\t\t\t= last_active;\n\t\t\t\t}else{\n\t\t\t\t\tadjacent\t\t\t= self.getAdjacent(last_active,direction,'item');\n\t\t\t\t}\n\n\t\t\t// if no active item, get items adjacent to the control input\n\t\t\t}else if( direction > 0 ){\n\t\t\t\tadjacent\t\t\t= self.control_input.nextElementSibling;\n\t\t\t}else{\n\t\t\t\tadjacent\t\t\t= self.control_input.previousElementSibling;\n\t\t\t}\n\n\n\t\t\tif( adjacent ){\n\t\t\t\tif( adjacent.classList.contains('active') ){\n\t\t\t\t\tself.removeActiveItem(last_active);\n\t\t\t\t}\n\t\t\t\tself.setActiveItemClass(adjacent); // mark as last_active !! after removeActiveItem() on last_active\n\t\t\t}\n\n\t\t// move caret to the left or right\n\t\t}else{\n\t\t\tself.moveCaret(direction);\n\t\t}\n\t}\n\n\tmoveCaret(direction:number){}\n\n\t/**\n\t * Get the last active item\n\t *\n\t */\n\tgetLastActive(direction?:number){\n\n\t\tlet last_active = this.control.querySelector('.last-active');\n\t\tif( last_active ){\n\t\t\treturn last_active;\n\t\t}\n\n\n\t\tvar result = this.control.querySelectorAll('.active');\n\t\tif( result ){\n\t\t\treturn getTail(result,direction);\n\t\t}\n\t}\n\n\n\t/**\n\t * Moves the caret to the specified index.\n\t *\n\t * The input must be moved by leaving it in place and moving the\n\t * siblings, due to the fact that focus cannot be restored once lost\n\t * on mobile webkit devices\n\t *\n\t */\n\tsetCaret(new_pos:number) {\n\t\tthis.caretPos = this.items.length;\n\t}\n\n\t/**\n\t * Return list of item dom elements\n\t *\n\t */\n\tcontrolChildren():TomItem[]{\n\t\treturn Array.from( this.control.querySelectorAll('[data-ts-item]') ) as TomItem[];\n\t}\n\n\t/**\n\t * Disables user input on the control. Used while\n\t * items are being asynchronously created.\n\t */\n\tlock() {\n\t\tthis.isLocked = true;\n\t\tthis.refreshState();\n\t}\n\n\t/**\n\t * Re-enables user input on the control.\n\t */\n\tunlock() {\n\t\tthis.isLocked = false;\n\t\tthis.refreshState();\n\t}\n\n\t/**\n\t * Disables user input on the control completely.\n\t * While disabled, it cannot receive focus.\n\t */\n\tdisable() {\n\t\tvar self = this;\n\t\tself.input.disabled\t\t\t\t= true;\n\t\tself.control_input.disabled\t\t= true;\n\t\tself.focus_node.tabIndex\t\t= -1;\n\t\tself.isDisabled\t\t\t\t\t= true;\n\t\tthis.close();\n\t\tself.lock();\n\t}\n\n\t/**\n\t * Enables the control so that it can respond\n\t * to focus and user input.\n\t */\n\tenable() {\n\t\tvar self = this;\n\t\tself.input.disabled\t\t\t\t= false;\n\t\tself.control_input.disabled\t\t= false;\n\t\tself.focus_node.tabIndex\t\t= self.tabIndex;\n\t\tself.isDisabled\t\t\t\t\t= false;\n\t\tself.unlock();\n\t}\n\n\t/**\n\t * Completely destroys the control and\n\t * unbinds all event listeners so that it can\n\t * be garbage collected.\n\t */\n\tdestroy() {\n\t\tvar self = this;\n\t\tvar revertSettings = self.revertSettings;\n\n\t\tself.trigger('destroy');\n\t\tself.off();\n\t\tself.wrapper.remove();\n\t\tself.dropdown.remove();\n\n\t\tself.input.innerHTML = revertSettings.innerHTML;\n\t\tself.input.tabIndex = revertSettings.tabIndex;\n\n\t\tremoveClasses(self.input,'tomselected','ts-hidden-accessible');\n\n\t\tself._destroy();\n\n\t\tdelete self.input.tomselect;\n\t}\n\n\t/**\n\t * A helper method for rendering \"item\" and\n\t * \"option\" templates, given the data.\n\t *\n\t */\n\trender( templateName:TomTemplateNames, data?:any ):null|HTMLElement{\n\t\tvar id, html;\n\t\tconst self = this;\n\n\t\tif( typeof this.settings.render[templateName] !== 'function' ){\n\t\t\treturn null;\n\t\t}\n\n\t\t// render markup\n\t\thtml = self.settings.render[templateName].call(this, data, escape_html);\n\n\t\tif( !html ){\n\t\t\treturn null;\n\t\t}\n\n\t\thtml = getDom( html );\n\n\t\t// add mandatory attributes\n\t\tif (templateName === 'option' || templateName === 'option_create') {\n\n\t\t\tif( data[self.settings.disabledField] ){\n\t\t\t\tsetAttr(html,{'aria-disabled':'true'});\n\t\t\t}else{\n\t\t\t\tsetAttr(html,{'data-selectable': ''});\n\t\t\t}\n\n\t\t}else if (templateName === 'optgroup') {\n\t\t\tid = data.group[self.settings.optgroupValueField];\n\t\t\tsetAttr(html,{'data-group': id});\n\t\t\tif(data.group[self.settings.disabledField]) {\n\t\t\t\tsetAttr(html,{'data-disabled': ''});\n\t\t\t}\n\t\t}\n\n\t\tif (templateName === 'option' || templateName === 'item') {\n\t\t\tconst value\t= get_hash(data[self.settings.valueField]);\n\t\t\tsetAttr(html,{'data-value': value });\n\n\n\t\t\t// make sure we have some classes if a template is overwritten\n\t\t\tif( templateName === 'item' ){\n\t\t\t\taddClasses(html,self.settings.itemClass);\n\t\t\t\tsetAttr(html,{'data-ts-item':''});\n\t\t\t}else{\n\t\t\t\taddClasses(html,self.settings.optionClass);\n\t\t\t\tsetAttr(html,{\n\t\t\t\t\trole:'option',\n\t\t\t\t\tid:data.$id\n\t\t\t\t});\n\n\t\t\t\t// update cache\n\t\t\t\tdata.$div = html;\n\t\t\t\tself.options[value] = data;\n\t\t\t}\n\n\n\t\t}\n\n\t\treturn html;\n\n\t}\n\n\n\t/**\n\t * Type guarded rendering\n\t *\n\t */\n\t_render( templateName:TomTemplateNames, data?:any ):HTMLElement{\n\t\tconst html = this.render(templateName, data);\n\n\t\tif( html == null ){\n\t\t\tthrow 'HTMLElement expected';\n\t\t}\n\t\treturn html;\n\t}\n\n\n\t/**\n\t * Clears the render cache for a template. If\n\t * no template is given, clears all render\n\t * caches.\n\t *\n\t */\n\tclearCache():void{\n\n\t\titerate(this.options, (option:TomOption)=>{\n\t\t\tif( option.$div ){\n\t\t\t\toption.$div.remove();\n\t\t\t\tdelete option.$div;\n\t\t\t}\n\t\t});\n\n\t}\n\n\t/**\n\t * Removes a value from item and option caches\n\t *\n\t */\n\tuncacheValue(value:string){\n\n\t\tconst option_el\t\t\t= this.getOption(value);\n\t\tif( option_el ) option_el.remove();\n\n\t}\n\n\t/**\n\t * Determines whether or not to display the\n\t * create item prompt, given a user input.\n\t *\n\t */\n\tcanCreate( input:string ):boolean {\n\t\treturn this.settings.create && (input.length > 0) && (this.settings.createFilter as TomCreateFilter ).call(this, input);\n\t}\n\n\n\t/**\n\t * Wraps this.`method` so that `new_fn` can be invoked 'before', 'after', or 'instead' of the original method\n\t *\n\t * this.hook('instead','onKeyDown',function( arg1, arg2 ...){\n\t *\n\t * });\n\t */\n\thook( when:string, method:string, new_fn:any ){\n\t\tvar self = this;\n\t\tvar orig_method = self[method];\n\n\n\t\tself[method] = function(){\n\t\t\tvar result, result_new;\n\n\t\t\tif( when === 'after' ){\n\t\t\t\tresult = orig_method.apply(self, arguments);\n\t\t\t}\n\n\t\t\tresult_new = new_fn.apply(self, arguments );\n\n\t\t\tif( when === 'instead' ){\n\t\t\t\treturn result_new;\n\t\t\t}\n\n\t\t\tif( when === 'before' ){\n\t\t\t\tresult = orig_method.apply(self, arguments);\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\n\t}\n\n};\n","/**\n * microplugin.js\n * Copyright (c) 2013 Brian Reavis & contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n * @author Brian Reavis <brian@thirdroute.com>\n */\n\ntype TSettings = {\n\t[key:string]:any\n}\n\ntype TPlugins = {\n\tnames: string[],\n\tsettings: TSettings,\n\trequested: {[key:string]:boolean},\n\tloaded: {[key:string]:any}\n};\n\nexport type TPluginItem = {name:string,options:{}};\nexport type TPluginHash = {[key:string]:{}};\n\n\n\n\nexport default function MicroPlugin(Interface: any ){\n\n\tInterface.plugins = {};\n\n\treturn class extends Interface{\n\n\t\tpublic plugins:TPlugins = {\n\t\t\tnames     : [],\n\t\t\tsettings  : {},\n\t\t\trequested : {},\n\t\t\tloaded    : {}\n\t\t};\n\n\t\t/**\n\t\t * Registers a plugin.\n\t\t *\n\t\t * @param {function} fn\n\t\t */\n\t\tstatic define(name:string, fn:(this:any,settings:TSettings)=>any){\n\t\t\tInterface.plugins[name] = {\n\t\t\t\t'name' : name,\n\t\t\t\t'fn'   : fn\n\t\t\t};\n\t\t}\n\n\n\t\t/**\n\t\t * Initializes the listed plugins (with options).\n\t\t * Acceptable formats:\n\t\t *\n\t\t * List (without options):\n\t\t *   ['a', 'b', 'c']\n\t\t *\n\t\t * List (with options):\n\t\t *   [{'name': 'a', options: {}}, {'name': 'b', options: {}}]\n\t\t *\n\t\t * Hash (with options):\n\t\t *   {'a': { ... }, 'b': { ... }, 'c': { ... }}\n\t\t *\n\t\t * @param {array|object} plugins\n\t\t */\n\t\tinitializePlugins(plugins:string[]|TPluginItem[]|TPluginHash) {\n\t\t\tvar key, name;\n\t\t\tconst self  = this;\n\t\t\tconst queue:string[] = [];\n\n\t\t\tif (Array.isArray(plugins)) {\n\t\t\t\tplugins.forEach((plugin:string|TPluginItem)=>{\n\t\t\t\t\tif (typeof plugin === 'string') {\n\t\t\t\t\t\tqueue.push(plugin);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.plugins.settings[plugin.name] = plugin.options;\n\t\t\t\t\t\tqueue.push(plugin.name);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else if (plugins) {\n\t\t\t\tfor (key in plugins) {\n\t\t\t\t\tif (plugins.hasOwnProperty(key)) {\n\t\t\t\t\t\tself.plugins.settings[key] = plugins[key];\n\t\t\t\t\t\tqueue.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\twhile( name = queue.shift() ){\n\t\t\t\tself.require(name);\n\t\t\t}\n\t\t}\n\n\t\tloadPlugin(name:string) {\n\t\t\tvar self    = this;\n\t\t\tvar plugins = self.plugins;\n\t\t\tvar plugin  = Interface.plugins[name];\n\n\t\t\tif (!Interface.plugins.hasOwnProperty(name)) {\n\t\t\t\tthrow new Error('Unable to find \"' +  name + '\" plugin');\n\t\t\t}\n\n\t\t\tplugins.requested[name] = true;\n\t\t\tplugins.loaded[name] = plugin.fn.apply(self, [self.plugins.settings[name] || {}]);\n\t\t\tplugins.names.push(name);\n\t\t}\n\n\t\t/**\n\t\t * Initializes a plugin.\n\t\t *\n\t\t */\n\t\trequire(name:string) {\n\t\t\tvar self = this;\n\t\t\tvar plugins = self.plugins;\n\n\t\t\tif (!self.plugins.loaded.hasOwnProperty(name)) {\n\t\t\t\tif (plugins.requested[name]) {\n\t\t\t\t\tthrow new Error('Plugin has circular dependency (\"' + name + '\")');\n\t\t\t\t}\n\t\t\t\tself.loadPlugin(name);\n\t\t\t}\n\n\t\t\treturn plugins.loaded[name];\n\t\t}\n\n\t};\n\n}\n","import TomSelect from './tom-select';\n\nimport caret_position from './plugins/caret_position/plugin';\nimport dropdown_input from './plugins/dropdown_input/plugin';\nimport no_backspace_delete from './plugins/no_backspace_delete/plugin';\nimport remove_button from './plugins/remove_button/plugin';\nimport restore_on_backspace from './plugins/restore_on_backspace/plugin';\n\nTomSelect.define('caret_position', caret_position);\nTomSelect.define('dropdown_input', dropdown_input);\nTomSelect.define('no_backspace_delete', no_backspace_delete);\nTomSelect.define('remove_button', remove_button);\nTomSelect.define('restore_on_backspace', restore_on_backspace);\n\nexport default TomSelect;\n","/**\n * Plugin: \"dropdown_input\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport { nodeIndex, removeClasses } from '../../vanilla';\n\n\nexport default function(this:TomSelect) {\n\tvar self = this;\n\n\t/**\n\t * Moves the caret to the specified index.\n\t *\n\t * The input must be moved by leaving it in place and moving the\n\t * siblings, due to the fact that focus cannot be restored once lost\n\t * on mobile webkit devices\n\t *\n\t */\n\tself.hook('instead','setCaret',(new_pos:number) => {\n\n\t\tif( self.settings.mode === 'single' || !self.control.contains(self.control_input) ) {\n\t\t\tnew_pos = self.items.length;\n\t\t} else {\n\t\t\tnew_pos = Math.max(0, Math.min(self.items.length, new_pos));\n\n\t\t\tif( new_pos != self.caretPos && !self.isPending ){\n\n\t\t\t\tself.controlChildren().forEach((child,j) => {\n\t\t\t\t\tif( j < new_pos ){\n\t\t\t\t\t\tself.control_input.insertAdjacentElement('beforebegin', child );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.control.appendChild( child );\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tself.caretPos = new_pos;\n\t});\n\n\tself.hook('instead','moveCaret',(direction:number) => {\n\n\t\tif( !self.isFocused ) return;\n\n\t\t// move caret before or after selected items\n\t\tconst last_active\t\t= self.getLastActive(direction);\n\t\tif( last_active ){\n\t\t\tconst idx = nodeIndex(last_active);\n\t\t\tself.setCaret(direction > 0 ? idx + 1: idx);\n\t\t\tself.setActiveItem();\n\t\t\tremoveClasses(last_active as HTMLElement,'last-active');\n\n\t\t// move caret left or right of current position\n\t\t}else{\n\t\t\tself.setCaret(self.caretPos + direction);\n\n\t\t}\n\n\t});\n\n};\n","/**\n * Plugin: \"dropdown_input\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport * as constants from '../../constants';\nimport { getDom, addClasses } from '../../vanilla';\nimport { addEvent, preventDefault } from '../../utils';\n\n\nexport default function(this:TomSelect) {\n\tconst self = this;\n\n\tself.settings.shouldOpen = true; // make sure the input is shown even if there are no options to display in the dropdown\n\n\tself.hook('before','setup',()=>{\n\t\tself.focus_node\t\t= self.control;\n\n\t\taddClasses( self.control_input, 'dropdown-input');\n\n\t \tconst div = getDom('<div class=\"dropdown-input-wrap\">');\n\t\tdiv.append(self.control_input);\n\t\tself.dropdown.insertBefore(div, self.dropdown.firstChild);\n\n\t\t// set a placeholder in the select control\n\t\tconst placeholder = getDom('<input class=\"items-placeholder\" tabindex=\"-1\" />') as HTMLInputElement;\n\t\tplaceholder.placeholder = self.settings.placeholder ||'';\n\t\tself.control.append(placeholder);\n\n\t});\n\n\n\tself.on('initialize',()=>{\n\n\t\t// set tabIndex on control to -1, otherwise [shift+tab] will put focus right back on control_input\n\t\tself.control_input.addEventListener('keydown',(evt:KeyboardEvent) =>{\n\t\t//addEvent(self.control_input,'keydown' as const,(evt:KeyboardEvent) =>{\n\t\t\tswitch( evt.keyCode ){\n\t\t\t\tcase constants.KEY_ESC:\n\t\t\t\t\tif (self.isOpen) {\n\t\t\t\t\t\tpreventDefault(evt,true);\n\t\t\t\t\t\tself.close();\n\t\t\t\t\t}\n\t\t\t\t\tself.clearActiveItems();\n\t\t\t\treturn;\n\t\t\t\tcase constants.KEY_TAB:\n\t\t\t\t\tself.focus_node.tabIndex = -1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\treturn self.onKeyDown.call(self,evt);\n\t\t});\n\n\t\tself.on('blur',()=>{\n\t\t\tself.focus_node.tabIndex = self.isDisabled ? -1 : self.tabIndex;\n\t\t});\n\n\n\t\t// give the control_input focus when the dropdown is open\n\t\tself.on('dropdown_open',() =>{\n\t\t\tself.control_input.focus();\n\t\t});\n\n\t\t// prevent onBlur from closing when focus is on the control_input\n\t\tconst orig_onBlur = self.onBlur;\n\t\tself.hook('instead','onBlur',(evt?:FocusEvent)=>{\n\t\t\tif( evt && evt.relatedTarget == self.control_input ) return;\n\t\t\treturn orig_onBlur.call(self);\n\t\t});\n\n\t\taddEvent(self.control_input,'blur', () => self.onBlur() );\n\n\t\t// return focus to control to allow further keyboard input\n\t\tself.hook('before','close',() =>{\n\n\t\t\tif( !self.isOpen ) return;\n\t\t\tself.focus_node.focus({preventScroll: true});\n\t\t});\n\n\t});\n\n};\n","/**\n * Plugin: \"input_autogrow\" (Tom Select)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\n\nexport default function(this:TomSelect) {\n\tvar self = this;\n\tvar orig_deleteSelection = self.deleteSelection;\n\n\tthis.hook('instead','deleteSelection',(evt:KeyboardEvent) => {\n\n\t\tif( self.activeItems.length ){\n\t\t\treturn orig_deleteSelection.call(self, evt);\n\t\t}\n\n\t\treturn false;\n\t});\n\n};\n","/**\n * Plugin: \"remove_button\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport { getDom } from '../../vanilla';\nimport { escape_html, preventDefault, addEvent } from '../../utils';\nimport { TomOption, TomItem } from '../../types/index';\nimport { RBOptions } from './types';\n\nexport default function(this:TomSelect, userOptions:RBOptions) {\n\n\tconst options = Object.assign({\n\t\t\tlabel     : '&times;',\n\t\t\ttitle     : 'Remove',\n\t\t\tclassName : 'remove',\n\t\t\tappend    : true\n\t\t}, userOptions);\n\n\n\t//options.className = 'remove-single';\n\tvar self\t\t\t= this;\n\n\t// override the render method to add remove button to each item\n\tif( !options.append ){\n\t\treturn;\n\t}\n\n\tvar html = '<a href=\"javascript:void(0)\" class=\"' + options.className + '\" tabindex=\"-1\" title=\"' + escape_html(options.title) + '\">' + options.label + '</a>';\n\n\tself.hook('after','setupTemplates',() => {\n\n\t\tvar orig_render_item = self.settings.render.item;\n\n\t\tself.settings.render.item = (data:TomOption, escape:typeof escape_html) => {\n\n\t\t\tvar item = getDom(orig_render_item.call(self, data, escape)) as TomItem;\n\n\t\t\tvar close_button = getDom(html);\n\t\t\titem.appendChild(close_button);\n\n\t\t\taddEvent(close_button,'mousedown',(evt) => {\n\t\t\t\tpreventDefault(evt,true);\n\t\t\t});\n\n\t\t\taddEvent(close_button,'click',(evt) => {\n\n\t\t\t\t// propagating will trigger the dropdown to show for single mode\n\t\t\t\tpreventDefault(evt,true);\n\n\t\t\t\tif( self.isLocked ) return;\n\t\t\t\tif( !self.shouldDelete([item],evt as MouseEvent) ) return;\n\n\t\t\t\tself.removeItem(item);\n\t\t\t\tself.refreshOptions(false);\n\t\t\t\tself.inputState();\n\t\t\t});\n\n\t\t\treturn item;\n\t\t};\n\n\t});\n\n\n};\n","/**\n * Plugin: \"restore_on_backspace\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\nimport TomSelect from '../../tom-select';\nimport { TomOption } from '../../types/index';\n\ntype TPluginOptions = {\n\ttext?:(option:TomOption)=>string,\n};\n\nexport default function(this:TomSelect, userOptions:TPluginOptions) {\n\tconst self = this;\n\n\tconst options = Object.assign({\n\t\ttext: (option:TomOption) => {\n\t\t\treturn option[self.settings.labelField];\n\t\t}\n\t},userOptions);\n\n\tself.on('item_remove',function(value:string){\n\t\tif( !self.isFocused ){\n\t\t\treturn;\n\t\t}\n\n\t\tif( self.control_input.value.trim() === '' ){\n\t\t\tvar option = self.options[value];\n\t\t\tif( option ){\n\t\t\t\tself.setTextboxValue(options.text.call(self, option));\n\t\t\t}\n\t\t}\n\t});\n\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","__webpack_require__.p = \"/decidim-packs/\";","/**\n * Get coordinate input name from a given $input\n * @param {string} coordinate - Allows to find 'latitude' or 'longitude' field.\n * @param {jQuery} $input - Address input field\n * @param {Object} options (optional) - Extra options\n * @returns {string} - Returns input name\n */\nexport default function getCoordinateInputName(coordinate, $input, options) {\n  const key = `${coordinate}Name`;\n  if (options[key]) {\n    return options[key];\n  }\n\n  const inputName = $input.attr(\"name\");\n  const subNameMatch = /\\[[^\\]]+\\]$/;\n  if (inputName.match(subNameMatch)) {\n    return inputName.replace(subNameMatch, `[${coordinate}]`);\n  }\n\n  return coordinate;\n}\n","/* eslint-disable require-jsdoc */\nimport getCoordinateInputName from \"src/decidim/geocoding/coordinate_input\"\n\n/**\n * You can use this method to \"attach\" front-end geocoding to any forms in the\n * front-end which have address fields with geocoding autocompletion\n * functionality already applied to them.\n *\n * To learn more about the front-end geocoding autocompletion, please refer to\n * the maps documentation at: /docs/customization/maps.md.\n *\n * When the geocoding autocompletion finishes, most of the times, its results\n * will also contain the geocoordinate information for the selected address.\n * This method allows you to pass these coordinates (latitude and longitude)\n * to the same front-end form where the geocoding autocompletion address field\n * is located at (which is the $input you pass to this method). The latitude\n * and longitude coordinates will be added or \"attached\" to the form once the\n * user selects one of the suggested addresses.\n *\n * Therefore, if there was the following geocoding autocompletion field at\n * your form:\n *   <input\n *     id=\"record_address\"\n *     type=\"text\"\n *     name=\"record[address]\"\n *     data-decidim-geocoding=\"{&quot;url&quot;:&quot;https://photon.example.org/api/&quot;}\"\n *   />\n *\n * You would then \"attach\" the geocoding result coordinates to the same form\n * where this input is at as follows:\n *   $(document).ready(function() {\n *     window.Decidim.attachGeocoding($(\"#record_address\"));\n *   });\n *\n * Now, after the user selects one of the suggested geocoding autocompletion\n * addresses and the geocoding autocompletion API provides the coordinates in\n * the results, you would have the following fields automatically generated\n * to your form:\n *   <input id=\"record_address\" type=\"text\" name=\"record[address]\" value=\"Selected address, 00210, City\" ... />\n *   <input id=\"record_latitude\" type=\"hidden\" name=\"record[latitude]\" value=\"1.123\" />\n *   <input id=\"record_longitude\" type=\"hidden\" name=\"record[longitude]\" value=\"2.234\" />\n *\n * If you would not do the attachment, these hidden longitude and latitude\n * fields would not be generated and the geocoding would have to happen at the\n * server-side when the form is submitted. The problem with that approach\n * would be that the server-side address geocoding could potentially result in\n * different coordinates than what the user actually selected in the front-end\n * because the autocompletion API can return different coordinates than the\n * geocoding API. Another reason is to avoid unnecessary calls to the\n * geocoding API as the front-end geocoding suggestion already returned the\n * coordinate values we need.\n *\n * @param {jQuery} $input The input jQuery element for the geocoded address\n *   field.\n * @param {Object} options (optional) Extra options if you want to customize\n *   the latitude and longitude element IDs or names from the default.\n * @param {function} callback (optional) Callback to run when updating the coordinates values\n * @returns {void}\n */\n\nexport default function attachGeocoding($input, options, callback) {\n  const attachOptions = $.extend({}, options);\n  const inputIdParts = $input.attr(\"id\").split(\"_\");\n  inputIdParts.pop();\n\n  const idPrefix = `${inputIdParts.join(\"_\")}`;\n\n  let latitudeName = \"latitude\";\n  let longitudeName = \"longitude\";\n\n  if ($input.length > 0) {\n    latitudeName = getCoordinateInputName(\"latitude\", $input, attachOptions);\n    longitudeName = getCoordinateInputName(\"longitude\", $input, attachOptions);\n  }\n\n  const config = $.extend({\n    latitudeId: `${idPrefix}_latitude`,\n    longitudeId: `${idPrefix}_longitude`,\n    latitudeName: latitudeName,\n    longitudeName: longitudeName\n  }, options);\n  let geocoded = false;\n\n  const createCoordinateFields = () => {\n    let $latitude = $(`#${config.latitudeId}`);\n    if ($latitude.length < 1) {\n      $latitude = $(`<input type=\"hidden\" name=\"${config.latitudeName}\" id=\"${config.latitudeId}\" />`);\n      $input.after($latitude);\n    }\n\n    let $longitude = $(`#${config.longitudeId}`);\n    if ($longitude.length < 1) {\n      $longitude = $(`<input type=\"hidden\" name=\"${config.longitudeName}\" id=\"${config.longitudeId}\" />`);\n      $input.after($longitude);\n    }\n  }\n  const clearCoordinateFields = () => {\n    if (geocoded) {\n      return;\n    }\n\n    $(`#${config.latitudeId}`).val(\"\").removeAttr(\"value\");\n    $(`#${config.longitudeId}`).val(\"\").removeAttr(\"value\");\n  };\n  const setCoordinates = (coordinates) => {\n    createCoordinateFields();\n\n    $(`#${config.latitudeId}`).val(coordinates[0]).attr(\"value\", coordinates[0]);\n    $(`#${config.longitudeId}`).val(coordinates[1]).attr(\"value\", coordinates[1]);\n  }\n\n  // When the user changes the value of the coordinate field without selecting\n  // any of the geocoding autocomplete results, clear the current latitude and\n  // longitude values to let the backend do the geocoding. Once a geocoding\n  // autocomplete value has been selected, assume the user just wants to\n  // refine the address formatting without changing the location point value.\n  // If they want, they can still modify the point in the next step of the\n  // proposal creation/editing.\n  $input.on(\"change.decidim\", () => {\n    clearCoordinateFields();\n  });\n\n  // When we receive the geocoding event on the field, update the coordinate\n  // values.\n  $input.on(\"geocoder-suggest-coordinates.decidim\", (_ev, coordinates) => {\n    setCoordinates(coordinates);\n    geocoded = true;\n    if (typeof callback === \"function\") {\n      callback(coordinates);\n      return;\n    }\n  });\n\n  // Set the initial values if the field defines the coordinates\n  const coordinates = `${$input.data(\"coordinates\")}`.split(\",\").map(parseFloat);\n  if (Array.isArray(coordinates) && coordinates.length === 2) {\n    setCoordinates(coordinates);\n  }\n}\n","import attachGeocoding from \"src/decidim/geocoding/attach_input\"\n\n$(() => {\n  const $form = $(\".edit_polling_station, .new_polling_station\");\n\n  if ($form.length > 0) {\n    attachGeocoding($form.find(\"#polling_station_address\"));\n  }\n})\n","import TomSelect from \"tom-select/dist/cjs/tom-select.popular\";\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const tagContainers = document.querySelectorAll(\"#polling_officers_filter\");\n  tagContainers.forEach((container) => {\n    const { tmName, tmItems, tmNoResults } = container.dataset\n    const config = {\n      plugins: [\"remove_button\", \"dropdown_input\"],\n      allowEmptyOption: true,\n      items: JSON.parse(tmItems),\n      render: {\n        item: (data, escape) => `<div>${escape(data.text)}<input type=\"hidden\" name=\"${tmName}[]\" value=\"${data.value}\" /></div>`,\n        // eslint-disable-next-line camelcase\n        ...(tmNoResults && { no_results: () => `<div class=\"no-results\">${tmNoResults}</div>` })\n      }\n    };\n\n    return new TomSelect(container, config)\n  })\n});\n","/* eslint-disable require-jsdoc */\nclass FieldDependentInputsComponent {\n  constructor(options = {}) {\n    this.controllerField = options.controllerField;\n    this.wrapperSelector = options.wrapperSelector;\n    this.dependentFieldsSelector = options.dependentFieldsSelector;\n    this.dependentInputSelector = options.dependentInputSelector;\n    this.enablingCondition = options.enablingCondition;\n    this._bindEvent();\n    this._run();\n  }\n\n  _run() {\n    const $controllerField = this.controllerField;\n    const $dependentFields = $controllerField.parents(this.wrapperSelector).find(this.dependentFieldsSelector);\n    const $dependentInputs = $dependentFields.find(this.dependentInputSelector);\n\n    if (this.enablingCondition($controllerField)) {\n      $dependentInputs.prop(\"disabled\", false);\n      $dependentFields.show();\n    } else {\n      $dependentInputs.prop(\"disabled\", true);\n      $dependentFields.hide();\n    }\n  }\n\n  _bindEvent() {\n    this.controllerField.on(\"change\", () => {\n      this._run();\n    });\n  }\n}\n\nexport default function createFieldDependentInputs(options) {\n  return new FieldDependentInputsComponent(options);\n}\n\n","import createFieldDependentInputs from \"src/decidim/admin/field_dependent_inputs.component\"\n\n$(() => {\n  const $participantType = $(\"#voting_user_role_existing_user\");\n\n  createFieldDependentInputs({\n    controllerField: $participantType,\n    wrapperSelector: \".user-fields\",\n    dependentFieldsSelector: \".user-fields--email\",\n    dependentInputSelector: \"input\",\n    enablingCondition: ($field) => {\n      return $field.val() === \"false\"\n    }\n  });\n\n  createFieldDependentInputs({\n    controllerField: $participantType,\n    wrapperSelector: \".user-fields\",\n    dependentFieldsSelector: \".user-fields--name\",\n    dependentInputSelector: \"input\",\n    enablingCondition: ($field) => {\n      return $field.val() === \"false\"\n    }\n  });\n\n  createFieldDependentInputs({\n    controllerField: $participantType,\n    wrapperSelector: \".user-fields\",\n    dependentFieldsSelector: \".user-fields--user-picker\",\n    dependentInputSelector: \"input\",\n    enablingCondition: ($field) => {\n      return $field.val() === \"true\"\n    }\n  });\n})\n","import \"src/decidim/votings/admin/update_census_dataset_status\";\nimport \"src/decidim/votings/admin/polling_stations_form\";\nimport \"src/decidim/votings/admin/polling_officers_picker\";\nimport \"src/decidim/votings/admin/voting_user_role_form\";\n\n// Images\nrequire.context(\"../images\", true)\n\n// CSS\nimport \"stylesheets/decidim/votings/admin/votings.scss\"\n"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","$","setInterval","$wrapper","updateStatusUrl","data","length","get","_defineProperty","obj","key","value","_toPropertyKey","defineProperty","enumerable","configurable","writable","_regeneratorRuntime","generator","_slicedToArray","arr","i","Array","isArray","_arrayWithHoles","r","l","t","Symbol","iterator","n","u","a","f","call","next","done","push","_iterableToArrayLimit","_unsupportedIterableToArray","TypeError","_nonIterableRest","_createForOfIteratorHelper","allowArrayLike","it","F","s","_e","err","normalCompletion","didErr","step","_e2","minLen","_arrayLikeToArray","prototype","toString","slice","constructor","name","from","test","len","arr2","_callSuper","_getPrototypeOf","self","_typeof","_assertThisInitialized","_possibleConstructorReturn","_isNativeReflectConstruct","Reflect","construct","apply","ReferenceError","Boolean","valueOf","setPrototypeOf","getPrototypeOf","bind","__proto__","_inherits","subClass","superClass","create","_setPrototypeOf","p","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","_createClass","protoProps","staticProps","toPrimitive","String","Number","_toPrimitive","forEvents","events","callback","split","forEach","event","MicroEvent","_events","fct","_this","event_array","_this2","arguments","undefined","splice","indexOf","_len","args","_key","this","unicode_map","multi_char_reg","arrayToPattern","chars","filter","maxValueLength","join","sequencePattern","array","hasDuplicates","pattern","prev_char_count","prev_pattern","char","setToPattern","toArray","Set","size","escape_regex","str","replace","reduce","longest","Math","max","unicodeLength","allSubstrings","input","result","substring","subresult","tmp","charAt","unshift","code_points","max_char_length","latin_convert","latin_condensed","latin","unicode","convert_pat","RegExp","normalize","form","asciifold","_asciifold","toLowerCase","_iterator","_step","_step$value","code_point_min","code_point_max","_i","composed","folded","wrap","_context","prev","fromCharCode","abrupt","code_point","t0","finish","stop","_marked","generateMap","unicode_sets","_step2","addMatching","to_add","folded_set","patt","match","add","_iterator2","generateSets","multi_char","set","sort","b","multi_char_patt","substringsToPattern","min_replacement","sub_pat","strings","chars_replaced","mapSequence","sequencesToPattern","sequences","all","sequence","seq","j","substrs","inSequences","needle_seq","_step3","_iterator3","_ret","_loop","start","end","needle_parts","parts","part","_step4","_iterator4","needle_part","substr","v","Sequence","min","position","last_piece","_step5","clone","JSON","parse","stringify","last_part","pop","_iterator5","last_substr","clone_last_len","getPattern","_code_points","_step6","match_str","overlapping","added_types","_iterator6","last","_step7","_iterator7","has","new_seq","old_seq","getAttr","getAttrNesting","names","shift","scoreValue","token","weight","score","pos","regex","search","string","propToArray","iterate$1","object","hasOwnProperty","cmp","Sifter","items","settings","diacritics","query","respect_word_boundaries","weights","_this4","field_regex","tokens","words","word","field_match","field","options","prepareSearch","_getScoreFunction","token_count","fields","field_count","getAttrFn","scoreObject","sum","conjunction","_step8","_iterator8","_getSortFunction","implicit_score","sort_flds","sort_empty","get_field","_step9","_iterator9","_step10","_iterator10","direction","fld","_step11","_iterator11","sort_fld","optsUser","assign","trim","tokenize","total","nesting","fn_score","item","_","fn_sort","limit","iterate","getDom","jquery","HTMLElement","isHtmlString","tpl","document","createElement","innerHTML","content","firstChild","querySelector","arg","triggerEvent","dom_el","event_name","createEvent","initEvent","dispatchEvent","applyCSS","css","style","addClasses","elmts","_len4","classes","_key3","norm_classes","classesArray","castAsArray","el","cls","classList","removeClasses","_len5","_key4","remove","_classes","concat","parentMatch","selector","wrapper","contains","matches","parentNode","getTail","list","nodeIndex","amongst","nodeName","previousElementSibling","setAttr","attrs","val","attr","removeAttribute","setAttribute","replaceNode","existing","replacement","replaceChild","highlight","element","highlightChildren","node","nodeType","childNodes","tagName","className","highlightRecursive","spannode","middlebit","splitText","index","middleclone","cloneNode","appendChild","highlightText","KEY_SHORTCUT","navigator","userAgent","defaults","optgroups","plugins","delimiter","splitOn","persist","createOnBlur","createFilter","openOnFocus","shouldOpen","maxOptions","maxItems","hideSelected","duplicates","addPrecedence","selectOnTab","preload","allowEmptyOption","loadThrottle","loadingClass","dataAttr","optgroupField","valueField","labelField","disabledField","optgroupLabelField","optgroupValueField","lockOptgroupOrder","sortField","searchField","searchConjunction","mode","wrapperClass","controlClass","dropdownClass","dropdownContentClass","itemClass","optionClass","dropdownParent","controlInput","copyClassesToDropdown","placeholder","hidePlaceholder","shouldLoad","render","hash_key","get_hash","escape_html","debounce_events","types","fn","type","trigger","event_args","_step12","_iterator12","preventDefault","evt","stopPropagation","addEvent","addEventListener","isKeyDown","key_name","altKey","ctrlKey","shiftKey","metaKey","getId","existing_id","getAttribute","addSlashes","append","parent","getSettings","settings_user","attr_data","field_label","field_value","field_disabled","field_optgroup","field_optgroup_label","field_optgroup_value","tag_name","option","textContent","optionsMap","group_count","readData","addOption","settings_element","dataset","json","group","option_data","disabled","$option","selected","hasAttribute","children","child","optgroup","optgroup_data","data_raw","opt","values","init_textbox","Interface","instance_i","TomSelect","_MicroPlugin","input_arg","user_settings","_this5","dir","control_input","dropdown","control","dropdown_content","focus_node","order","tabIndex","is_select_tag","rtl","inputId","_destroy","sifter","isOpen","isDisabled","isRequired","isInvalid","isValid","isLocked","isFocused","isInputHidden","isSetup","ignoreFocus","ignoreHover","hasOptions","currentResults","lastValue","caretPos","loading","loadedSearches","activeOption","activeItems","userOptions","tomselect","window","getComputedStyle","getPropertyValue","required","initializePlugins","setupCallbacks","setupTemplates","_render","inputMode","setup","passive_event","passive","listboxId","role","delay","timeout","control_id","escapeQuery","label","label_click","focus","for","label_id","width","classes_plugins","multiple","load","clearTimeout","setTimeout","target_match","onOptionHover","capture","onOptionSelect","onItemSelect","onClick","onKeyDown","onKeyPress","onInput","onBlur","onFocus","onPaste","doc_mousedown","composedPath","blur","inputState","win_scroll","positionDropdown","removeEventListener","revertSettings","insertAdjacentElement","sync","refreshState","updateOriginalInput","refreshItems","close","disable","enable","on","onChange","_this6","addOptions","registerOptionGroup","templates","escape","callbacks","setupOptions","setValue","lastQuery","clearActiveItems","_this7","pastedText","inputValue","splitInput","piece","addItem","createItem","character","keyCode","which","selectAll","open","getAdjacent","setActiveOption","canSelect","activeElement","advanceSelection","deleteSelection","refreshOptions","wasFocused","showInput","hasFocus","deactivate","setActiveItem","setCaret","parentElement","closeAfterSelect","canLoad","loadCallback","clearActiveOption","silent","_this8","clear","addItems","eventName","begin","swap","getLastActive","setActiveItemClass","removeActiveItem","hideInput","last_active","idx","scroll","scrollToOption","behavior","height_menu","clientHeight","scrollTop","height_item","offsetHeight","y","getBoundingClientRect","top","scrollBehavior","controlChildren","setTextboxValue","toggle","offsetWidth","getScoreFunction","getSearchOptions","calculateScore","hashed","k","html","has_create_option","active_group","elements","triggerDropdown","groups","groups_order","same_query","results","active_option","show_dropdown","closest","opt_value","opt_hash","option_el","getOption","includes","group_fragment","createDocumentFragment","$id","grp_a","grp_b","$order","group_heading","group_options","header","group_html","querySelectorAll","tok","add_template","template","insertBefore","canCreate","active_index","selectable","user_created","_this9","dat","hashed_id","clearCache","item_new","index_item","value_old","value_new","data_old","getItem","uncacheValue","option_new","removeItem","boundFilter","clearFilter","$div","last_item","x","isPending","_this10","wasFull","isFull","insertAtCaret","removeOption","output","caret","lock","created","unlock","refreshValidityState","wrap_classList","validity","valid","opts","empty_option","AddSelected","has_selected","reuse_opt","getValue","visibility","display","context","rect","scrollY","left","scrollX","selection","tail","selectionStart","selectionEnd","rm_items","rm_item","shouldDelete","onDelete","adjacent","nextElementSibling","moveCaret","new_pos","off","templateName","when","method","new_fn","orig_method","result_new","_Interface","_class","_this3","_len2","_key2","requested","loaded","queue","plugin","require","loadPlugin","define","hook","div","orig_onBlur","relatedTarget","preventScroll","orig_deleteSelection","title","orig_render_item","close_button","text","__webpack_module_cache__","moduleId","cachedModule","__webpack_modules__","getter","__esModule","d","definition","prop","getCoordinateInputName","coordinate","$input","inputName","subNameMatch","attachGeocoding","attachOptions","extend","inputIdParts","idPrefix","latitudeName","longitudeName","config","latitudeId","longitudeId","geocoded","setCoordinates","coordinates","$latitude","after","$longitude","createCoordinateFields","removeAttr","_ev","parseFloat","$form","find","container","_container$dataset","tmName","tmItems","tmNoResults","_objectSpread","no_results","FieldDependentInputsComponent","controllerField","wrapperSelector","dependentFieldsSelector","dependentInputSelector","enablingCondition","_bindEvent","_run","$controllerField","$dependentFields","parents","$dependentInputs","show","hide","createFieldDependentInputs","$participantType","$field"],"sourceRoot":""}