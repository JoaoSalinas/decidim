{"version":3,"file":"js/_rbenv_versions_3_1_1_lib_ruby_gems_3_1_0_gems_decidim-elections-0_28_0_app_packs_src_decidim-efbb67.chunk.js","mappings":";;;;;;;;;;;;;;;;;;AAAA;;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://decidim-base/../.rbenv/versions/3.1.1/lib/ruby/gems/3.1.0/gems/decidim-elections-0.28.0/app/packs/src/decidim/elections/voter/setup-vote.js"],"sourcesContent":["/* eslint-disable require-jsdoc */\n\n// show a message to the user if comunication is lost\nimport \"src/decidim/elections/broken_promises_handler\";\nimport { VoteComponent } from \"@decidim/decidim-bulletin_board\";\n\nimport * as VotingSchemesDummy from \"@decidim/voting_schemes-dummy\";\nconst DummyVoterWrapperAdapter = VotingSchemesDummy.VoterWrapperAdapter;\nimport * as VotingSchemesElectionGuard from \"@decidim/voting_schemes-electionguard\";\nconst ElectionGuardVoterWrapperAdapter =\n  VotingSchemesElectionGuard.VoterWrapperAdapter;\n\nexport default function setupVoteComponent($voteWrapper) {\n  // Data\n  const bulletinBoardClientParams = {\n    apiEndpointUrl: $voteWrapper.data(\"apiEndpointUrl\")\n  };\n  const electionUniqueId = $voteWrapper.data(\"electionUniqueId\");\n  const authorityPublicKeyJSON = JSON.stringify(\n    $voteWrapper.data(\"authorityPublicKey\")\n  );\n  const voterUniqueId = $voteWrapper.data(\"voterId\");\n  const schemeName = $voteWrapper.data(\"schemeName\");\n\n  // Use the correct voter wrapper adapter\n  let voterWrapperAdapter = null;\n\n  if (schemeName === \"dummy\") {\n    voterWrapperAdapter = new DummyVoterWrapperAdapter({\n      voterId: voterUniqueId\n    });\n  } else if (schemeName === \"electionguard\") {\n    voterWrapperAdapter = new ElectionGuardVoterWrapperAdapter({\n      voterId: voterUniqueId,\n      workerUrl: \"/assets/electionguard/webworker.js\"\n    });\n  } else {\n    throw new Error(`Voting scheme ${schemeName} not supported.`);\n  }\n\n  // Returns the vote component\n  return new VoteComponent({\n    bulletinBoardClientParams,\n    authorityPublicKeyJSON,\n    electionUniqueId,\n    voterUniqueId,\n    voterWrapperAdapter\n  });\n}\n"],"names":[],"sourceRoot":""}